# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: backtesting/backtesting_service.proto
# Protobuf Python Version: 5.29.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    29,
    0,
    '',
    'backtesting/backtesting_service.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from common import common_types_pb2 as common_dot_common__types__pb2
from common import error_types_pb2 as common_dot_error__types__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n%backtesting/backtesting_service.proto\x12\x11\x66orex.backtesting\x1a\x19\x63ommon/common_types.proto\x1a\x18\x63ommon/error_types.proto\">\n\x11StrategyParameter\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\x12\x0c\n\x04type\x18\x03 \x01(\t\"\x86\x02\n\x05Trade\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0e\n\x06symbol\x18\x02 \x01(\t\x12\x11\n\tdirection\x18\x03 \x01(\t\x12\x13\n\x0b\x65ntry_price\x18\x04 \x01(\x01\x12\x12\n\nexit_price\x18\x05 \x01(\x01\x12+\n\nentry_time\x18\x06 \x01(\x0b\x32\x17.forex.common.Timestamp\x12*\n\texit_time\x18\x07 \x01(\x0b\x32\x17.forex.common.Timestamp\x12\x15\n\rposition_size\x18\x08 \x01(\x01\x12\x0b\n\x03pnl\x18\t \x01(\x01\x12(\n\x08metadata\x18\n \x01(\x0b\x32\x16.forex.common.Metadata\"E\n\x11PerformanceMetric\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\"\xd6\x05\n\x0e\x42\x61\x63ktestResult\x12\n\n\x02id\x18\x01 \x01(\t\x12\x15\n\rstrategy_name\x18\x02 \x01(\t\x12$\n\x06symbol\x18\x03 \x01(\x0b\x32\x14.forex.common.Symbol\x12*\n\ttimeframe\x18\x04 \x01(\x0b\x32\x17.forex.common.Timeframe\x12+\n\nstart_date\x18\x05 \x01(\x0b\x32\x17.forex.common.Timestamp\x12)\n\x08\x65nd_date\x18\x06 \x01(\x0b\x32\x17.forex.common.Timestamp\x12\x17\n\x0finitial_capital\x18\x07 \x01(\x01\x12\x15\n\rfinal_capital\x18\x08 \x01(\x01\x12\x14\n\x0ctotal_return\x18\t \x01(\x01\x12\x19\n\x11\x61nnualized_return\x18\n \x01(\x01\x12\x14\n\x0csharpe_ratio\x18\x0b \x01(\x01\x12\x14\n\x0cmax_drawdown\x18\x0c \x01(\x01\x12\x10\n\x08win_rate\x18\r \x01(\x01\x12\x15\n\rprofit_factor\x18\x0e \x01(\x01\x12(\n\x06trades\x18\x0f \x03(\x0b\x32\x18.forex.backtesting.Trade\x12\x35\n\x07metrics\x18\x10 \x03(\x0b\x32$.forex.backtesting.PerformanceMetric\x12\x38\n\nparameters\x18\x11 \x03(\x0b\x32$.forex.backtesting.StrategyParameter\x12H\n\x0c\x65quity_curve\x18\x12 \x03(\x0b\x32\x32.forex.backtesting.BacktestResult.EquityCurveEntry\x12(\n\x08metadata\x18\x13 \x01(\x0b\x32\x16.forex.common.Metadata\x1a\x32\n\x10\x45quityCurveEntry\x12\x0b\n\x03key\x18\x01 \x01(\x03\x12\r\n\x05value\x18\x02 \x01(\x01:\x02\x38\x01\"\x9d\x03\n\x12RunBacktestRequest\x12\x15\n\rstrategy_name\x18\x01 \x01(\t\x12$\n\x06symbol\x18\x02 \x01(\x0b\x32\x14.forex.common.Symbol\x12*\n\ttimeframe\x18\x03 \x01(\x0b\x32\x17.forex.common.Timeframe\x12+\n\nstart_date\x18\x04 \x01(\x0b\x32\x17.forex.common.Timestamp\x12)\n\x08\x65nd_date\x18\x05 \x01(\x0b\x32\x17.forex.common.Timestamp\x12\x17\n\x0finitial_capital\x18\x06 \x01(\x01\x12\x38\n\nparameters\x18\x07 \x03(\x0b\x32$.forex.backtesting.StrategyParameter\x12\x43\n\x07options\x18\x08 \x03(\x0b\x32\x32.forex.backtesting.RunBacktestRequest.OptionsEntry\x1a.\n\x0cOptionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x85\x01\n\x13RunBacktestResponse\x12\x31\n\x06result\x18\x01 \x01(\x0b\x32!.forex.backtesting.BacktestResult\x12\x0f\n\x07task_id\x18\x02 \x01(\t\x12*\n\x05\x65rror\x18\x03 \x01(\x0b\x32\x1b.forex.common.ErrorResponse\"&\n\x18GetBacktestResultRequest\x12\n\n\x02id\x18\x01 \x01(\t\"\x8a\x01\n\x19GetBacktestResultResponse\x12\x31\n\x06result\x18\x01 \x01(\x0b\x32!.forex.backtesting.BacktestResult\x12\x0e\n\x06status\x18\x02 \x01(\t\x12*\n\x05\x65rror\x18\x03 \x01(\x0b\x32\x1b.forex.common.ErrorResponse\"V\n\x0eParameterRange\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0b\n\x03min\x18\x02 \x01(\x01\x12\x0b\n\x03max\x18\x03 \x01(\x01\x12\x0c\n\x04step\x18\x04 \x01(\x01\x12\x0e\n\x06values\x18\x05 \x03(\x01\"\xf4\x04\n\x12OptimizationResult\x12\n\n\x02id\x18\x01 \x01(\t\x12\x15\n\rstrategy_name\x18\x02 \x01(\t\x12$\n\x06symbol\x18\x03 \x01(\x0b\x32\x14.forex.common.Symbol\x12*\n\ttimeframe\x18\x04 \x01(\x0b\x32\x17.forex.common.Timeframe\x12+\n\nstart_date\x18\x05 \x01(\x0b\x32\x17.forex.common.Timestamp\x12)\n\x08\x65nd_date\x18\x06 \x01(\x0b\x32\x17.forex.common.Timestamp\x12\x11\n\tobjective\x18\x07 \x01(\t\x12;\n\x10parameter_ranges\x18\x08 \x03(\x0b\x32!.forex.backtesting.ParameterRange\x12=\n\x0f\x62\x65st_parameters\x18\t \x03(\x0b\x32$.forex.backtesting.StrategyParameter\x12\x36\n\x0b\x62\x65st_result\x18\n \x01(\x0b\x32!.forex.backtesting.BacktestResult\x12J\n\x0b\x61ll_results\x18\x0b \x03(\x0b\x32\x35.forex.backtesting.OptimizationResult.AllResultsEntry\x12(\n\x08metadata\x18\x0c \x01(\x0b\x32\x16.forex.common.Metadata\x1aT\n\x0f\x41llResultsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x30\n\x05value\x18\x02 \x01(\x0b\x32!.forex.backtesting.BacktestResult:\x02\x38\x01\"\xbb\x03\n\x16RunOptimizationRequest\x12\x15\n\rstrategy_name\x18\x01 \x01(\t\x12$\n\x06symbol\x18\x02 \x01(\x0b\x32\x14.forex.common.Symbol\x12*\n\ttimeframe\x18\x03 \x01(\x0b\x32\x17.forex.common.Timeframe\x12+\n\nstart_date\x18\x04 \x01(\x0b\x32\x17.forex.common.Timestamp\x12)\n\x08\x65nd_date\x18\x05 \x01(\x0b\x32\x17.forex.common.Timestamp\x12\x17\n\x0finitial_capital\x18\x06 \x01(\x01\x12;\n\x10parameter_ranges\x18\x07 \x03(\x0b\x32!.forex.backtesting.ParameterRange\x12\x11\n\tobjective\x18\x08 \x01(\t\x12G\n\x07options\x18\t \x03(\x0b\x32\x36.forex.backtesting.RunOptimizationRequest.OptionsEntry\x1a.\n\x0cOptionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x8d\x01\n\x17RunOptimizationResponse\x12\x35\n\x06result\x18\x01 \x01(\x0b\x32%.forex.backtesting.OptimizationResult\x12\x0f\n\x07task_id\x18\x02 \x01(\t\x12*\n\x05\x65rror\x18\x03 \x01(\x0b\x32\x1b.forex.common.ErrorResponse\"*\n\x1cGetOptimizationResultRequest\x12\n\n\x02id\x18\x01 \x01(\t\"\x92\x01\n\x1dGetOptimizationResultResponse\x12\x35\n\x06result\x18\x01 \x01(\x0b\x32%.forex.backtesting.OptimizationResult\x12\x0e\n\x06status\x18\x02 \x01(\t\x12*\n\x05\x65rror\x18\x03 \x01(\x0b\x32\x1b.forex.common.ErrorResponse\"\xeb\x02\n\x11WalkForwardWindow\x12\n\n\x02id\x18\x01 \x01(\t\x12\x30\n\x0fin_sample_start\x18\x02 \x01(\x0b\x32\x17.forex.common.Timestamp\x12.\n\rin_sample_end\x18\x03 \x01(\x0b\x32\x17.forex.common.Timestamp\x12\x34\n\x13out_of_sample_start\x18\x04 \x01(\x0b\x32\x17.forex.common.Timestamp\x12\x32\n\x11out_of_sample_end\x18\x05 \x01(\x0b\x32\x17.forex.common.Timestamp\x12\x42\n\x13optimization_result\x18\x06 \x01(\x0b\x32%.forex.backtesting.OptimizationResult\x12:\n\x0f\x62\x61\x63ktest_result\x18\x07 \x01(\x0b\x32!.forex.backtesting.BacktestResult\"\xa0\x03\n\x11WalkForwardResult\x12\n\n\x02id\x18\x01 \x01(\t\x12\x15\n\rstrategy_name\x18\x02 \x01(\t\x12$\n\x06symbol\x18\x03 \x01(\x0b\x32\x14.forex.common.Symbol\x12*\n\ttimeframe\x18\x04 \x01(\x0b\x32\x17.forex.common.Timeframe\x12+\n\nstart_date\x18\x05 \x01(\x0b\x32\x17.forex.common.Timestamp\x12)\n\x08\x65nd_date\x18\x06 \x01(\x0b\x32\x17.forex.common.Timestamp\x12\x13\n\x0bwindow_size\x18\x07 \x01(\x05\x12\x11\n\tstep_size\x18\x08 \x01(\x05\x12\x35\n\x07windows\x18\t \x03(\x0b\x32$.forex.backtesting.WalkForwardWindow\x12\x35\n\x07metrics\x18\n \x03(\x0b\x32$.forex.backtesting.PerformanceMetric\x12(\n\x08metadata\x18\x0b \x01(\x0b\x32\x16.forex.common.Metadata\"\xf1\x03\n\x1dRunWalkForwardAnalysisRequest\x12\x15\n\rstrategy_name\x18\x01 \x01(\t\x12$\n\x06symbol\x18\x02 \x01(\x0b\x32\x14.forex.common.Symbol\x12*\n\ttimeframe\x18\x03 \x01(\x0b\x32\x17.forex.common.Timeframe\x12+\n\nstart_date\x18\x04 \x01(\x0b\x32\x17.forex.common.Timestamp\x12)\n\x08\x65nd_date\x18\x05 \x01(\x0b\x32\x17.forex.common.Timestamp\x12\x17\n\x0finitial_capital\x18\x06 \x01(\x01\x12\x13\n\x0bwindow_size\x18\x07 \x01(\x05\x12\x11\n\tstep_size\x18\x08 \x01(\x05\x12;\n\x10parameter_ranges\x18\t \x03(\x0b\x32!.forex.backtesting.ParameterRange\x12\x11\n\tobjective\x18\n \x01(\t\x12N\n\x07options\x18\x0b \x03(\x0b\x32=.forex.backtesting.RunWalkForwardAnalysisRequest.OptionsEntry\x1a.\n\x0cOptionsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x93\x01\n\x1eRunWalkForwardAnalysisResponse\x12\x34\n\x06result\x18\x01 \x01(\x0b\x32$.forex.backtesting.WalkForwardResult\x12\x0f\n\x07task_id\x18\x02 \x01(\t\x12*\n\x05\x65rror\x18\x03 \x01(\x0b\x32\x1b.forex.common.ErrorResponse\")\n\x1bGetWalkForwardResultRequest\x12\n\n\x02id\x18\x01 \x01(\t\"\x90\x01\n\x1cGetWalkForwardResultResponse\x12\x34\n\x06result\x18\x01 \x01(\x0b\x32$.forex.backtesting.WalkForwardResult\x12\x0e\n\x06status\x18\x02 \x01(\t\x12*\n\x05\x65rror\x18\x03 \x01(\x0b\x32\x1b.forex.common.ErrorResponse2\xc0\x05\n\x12\x42\x61\x63ktestingService\x12\\\n\x0bRunBacktest\x12%.forex.backtesting.RunBacktestRequest\x1a&.forex.backtesting.RunBacktestResponse\x12n\n\x11GetBacktestResult\x12+.forex.backtesting.GetBacktestResultRequest\x1a,.forex.backtesting.GetBacktestResultResponse\x12h\n\x0fRunOptimization\x12).forex.backtesting.RunOptimizationRequest\x1a*.forex.backtesting.RunOptimizationResponse\x12z\n\x15GetOptimizationResult\x12/.forex.backtesting.GetOptimizationResultRequest\x1a\x30.forex.backtesting.GetOptimizationResultResponse\x12}\n\x16RunWalkForwardAnalysis\x12\x30.forex.backtesting.RunWalkForwardAnalysisRequest\x1a\x31.forex.backtesting.RunWalkForwardAnalysisResponse\x12w\n\x14GetWalkForwardResult\x12..forex.backtesting.GetWalkForwardResultRequest\x1a/.forex.backtesting.GetWalkForwardResultResponseBU\n\x1d\x63om.olevar2.forex.backtestingP\x01Z2github.com/olevar2/MD/common-lib/proto/backtestingb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'backtesting.backtesting_service_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\035com.olevar2.forex.backtestingP\001Z2github.com/olevar2/MD/common-lib/proto/backtesting'
  _globals['_BACKTESTRESULT_EQUITYCURVEENTRY']._loaded_options = None
  _globals['_BACKTESTRESULT_EQUITYCURVEENTRY']._serialized_options = b'8\001'
  _globals['_RUNBACKTESTREQUEST_OPTIONSENTRY']._loaded_options = None
  _globals['_RUNBACKTESTREQUEST_OPTIONSENTRY']._serialized_options = b'8\001'
  _globals['_OPTIMIZATIONRESULT_ALLRESULTSENTRY']._loaded_options = None
  _globals['_OPTIMIZATIONRESULT_ALLRESULTSENTRY']._serialized_options = b'8\001'
  _globals['_RUNOPTIMIZATIONREQUEST_OPTIONSENTRY']._loaded_options = None
  _globals['_RUNOPTIMIZATIONREQUEST_OPTIONSENTRY']._serialized_options = b'8\001'
  _globals['_RUNWALKFORWARDANALYSISREQUEST_OPTIONSENTRY']._loaded_options = None
  _globals['_RUNWALKFORWARDANALYSISREQUEST_OPTIONSENTRY']._serialized_options = b'8\001'
  _globals['_STRATEGYPARAMETER']._serialized_start=113
  _globals['_STRATEGYPARAMETER']._serialized_end=175
  _globals['_TRADE']._serialized_start=178
  _globals['_TRADE']._serialized_end=440
  _globals['_PERFORMANCEMETRIC']._serialized_start=442
  _globals['_PERFORMANCEMETRIC']._serialized_end=511
  _globals['_BACKTESTRESULT']._serialized_start=514
  _globals['_BACKTESTRESULT']._serialized_end=1240
  _globals['_BACKTESTRESULT_EQUITYCURVEENTRY']._serialized_start=1190
  _globals['_BACKTESTRESULT_EQUITYCURVEENTRY']._serialized_end=1240
  _globals['_RUNBACKTESTREQUEST']._serialized_start=1243
  _globals['_RUNBACKTESTREQUEST']._serialized_end=1656
  _globals['_RUNBACKTESTREQUEST_OPTIONSENTRY']._serialized_start=1610
  _globals['_RUNBACKTESTREQUEST_OPTIONSENTRY']._serialized_end=1656
  _globals['_RUNBACKTESTRESPONSE']._serialized_start=1659
  _globals['_RUNBACKTESTRESPONSE']._serialized_end=1792
  _globals['_GETBACKTESTRESULTREQUEST']._serialized_start=1794
  _globals['_GETBACKTESTRESULTREQUEST']._serialized_end=1832
  _globals['_GETBACKTESTRESULTRESPONSE']._serialized_start=1835
  _globals['_GETBACKTESTRESULTRESPONSE']._serialized_end=1973
  _globals['_PARAMETERRANGE']._serialized_start=1975
  _globals['_PARAMETERRANGE']._serialized_end=2061
  _globals['_OPTIMIZATIONRESULT']._serialized_start=2064
  _globals['_OPTIMIZATIONRESULT']._serialized_end=2692
  _globals['_OPTIMIZATIONRESULT_ALLRESULTSENTRY']._serialized_start=2608
  _globals['_OPTIMIZATIONRESULT_ALLRESULTSENTRY']._serialized_end=2692
  _globals['_RUNOPTIMIZATIONREQUEST']._serialized_start=2695
  _globals['_RUNOPTIMIZATIONREQUEST']._serialized_end=3138
  _globals['_RUNOPTIMIZATIONREQUEST_OPTIONSENTRY']._serialized_start=1610
  _globals['_RUNOPTIMIZATIONREQUEST_OPTIONSENTRY']._serialized_end=1656
  _globals['_RUNOPTIMIZATIONRESPONSE']._serialized_start=3141
  _globals['_RUNOPTIMIZATIONRESPONSE']._serialized_end=3282
  _globals['_GETOPTIMIZATIONRESULTREQUEST']._serialized_start=3284
  _globals['_GETOPTIMIZATIONRESULTREQUEST']._serialized_end=3326
  _globals['_GETOPTIMIZATIONRESULTRESPONSE']._serialized_start=3329
  _globals['_GETOPTIMIZATIONRESULTRESPONSE']._serialized_end=3475
  _globals['_WALKFORWARDWINDOW']._serialized_start=3478
  _globals['_WALKFORWARDWINDOW']._serialized_end=3841
  _globals['_WALKFORWARDRESULT']._serialized_start=3844
  _globals['_WALKFORWARDRESULT']._serialized_end=4260
  _globals['_RUNWALKFORWARDANALYSISREQUEST']._serialized_start=4263
  _globals['_RUNWALKFORWARDANALYSISREQUEST']._serialized_end=4760
  _globals['_RUNWALKFORWARDANALYSISREQUEST_OPTIONSENTRY']._serialized_start=1610
  _globals['_RUNWALKFORWARDANALYSISREQUEST_OPTIONSENTRY']._serialized_end=1656
  _globals['_RUNWALKFORWARDANALYSISRESPONSE']._serialized_start=4763
  _globals['_RUNWALKFORWARDANALYSISRESPONSE']._serialized_end=4910
  _globals['_GETWALKFORWARDRESULTREQUEST']._serialized_start=4912
  _globals['_GETWALKFORWARDRESULTREQUEST']._serialized_end=4953
  _globals['_GETWALKFORWARDRESULTRESPONSE']._serialized_start=4956
  _globals['_GETWALKFORWARDRESULTRESPONSE']._serialized_end=5100
  _globals['_BACKTESTINGSERVICE']._serialized_start=5103
  _globals['_BACKTESTINGSERVICE']._serialized_end=5807
# @@protoc_insertion_point(module_scope)

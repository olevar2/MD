syntax = "proto3";

package trading_gateway_service;

import "common.proto";
import "google/api/annotations.proto"; // Added for gRPC-Gateway HTTP options

// Service for managing trading orders.
service TradingGatewayService {
  // Executes a trading order.
  rpc ExecuteOrder(OrderRequest) returns (ExecutionReport) {
    option (google.api.http) = {
      post: "/v1/trading/orders/execute"
      body: "*"
    };
  }
}

// Represents a request to place a trading order.
message OrderRequest {
  common.UUID order_id = 1;
  string instrument_symbol = 2;
  OrderType order_type = 3;
  double quantity = 4;
  double price = 5; // Optional: specify for limit orders
  common.Timestamp timestamp = 6;
}

// Represents the execution report for an order.
message ExecutionReport {
  common.UUID order_id = 1;
  common.UUID execution_id = 2;
  OrderStatus status = 3;
  double filled_quantity = 4;
  double average_price = 5;
  common.Timestamp timestamp = 6;
  optional string message = 7; // Optional: for additional information or error messages
}

// Enum for order types.
enum OrderType {
  ORDER_TYPE_UNSPECIFIED = 0;
  MARKET = 1;
  LIMIT = 2;
}

// Enum for order status.
enum OrderStatus {
  ORDER_STATUS_UNSPECIFIED = 0;
  PENDING = 1;
  FILLED = 2;
  PARTIALLY_FILLED = 3;
  CANCELLED = 4;
  REJECTED = 5;
}

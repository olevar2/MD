{
  "performance_monitoring": {
    "services": [
      "analysis-engine-service",
      "data-pipeline-service",
      "feature-store-service",
      "ml-workbench-service",
      "monitoring-alerting-service",
      "trading-gateway-service",
      "common-lib"
    ],
    "implementations": [
      {
        "service": "analysis-engine-service",
        "files": [
          "analysis-engine-service\\main.py",
          "analysis-engine-service\\analysis_engine\\analysis\\base_analyzer.py",
          "analysis-engine-service\\analysis_engine\\analysis\\confluence\\confluence_analyzer.py",
          "analysis-engine-service\\analysis_engine\\core\\analysis_engine.py",
          "analysis-engine-service\\analysis_engine\\core\\base\\components.py",
          "analysis-engine-service\\analysis_engine\\core\\monitoring\\async_performance_monitor.py",
          "analysis-engine-service\\analysis_engine\\monitoring\\performance_monitoring.py",
          "analysis-engine-service\\analysis_engine\\multi_asset\\related_pairs_confluence_detector.py",
          "analysis-engine-service\\analysis_engine\\utils\\distributed_tracing.py",
          "analysis-engine-service\\tests\\core\\base\\test_components.py"
        ]
      },
      {
        "service": "data-pipeline-service",
        "files": [
          "data-pipeline-service\\data_pipeline_service\\monitoring\\query_performance.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\parallel_processing_framework.py"
        ]
      },
      {
        "service": "feature-store-service",
        "files": [
          "feature-store-service\\feature_store_service\\computation\\incremental_calculator.py",
          "feature-store-service\\feature_store_service\\core\\feature_store.py",
          "feature-store-service\\feature_store_service\\error\\monitoring_service.py",
          "feature-store-service\\feature_store_service\\indicators\\performance_enhanced_indicator.py",
          "feature-store-service\\feature_store_service\\middleware\\request_tracking.py",
          "feature-store-service\\feature_store_service\\monitoring\\indicator_monitoring.py",
          "feature-store-service\\feature_store_service\\monitoring\\performance_monitoring.py",
          "feature-store-service\\tests\\error\\test_monitoring_service.py",
          "feature-store-service\\tests\\optimization\\test_performance_optimizer.py"
        ]
      },
      {
        "service": "ml-workbench-service",
        "files": [
          "ml-workbench-service\\ml_workbench_service\\optimization\\model_serving_optimizer.py"
        ]
      },
      {
        "service": "monitoring-alerting-service",
        "files": [
          "monitoring-alerting-service\\metrics_exporters\\api_metrics.py",
          "monitoring-alerting-service\\metrics_exporters\\performance_tracker.py",
          "monitoring-alerting-service\\monitoring_alerting_service\\adapters\\ml_integration_adapter.py"
        ]
      },
      {
        "service": "trading-gateway-service",
        "files": [
          "trading-gateway-service\\trading_gateway_service\\main.py",
          "trading-gateway-service\\trading_gateway_service\\monitoring\\performance_monitoring.py",
          "trading-gateway-service\\trading_gateway_service\\simulation\\paper_trading_system.py"
        ]
      },
      {
        "service": "common-lib",
        "files": [
          "common-lib\\common_lib\\monitoring\\middleware.py"
        ]
      }
    ],
    "similar_files": [
      {
        "hash": "d41d8cd98f00b204e9800998ecf8427e",
        "files": [
          "analysis-engine-service\\analysis_engine\\analysis\\base_analyzer.py",
          "analysis-engine-service\\analysis_engine\\core\\analysis_engine.py",
          "analysis-engine-service\\analysis_engine\\core\\monitoring\\async_performance_monitor.py",
          "analysis-engine-service\\analysis_engine\\multi_asset\\related_pairs_confluence_detector.py",
          "analysis-engine-service\\analysis_engine\\utils\\distributed_tracing.py",
          "analysis-engine-service\\tests\\core\\base\\test_components.py",
          "data-pipeline-service\\data_pipeline_service\\monitoring\\query_performance.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\parallel_processing_framework.py",
          "feature-store-service\\feature_store_service\\computation\\incremental_calculator.py",
          "feature-store-service\\feature_store_service\\core\\feature_store.py",
          "feature-store-service\\feature_store_service\\middleware\\request_tracking.py",
          "feature-store-service\\feature_store_service\\monitoring\\indicator_monitoring.py",
          "feature-store-service\\tests\\error\\test_monitoring_service.py",
          "feature-store-service\\tests\\optimization\\test_performance_optimizer.py",
          "ml-workbench-service\\ml_workbench_service\\optimization\\model_serving_optimizer.py",
          "monitoring-alerting-service\\monitoring_alerting_service\\adapters\\ml_integration_adapter.py",
          "trading-gateway-service\\trading_gateway_service\\main.py",
          "common-lib\\common_lib\\monitoring\\middleware.py",
          "analysis-engine-service\\analysis_engine\\analysis\\multi_timeframe_analyzer.py",
          "analysis-engine-service\\analysis_engine\\multi_asset\\optimized_confluence_detector.py",
          "analysis-engine-service\\analysis_engine\\utils\\optimized_parallel_processor.py",
          "analysis-engine-service\\analysis_engine\\utils\\platform_compatibility.py",
          "analysis-engine-service\\tests\\analysis\\confluence\\test_confluence_analyzer_performance.py",
          "analysis-engine-service\\tests\\integration\\test_optimized_components_integration.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\batch_feature_processor.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\error_handling.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\multi_instrument_processor.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\multi_timeframe_processor.py",
          "data-pipeline-service\\examples\\parallel_processing_example.py",
          "feature-store-service\\feature_store_service\\services\\time_series_data_service.py",
          "ml-integration-service\\ml_integration_service\\parallel\\parallel_inference.py",
          "ml-workbench-service\\ml_workbench_service\\optimization\\feature_engineering_optimizer.py",
          "ml-workbench-service\\ml_workbench_service\\optimization\\ml_pipeline_integrator.py",
          "ml-workbench-service\\tests\\optimization\\test_feature_engineering_optimizer.py",
          "common-lib\\common_lib\\utils\\parallel_processor.py",
          "common-lib\\common_lib\\utils\\platform_compatibility.py",
          "analysis-engine-service\\analysis_engine\\core\\exceptions_bridge.py",
          "common-lib\\common_lib\\errors\\decorators.py",
          "analysis-engine-service\\analysis_engine\\utils\\adaptive_cache_manager.py",
          "analysis-engine-service\\analysis_engine\\utils\\cache_manager.py",
          "analysis-engine-service\\tests\\simple_test.py",
          "analysis-engine-service\\tests\\core\\test_database.py",
          "analysis-engine-service\\analysis_engine\\utils\\memory_optimized_dataframe.py",
          "common-lib\\common_lib\\utils\\memory_optimized_dataframe.py"
        ]
      },
      {
        "hash": "b039cbf3f6e56b2e146604df3018b8c2",
        "files": [
          "analysis-engine-service\\analysis_engine\\analysis\\confluence\\confluence_analyzer.py",
          "analysis-engine-service\\analysis_engine\\monitoring\\performance_monitoring.py",
          "feature-store-service\\feature_store_service\\error\\monitoring_service.py",
          "feature-store-service\\feature_store_service\\indicators\\performance_enhanced_indicator.py",
          "feature-store-service\\feature_store_service\\monitoring\\performance_monitoring.py",
          "trading-gateway-service\\trading_gateway_service\\monitoring\\performance_monitoring.py",
          "trading-gateway-service\\trading_gateway_service\\simulation\\paper_trading_system.py",
          "feature-store-service\\feature_store_service\\indicators\\incremental\\processor.py",
          "monitoring-alerting-service\\monitoring_alerting_service\\error\\exceptions_bridge.py",
          "portfolio-management-service\\portfolio_management_service\\error\\exceptions_bridge.py",
          "strategy-execution-engine\\strategy_execution_engine\\error\\exceptions_bridge.py",
          "trading-gateway-service\\trading_gateway_service\\error\\exceptions_bridge.py",
          "feature-store-service\\feature_store_service\\optimization\\resource_manager.py"
        ]
      },
      {
        "hash": "b6fa0001879d3d8fa06430ea98806d8c",
        "files": [
          "monitoring-alerting-service\\metrics_exporters\\api_metrics.py",
          "monitoring-alerting-service\\metrics_exporters\\performance_tracker.py"
        ]
      }
    ]
  },
  "parallel_processor": {
    "services": [
      "analysis-engine-service",
      "data-pipeline-service",
      "feature-store-service",
      "ml-integration-service",
      "ml-workbench-service",
      "common-lib"
    ],
    "implementations": [
      {
        "service": "analysis-engine-service",
        "files": [
          "analysis-engine-service\\analysis_engine\\analysis\\multi_timeframe_analyzer.py",
          "analysis-engine-service\\analysis_engine\\analysis\\confluence\\confluence_analyzer.py",
          "analysis-engine-service\\analysis_engine\\multi_asset\\optimized_confluence_detector.py",
          "analysis-engine-service\\analysis_engine\\multi_asset\\related_pairs_confluence_detector.py",
          "analysis-engine-service\\analysis_engine\\utils\\optimized_parallel_processor.py",
          "analysis-engine-service\\analysis_engine\\utils\\platform_compatibility.py",
          "analysis-engine-service\\tests\\analysis\\confluence\\test_confluence_analyzer_performance.py",
          "analysis-engine-service\\tests\\integration\\test_optimized_components_integration.py"
        ]
      },
      {
        "service": "data-pipeline-service",
        "files": [
          "data-pipeline-service\\data_pipeline_service\\parallel\\batch_feature_processor.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\error_handling.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\multi_instrument_processor.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\multi_timeframe_processor.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\parallel_processing_framework.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\__init__.py",
          "data-pipeline-service\\examples\\parallel_processing_example.py"
        ]
      },
      {
        "service": "feature-store-service",
        "files": [
          "feature-store-service\\feature_store_service\\indicators\\incremental\\processor.py",
          "feature-store-service\\feature_store_service\\services\\time_series_data_service.py"
        ]
      },
      {
        "service": "ml-integration-service",
        "files": [
          "ml-integration-service\\ml_integration_service\\parallel\\parallel_inference.py",
          "ml-integration-service\\ml_integration_service\\parallel\\__init__.py"
        ]
      },
      {
        "service": "ml-workbench-service",
        "files": [
          "ml-workbench-service\\ml_workbench_service\\optimization\\feature_engineering_optimizer.py",
          "ml-workbench-service\\ml_workbench_service\\optimization\\ml_pipeline_integrator.py",
          "ml-workbench-service\\ml_workbench_service\\optimization\\__init__.py",
          "ml-workbench-service\\tests\\optimization\\test_feature_engineering_optimizer.py"
        ]
      },
      {
        "service": "common-lib",
        "files": [
          "common-lib\\common_lib\\utils\\parallel_processor.py",
          "common-lib\\common_lib\\utils\\platform_compatibility.py"
        ]
      }
    ],
    "similar_files": [
      {
        "hash": "d41d8cd98f00b204e9800998ecf8427e",
        "files": [
          "analysis-engine-service\\analysis_engine\\analysis\\base_analyzer.py",
          "analysis-engine-service\\analysis_engine\\core\\analysis_engine.py",
          "analysis-engine-service\\analysis_engine\\core\\monitoring\\async_performance_monitor.py",
          "analysis-engine-service\\analysis_engine\\multi_asset\\related_pairs_confluence_detector.py",
          "analysis-engine-service\\analysis_engine\\utils\\distributed_tracing.py",
          "analysis-engine-service\\tests\\core\\base\\test_components.py",
          "data-pipeline-service\\data_pipeline_service\\monitoring\\query_performance.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\parallel_processing_framework.py",
          "feature-store-service\\feature_store_service\\computation\\incremental_calculator.py",
          "feature-store-service\\feature_store_service\\core\\feature_store.py",
          "feature-store-service\\feature_store_service\\middleware\\request_tracking.py",
          "feature-store-service\\feature_store_service\\monitoring\\indicator_monitoring.py",
          "feature-store-service\\tests\\error\\test_monitoring_service.py",
          "feature-store-service\\tests\\optimization\\test_performance_optimizer.py",
          "ml-workbench-service\\ml_workbench_service\\optimization\\model_serving_optimizer.py",
          "monitoring-alerting-service\\monitoring_alerting_service\\adapters\\ml_integration_adapter.py",
          "trading-gateway-service\\trading_gateway_service\\main.py",
          "common-lib\\common_lib\\monitoring\\middleware.py",
          "analysis-engine-service\\analysis_engine\\analysis\\multi_timeframe_analyzer.py",
          "analysis-engine-service\\analysis_engine\\multi_asset\\optimized_confluence_detector.py",
          "analysis-engine-service\\analysis_engine\\utils\\optimized_parallel_processor.py",
          "analysis-engine-service\\analysis_engine\\utils\\platform_compatibility.py",
          "analysis-engine-service\\tests\\analysis\\confluence\\test_confluence_analyzer_performance.py",
          "analysis-engine-service\\tests\\integration\\test_optimized_components_integration.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\batch_feature_processor.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\error_handling.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\multi_instrument_processor.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\multi_timeframe_processor.py",
          "data-pipeline-service\\examples\\parallel_processing_example.py",
          "feature-store-service\\feature_store_service\\services\\time_series_data_service.py",
          "ml-integration-service\\ml_integration_service\\parallel\\parallel_inference.py",
          "ml-workbench-service\\ml_workbench_service\\optimization\\feature_engineering_optimizer.py",
          "ml-workbench-service\\ml_workbench_service\\optimization\\ml_pipeline_integrator.py",
          "ml-workbench-service\\tests\\optimization\\test_feature_engineering_optimizer.py",
          "common-lib\\common_lib\\utils\\parallel_processor.py",
          "common-lib\\common_lib\\utils\\platform_compatibility.py",
          "analysis-engine-service\\analysis_engine\\core\\exceptions_bridge.py",
          "common-lib\\common_lib\\errors\\decorators.py",
          "analysis-engine-service\\analysis_engine\\utils\\adaptive_cache_manager.py",
          "analysis-engine-service\\analysis_engine\\utils\\cache_manager.py",
          "analysis-engine-service\\tests\\simple_test.py",
          "analysis-engine-service\\tests\\core\\test_database.py",
          "analysis-engine-service\\analysis_engine\\utils\\memory_optimized_dataframe.py",
          "common-lib\\common_lib\\utils\\memory_optimized_dataframe.py"
        ]
      },
      {
        "hash": "b039cbf3f6e56b2e146604df3018b8c2",
        "files": [
          "analysis-engine-service\\analysis_engine\\analysis\\confluence\\confluence_analyzer.py",
          "analysis-engine-service\\analysis_engine\\monitoring\\performance_monitoring.py",
          "feature-store-service\\feature_store_service\\error\\monitoring_service.py",
          "feature-store-service\\feature_store_service\\indicators\\performance_enhanced_indicator.py",
          "feature-store-service\\feature_store_service\\monitoring\\performance_monitoring.py",
          "trading-gateway-service\\trading_gateway_service\\monitoring\\performance_monitoring.py",
          "trading-gateway-service\\trading_gateway_service\\simulation\\paper_trading_system.py",
          "feature-store-service\\feature_store_service\\indicators\\incremental\\processor.py",
          "monitoring-alerting-service\\monitoring_alerting_service\\error\\exceptions_bridge.py",
          "portfolio-management-service\\portfolio_management_service\\error\\exceptions_bridge.py",
          "strategy-execution-engine\\strategy_execution_engine\\error\\exceptions_bridge.py",
          "trading-gateway-service\\trading_gateway_service\\error\\exceptions_bridge.py",
          "feature-store-service\\feature_store_service\\optimization\\resource_manager.py"
        ]
      }
    ]
  },
  "exception_handling_bridge": {
    "services": [
      "analysis-engine-service",
      "monitoring-alerting-service",
      "portfolio-management-service",
      "strategy-execution-engine",
      "trading-gateway-service",
      "common-lib"
    ],
    "implementations": [
      {
        "service": "analysis-engine-service",
        "files": [
          "analysis-engine-service\\analysis_engine\\core\\exceptions_bridge.py"
        ]
      },
      {
        "service": "monitoring-alerting-service",
        "files": [
          "monitoring-alerting-service\\monitoring_alerting_service\\error\\exceptions_bridge.py"
        ]
      },
      {
        "service": "portfolio-management-service",
        "files": [
          "portfolio-management-service\\portfolio_management_service\\error\\exceptions_bridge.py"
        ]
      },
      {
        "service": "strategy-execution-engine",
        "files": [
          "strategy-execution-engine\\strategy_execution_engine\\error\\exceptions_bridge.py"
        ]
      },
      {
        "service": "trading-gateway-service",
        "files": [
          "trading-gateway-service\\trading_gateway_service\\error\\exceptions_bridge.py"
        ]
      },
      {
        "service": "common-lib",
        "files": [
          "common-lib\\common_lib\\errors\\decorators.py"
        ]
      }
    ],
    "similar_files": [
      {
        "hash": "d41d8cd98f00b204e9800998ecf8427e",
        "files": [
          "analysis-engine-service\\analysis_engine\\analysis\\base_analyzer.py",
          "analysis-engine-service\\analysis_engine\\core\\analysis_engine.py",
          "analysis-engine-service\\analysis_engine\\core\\monitoring\\async_performance_monitor.py",
          "analysis-engine-service\\analysis_engine\\multi_asset\\related_pairs_confluence_detector.py",
          "analysis-engine-service\\analysis_engine\\utils\\distributed_tracing.py",
          "analysis-engine-service\\tests\\core\\base\\test_components.py",
          "data-pipeline-service\\data_pipeline_service\\monitoring\\query_performance.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\parallel_processing_framework.py",
          "feature-store-service\\feature_store_service\\computation\\incremental_calculator.py",
          "feature-store-service\\feature_store_service\\core\\feature_store.py",
          "feature-store-service\\feature_store_service\\middleware\\request_tracking.py",
          "feature-store-service\\feature_store_service\\monitoring\\indicator_monitoring.py",
          "feature-store-service\\tests\\error\\test_monitoring_service.py",
          "feature-store-service\\tests\\optimization\\test_performance_optimizer.py",
          "ml-workbench-service\\ml_workbench_service\\optimization\\model_serving_optimizer.py",
          "monitoring-alerting-service\\monitoring_alerting_service\\adapters\\ml_integration_adapter.py",
          "trading-gateway-service\\trading_gateway_service\\main.py",
          "common-lib\\common_lib\\monitoring\\middleware.py",
          "analysis-engine-service\\analysis_engine\\analysis\\multi_timeframe_analyzer.py",
          "analysis-engine-service\\analysis_engine\\multi_asset\\optimized_confluence_detector.py",
          "analysis-engine-service\\analysis_engine\\utils\\optimized_parallel_processor.py",
          "analysis-engine-service\\analysis_engine\\utils\\platform_compatibility.py",
          "analysis-engine-service\\tests\\analysis\\confluence\\test_confluence_analyzer_performance.py",
          "analysis-engine-service\\tests\\integration\\test_optimized_components_integration.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\batch_feature_processor.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\error_handling.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\multi_instrument_processor.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\multi_timeframe_processor.py",
          "data-pipeline-service\\examples\\parallel_processing_example.py",
          "feature-store-service\\feature_store_service\\services\\time_series_data_service.py",
          "ml-integration-service\\ml_integration_service\\parallel\\parallel_inference.py",
          "ml-workbench-service\\ml_workbench_service\\optimization\\feature_engineering_optimizer.py",
          "ml-workbench-service\\ml_workbench_service\\optimization\\ml_pipeline_integrator.py",
          "ml-workbench-service\\tests\\optimization\\test_feature_engineering_optimizer.py",
          "common-lib\\common_lib\\utils\\parallel_processor.py",
          "common-lib\\common_lib\\utils\\platform_compatibility.py",
          "analysis-engine-service\\analysis_engine\\core\\exceptions_bridge.py",
          "common-lib\\common_lib\\errors\\decorators.py",
          "analysis-engine-service\\analysis_engine\\utils\\adaptive_cache_manager.py",
          "analysis-engine-service\\analysis_engine\\utils\\cache_manager.py",
          "analysis-engine-service\\tests\\simple_test.py",
          "analysis-engine-service\\tests\\core\\test_database.py",
          "analysis-engine-service\\analysis_engine\\utils\\memory_optimized_dataframe.py",
          "common-lib\\common_lib\\utils\\memory_optimized_dataframe.py"
        ]
      },
      {
        "hash": "b039cbf3f6e56b2e146604df3018b8c2",
        "files": [
          "analysis-engine-service\\analysis_engine\\analysis\\confluence\\confluence_analyzer.py",
          "analysis-engine-service\\analysis_engine\\monitoring\\performance_monitoring.py",
          "feature-store-service\\feature_store_service\\error\\monitoring_service.py",
          "feature-store-service\\feature_store_service\\indicators\\performance_enhanced_indicator.py",
          "feature-store-service\\feature_store_service\\monitoring\\performance_monitoring.py",
          "trading-gateway-service\\trading_gateway_service\\monitoring\\performance_monitoring.py",
          "trading-gateway-service\\trading_gateway_service\\simulation\\paper_trading_system.py",
          "feature-store-service\\feature_store_service\\indicators\\incremental\\processor.py",
          "monitoring-alerting-service\\monitoring_alerting_service\\error\\exceptions_bridge.py",
          "portfolio-management-service\\portfolio_management_service\\error\\exceptions_bridge.py",
          "strategy-execution-engine\\strategy_execution_engine\\error\\exceptions_bridge.py",
          "trading-gateway-service\\trading_gateway_service\\error\\exceptions_bridge.py",
          "feature-store-service\\feature_store_service\\optimization\\resource_manager.py"
        ]
      }
    ]
  },
  "cache_manager": {
    "services": [
      "analysis-engine-service",
      "feature-store-service"
    ],
    "implementations": [
      {
        "service": "analysis-engine-service",
        "files": [
          "analysis-engine-service\\analysis_engine\\utils\\adaptive_cache_manager.py",
          "analysis-engine-service\\analysis_engine\\utils\\cache_manager.py",
          "analysis-engine-service\\tests\\simple_test.py",
          "analysis-engine-service\\tests\\core\\test_database.py",
          "analysis-engine-service\\tests\\integration\\test_optimized_components_integration.py"
        ]
      },
      {
        "service": "feature-store-service",
        "files": [
          "feature-store-service\\feature_store_service\\optimization\\resource_manager.py"
        ]
      }
    ],
    "similar_files": [
      {
        "hash": "d41d8cd98f00b204e9800998ecf8427e",
        "files": [
          "analysis-engine-service\\analysis_engine\\analysis\\base_analyzer.py",
          "analysis-engine-service\\analysis_engine\\core\\analysis_engine.py",
          "analysis-engine-service\\analysis_engine\\core\\monitoring\\async_performance_monitor.py",
          "analysis-engine-service\\analysis_engine\\multi_asset\\related_pairs_confluence_detector.py",
          "analysis-engine-service\\analysis_engine\\utils\\distributed_tracing.py",
          "analysis-engine-service\\tests\\core\\base\\test_components.py",
          "data-pipeline-service\\data_pipeline_service\\monitoring\\query_performance.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\parallel_processing_framework.py",
          "feature-store-service\\feature_store_service\\computation\\incremental_calculator.py",
          "feature-store-service\\feature_store_service\\core\\feature_store.py",
          "feature-store-service\\feature_store_service\\middleware\\request_tracking.py",
          "feature-store-service\\feature_store_service\\monitoring\\indicator_monitoring.py",
          "feature-store-service\\tests\\error\\test_monitoring_service.py",
          "feature-store-service\\tests\\optimization\\test_performance_optimizer.py",
          "ml-workbench-service\\ml_workbench_service\\optimization\\model_serving_optimizer.py",
          "monitoring-alerting-service\\monitoring_alerting_service\\adapters\\ml_integration_adapter.py",
          "trading-gateway-service\\trading_gateway_service\\main.py",
          "common-lib\\common_lib\\monitoring\\middleware.py",
          "analysis-engine-service\\analysis_engine\\analysis\\multi_timeframe_analyzer.py",
          "analysis-engine-service\\analysis_engine\\multi_asset\\optimized_confluence_detector.py",
          "analysis-engine-service\\analysis_engine\\utils\\optimized_parallel_processor.py",
          "analysis-engine-service\\analysis_engine\\utils\\platform_compatibility.py",
          "analysis-engine-service\\tests\\analysis\\confluence\\test_confluence_analyzer_performance.py",
          "analysis-engine-service\\tests\\integration\\test_optimized_components_integration.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\batch_feature_processor.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\error_handling.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\multi_instrument_processor.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\multi_timeframe_processor.py",
          "data-pipeline-service\\examples\\parallel_processing_example.py",
          "feature-store-service\\feature_store_service\\services\\time_series_data_service.py",
          "ml-integration-service\\ml_integration_service\\parallel\\parallel_inference.py",
          "ml-workbench-service\\ml_workbench_service\\optimization\\feature_engineering_optimizer.py",
          "ml-workbench-service\\ml_workbench_service\\optimization\\ml_pipeline_integrator.py",
          "ml-workbench-service\\tests\\optimization\\test_feature_engineering_optimizer.py",
          "common-lib\\common_lib\\utils\\parallel_processor.py",
          "common-lib\\common_lib\\utils\\platform_compatibility.py",
          "analysis-engine-service\\analysis_engine\\core\\exceptions_bridge.py",
          "common-lib\\common_lib\\errors\\decorators.py",
          "analysis-engine-service\\analysis_engine\\utils\\adaptive_cache_manager.py",
          "analysis-engine-service\\analysis_engine\\utils\\cache_manager.py",
          "analysis-engine-service\\tests\\simple_test.py",
          "analysis-engine-service\\tests\\core\\test_database.py",
          "analysis-engine-service\\analysis_engine\\utils\\memory_optimized_dataframe.py",
          "common-lib\\common_lib\\utils\\memory_optimized_dataframe.py"
        ]
      },
      {
        "hash": "b039cbf3f6e56b2e146604df3018b8c2",
        "files": [
          "analysis-engine-service\\analysis_engine\\analysis\\confluence\\confluence_analyzer.py",
          "analysis-engine-service\\analysis_engine\\monitoring\\performance_monitoring.py",
          "feature-store-service\\feature_store_service\\error\\monitoring_service.py",
          "feature-store-service\\feature_store_service\\indicators\\performance_enhanced_indicator.py",
          "feature-store-service\\feature_store_service\\monitoring\\performance_monitoring.py",
          "trading-gateway-service\\trading_gateway_service\\monitoring\\performance_monitoring.py",
          "trading-gateway-service\\trading_gateway_service\\simulation\\paper_trading_system.py",
          "feature-store-service\\feature_store_service\\indicators\\incremental\\processor.py",
          "monitoring-alerting-service\\monitoring_alerting_service\\error\\exceptions_bridge.py",
          "portfolio-management-service\\portfolio_management_service\\error\\exceptions_bridge.py",
          "strategy-execution-engine\\strategy_execution_engine\\error\\exceptions_bridge.py",
          "trading-gateway-service\\trading_gateway_service\\error\\exceptions_bridge.py",
          "feature-store-service\\feature_store_service\\optimization\\resource_manager.py"
        ]
      }
    ]
  },
  "memory_optimized_dataframe": {
    "services": [
      "analysis-engine-service",
      "common-lib"
    ],
    "implementations": [
      {
        "service": "analysis-engine-service",
        "files": [
          "analysis-engine-service\\analysis_engine\\utils\\memory_optimized_dataframe.py",
          "analysis-engine-service\\tests\\simple_test.py",
          "analysis-engine-service\\tests\\integration\\test_optimized_components_integration.py"
        ]
      },
      {
        "service": "common-lib",
        "files": [
          "common-lib\\common_lib\\utils\\memory_optimized_dataframe.py"
        ]
      }
    ],
    "similar_files": [
      {
        "hash": "d41d8cd98f00b204e9800998ecf8427e",
        "files": [
          "analysis-engine-service\\analysis_engine\\analysis\\base_analyzer.py",
          "analysis-engine-service\\analysis_engine\\core\\analysis_engine.py",
          "analysis-engine-service\\analysis_engine\\core\\monitoring\\async_performance_monitor.py",
          "analysis-engine-service\\analysis_engine\\multi_asset\\related_pairs_confluence_detector.py",
          "analysis-engine-service\\analysis_engine\\utils\\distributed_tracing.py",
          "analysis-engine-service\\tests\\core\\base\\test_components.py",
          "data-pipeline-service\\data_pipeline_service\\monitoring\\query_performance.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\parallel_processing_framework.py",
          "feature-store-service\\feature_store_service\\computation\\incremental_calculator.py",
          "feature-store-service\\feature_store_service\\core\\feature_store.py",
          "feature-store-service\\feature_store_service\\middleware\\request_tracking.py",
          "feature-store-service\\feature_store_service\\monitoring\\indicator_monitoring.py",
          "feature-store-service\\tests\\error\\test_monitoring_service.py",
          "feature-store-service\\tests\\optimization\\test_performance_optimizer.py",
          "ml-workbench-service\\ml_workbench_service\\optimization\\model_serving_optimizer.py",
          "monitoring-alerting-service\\monitoring_alerting_service\\adapters\\ml_integration_adapter.py",
          "trading-gateway-service\\trading_gateway_service\\main.py",
          "common-lib\\common_lib\\monitoring\\middleware.py",
          "analysis-engine-service\\analysis_engine\\analysis\\multi_timeframe_analyzer.py",
          "analysis-engine-service\\analysis_engine\\multi_asset\\optimized_confluence_detector.py",
          "analysis-engine-service\\analysis_engine\\utils\\optimized_parallel_processor.py",
          "analysis-engine-service\\analysis_engine\\utils\\platform_compatibility.py",
          "analysis-engine-service\\tests\\analysis\\confluence\\test_confluence_analyzer_performance.py",
          "analysis-engine-service\\tests\\integration\\test_optimized_components_integration.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\batch_feature_processor.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\error_handling.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\multi_instrument_processor.py",
          "data-pipeline-service\\data_pipeline_service\\parallel\\multi_timeframe_processor.py",
          "data-pipeline-service\\examples\\parallel_processing_example.py",
          "feature-store-service\\feature_store_service\\services\\time_series_data_service.py",
          "ml-integration-service\\ml_integration_service\\parallel\\parallel_inference.py",
          "ml-workbench-service\\ml_workbench_service\\optimization\\feature_engineering_optimizer.py",
          "ml-workbench-service\\ml_workbench_service\\optimization\\ml_pipeline_integrator.py",
          "ml-workbench-service\\tests\\optimization\\test_feature_engineering_optimizer.py",
          "common-lib\\common_lib\\utils\\parallel_processor.py",
          "common-lib\\common_lib\\utils\\platform_compatibility.py",
          "analysis-engine-service\\analysis_engine\\core\\exceptions_bridge.py",
          "common-lib\\common_lib\\errors\\decorators.py",
          "analysis-engine-service\\analysis_engine\\utils\\adaptive_cache_manager.py",
          "analysis-engine-service\\analysis_engine\\utils\\cache_manager.py",
          "analysis-engine-service\\tests\\simple_test.py",
          "analysis-engine-service\\tests\\core\\test_database.py",
          "analysis-engine-service\\analysis_engine\\utils\\memory_optimized_dataframe.py",
          "common-lib\\common_lib\\utils\\memory_optimized_dataframe.py"
        ]
      }
    ]
  }
}
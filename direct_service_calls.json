{
  "analysis-engine-service": {
    "direct_imports": [
      {
        "file": "analysis-engine-service\\analysis_engine\\analysis\\ml_integration.py",
        "line": "from ml_integration_service.model_connector import (",
        "import": "ml_integration_service.model_connector"
      },
      {
        "file": "analysis-engine-service\\analysis_engine\\backtesting\\orchestrator.py",
        "line": "from trading_gateway_service.simulation.forex_broker_simulator import ForexBrokerSimulator",
        "import": "trading_gateway_service.simulation.forex_broker_simulator"
      },
      {
        "file": "analysis-engine-service\\analysis_engine\\backtesting\\orchestrator.py",
        "line": "from trading_gateway_service.simulation.market_regime_simulator import MarketRegimeSimulator, MarketRegimeGenerator",
        "import": "trading_gateway_service.simulation.market_regime_simulator"
      },
      {
        "file": "analysis-engine-service\\analysis_engine\\backtesting\\orchestrator.py",
        "line": "from trading_gateway_service.simulation.news_sentiment_simulator import NewsAndSentimentSimulator",
        "import": "trading_gateway_service.simulation.news_sentiment_simulator"
      },
      {
        "file": "analysis-engine-service\\analysis_engine\\causal\\feature_integration.py",
        "line": "from ml_workbench_service.clients.feature_store_client import FeatureStoreClient",
        "import": "ml_workbench_service.clients.feature_store_client"
      },
      {
        "file": "analysis-engine-service\\analysis_engine\\chat\\chat_backend_service.py",
        "line": "from ml_integration_service.clients import get_ml_workbench_client",
        "import": "ml_integration_service.clients"
      },
      {
        "file": "analysis-engine-service\\analysis_engine\\chat\\chat_backend_service.py",
        "line": "from trading_gateway_service.clients import get_trading_client",
        "import": "trading_gateway_service.clients"
      },
      {
        "file": "analysis-engine-service\\analysis_engine\\tools\\effectiveness\\enhanced_rl_effectiveness_framework.py",
        "line": "from trading_gateway_service.simulation.forex_broker_simulator import MarketRegimeType",
        "import": "trading_gateway_service.simulation.forex_broker_simulator"
      },
      {
        "file": "analysis-engine-service\\analysis_engine\\tools\\effectiveness\\enhanced_rl_effectiveness_framework.py",
        "line": "from ml_workbench_service.models.reinforcement.rl_agent import ForexTradingEnvironment",
        "import": "ml_workbench_service.models.reinforcement.rl_agent"
      }
    ],
    "direct_http_calls": [
      {
        "file": "analysis-engine-service\\analysis_engine\\adapters\\data_pipeline_adapter.py",
        "url": "data-pipeline-service:8000"
      },
      {
        "file": "analysis-engine-service\\analysis_engine\\adapters\\ml_integration_adapter.py",
        "url": "ml-integration-service:8000"
      },
      {
        "file": "analysis-engine-service\\analysis_engine\\adapters\\ml_integration_adapter.py",
        "url": "ml-integration-service:8000"
      },
      {
        "file": "analysis-engine-service\\analysis_engine\\adapters\\ml_integration_adapter.py",
        "url": "ml-integration-service:8000"
      },
      {
        "file": "analysis-engine-service\\analysis_engine\\causal\\services\\causal_data_connector.py",
        "url": "feature-store-service:8000"
      },
      {
        "file": "analysis-engine-service\\analysis_engine\\clients\\execution_engine_client.py",
        "url": "strategy-execution-engine:8080"
      },
      {
        "file": "analysis-engine-service\\analysis_engine\\clients\\execution_engine_client.py",
        "url": "strategy-execution-engine:8080"
      },
      {
        "file": "analysis-engine-service\\analysis_engine\\clients\\ml_pipeline_client.py",
        "url": "ml-integration-service:8000"
      },
      {
        "file": "analysis-engine-service\\analysis_engine\\clients\\ml_pipeline_client.py",
        "url": "ml-integration-service:8000"
      },
      {
        "file": "analysis-engine-service\\analysis_engine\\config\\settings.py",
        "url": "ml-integration-service:8000"
      },
      {
        "file": "analysis-engine-service\\analysis_engine\\config\\settings.py",
        "url": "feature-store-service:8000"
      }
    ]
  },
  "data-pipeline-service": {
    "direct_imports": [],
    "direct_http_calls": [
      {
        "file": "data-pipeline-service\\data_pipeline_service\\service_clients.py",
        "url": "feature-store-service:8000"
      },
      {
        "file": "data-pipeline-service\\data_pipeline_service\\service_clients.py",
        "url": "analysis-engine-service:8000"
      },
      {
        "file": "data-pipeline-service\\data_pipeline_service\\service_clients_standardized.py",
        "url": "feature-store-service:8000"
      },
      {
        "file": "data-pipeline-service\\data_pipeline_service\\service_clients_standardized.py",
        "url": "analysis-engine-service:8000"
      },
      {
        "file": "data-pipeline-service\\data_pipeline_service\\adapters\\analysis_engine_adapter.py",
        "url": "analysis-engine-service:8000"
      },
      {
        "file": "data-pipeline-service\\data_pipeline_service\\config\\config.py",
        "url": "feature-store-service:8000"
      },
      {
        "file": "data-pipeline-service\\data_pipeline_service\\config\\standardized_config.py",
        "url": "feature-store-service:8000"
      }
    ]
  },
  "feature-store-service": {
    "direct_imports": [
      {
        "file": "feature-store-service\\feature_store_service\\dependencies.py",
        "line": "from data_pipeline_service.services.ohlcv_service import OHLCVService, get_ohlcv_service # Assuming this is the correct way to get OHLCV service",
        "import": "data_pipeline_service.services.ohlcv_service"
      },
      {
        "file": "feature-store-service\\feature_store_service\\main.py",
        "line": "from data_pipeline_service.services.ohlcv_service import get_ohlcv_service",
        "import": "data_pipeline_service.services.ohlcv_service"
      },
      {
        "file": "feature-store-service\\feature_store_service\\computation\\incremental\\indicator_service.py",
        "line": "from data_pipeline_service.services.ohlcv_service import OHLCVService",
        "import": "data_pipeline_service.services.ohlcv_service"
      },
      {
        "file": "feature-store-service\\feature_store_service\\indicators\\performance_enhanced_indicator.py",
        "line": "from monitoring_alerting_service.metrics_exporters.performance_optimization_exporter import get_metrics_exporter",
        "import": "monitoring_alerting_service.metrics_exporters.performance_optimization_exporter"
      },
      {
        "file": "feature-store-service\\feature_store_service\\services\\indicator_manager.py",
        "line": "from data_pipeline_service.services.ohlcv_service import OHLCVService, get_ohlcv_service",
        "import": "data_pipeline_service.services.ohlcv_service"
      },
      {
        "file": "feature-store-service\\feature_store_service\\validation\\data_validator.py",
        "line": "from data_pipeline_service.validation.validation_engine import (",
        "import": "data_pipeline_service.validation.validation_engine"
      }
    ],
    "direct_http_calls": [
      {
        "file": "feature-store-service\\feature_store_service\\adapters\\analysis_engine_adapter.py",
        "url": "analysis-engine-service:8000"
      }
    ]
  },
  "ml-integration-service": {
    "direct_imports": [
      {
        "file": "ml-integration-service\\examples\\parallel_inference_example.py",
        "line": "from data_pipeline_service.parallel import (",
        "import": "data_pipeline_service.parallel"
      },
      {
        "file": "ml-integration-service\\ml_integration_service\\parallel\\parallel_inference.py",
        "line": "from data_pipeline_service.parallel.parallel_processing_framework import (",
        "import": "data_pipeline_service.parallel.parallel_processing_framework"
      }
    ],
    "direct_http_calls": [
      {
        "file": "ml-integration-service\\ml_integration_service\\adapters\\analysis_engine_adapter.py",
        "url": "analysis-engine-service:8000"
      },
      {
        "file": "ml-integration-service\\ml_integration_service\\config\\config.py",
        "url": "ml-workbench-service:8000"
      },
      {
        "file": "ml-integration-service\\ml_integration_service\\config\\config.py",
        "url": "analysis-engine-service:8000"
      },
      {
        "file": "ml-integration-service\\ml_integration_service\\config\\config.py",
        "url": "strategy-execution-engine:8000"
      },
      {
        "file": "ml-integration-service\\ml_integration_service\\config\\settings.py",
        "url": "analysis-engine-service:8000"
      },
      {
        "file": "ml-integration-service\\ml_integration_service\\config\\settings.py",
        "url": "strategy-execution-engine:8000"
      },
      {
        "file": "ml-integration-service\\ml_integration_service\\config\\standardized_config.py",
        "url": "ml-workbench-service:8000"
      },
      {
        "file": "ml-integration-service\\ml_integration_service\\config\\standardized_config.py",
        "url": "analysis-engine-service:8000"
      },
      {
        "file": "ml-integration-service\\ml_integration_service\\config\\standardized_config.py",
        "url": "strategy-execution-engine:8000"
      }
    ]
  },
  "ml-workbench-service": {
    "direct_imports": [
      {
        "file": "ml-workbench-service\\examples\\news_sentiment_rl_pipeline.py",
        "line": "from trading_gateway_service.simulation.forex_broker_simulator import ForexBrokerSimulator",
        "import": "trading_gateway_service.simulation.forex_broker_simulator"
      },
      {
        "file": "ml-workbench-service\\examples\\news_sentiment_rl_pipeline.py",
        "line": "from trading_gateway_service.simulation.news_sentiment_simulator import (",
        "import": "trading_gateway_service.simulation.news_sentiment_simulator"
      },
      {
        "file": "ml-workbench-service\\ml_workbench_service\\effectiveness\\rl_tool_effectiveness.py",
        "line": "from trading_gateway_service.simulation.forex_broker_simulator import MarketRegimeType",
        "import": "trading_gateway_service.simulation.forex_broker_simulator"
      },
      {
        "file": "ml-workbench-service\\ml_workbench_service\\models\\reinforcement\\curriculum_learning.py",
        "line": "from trading_gateway_service.simulation.forex_broker_simulator import ForexBrokerSimulator",
        "import": "trading_gateway_service.simulation.forex_broker_simulator"
      },
      {
        "file": "ml-workbench-service\\ml_workbench_service\\models\\reinforcement\\curriculum_learning.py",
        "line": "from trading_gateway_service.simulation.news_sentiment_simulator import NewsAndSentimentSimulator",
        "import": "trading_gateway_service.simulation.news_sentiment_simulator"
      },
      {
        "file": "ml-workbench-service\\ml_workbench_service\\models\\reinforcement\\curriculum_learning.py",
        "line": "from trading_gateway_service.simulation.advanced_market_regime_simulator import (",
        "import": "trading_gateway_service.simulation.advanced_market_regime_simulator"
      },
      {
        "file": "ml-workbench-service\\ml_workbench_service\\reinforcement\\distributed_curriculum_trainer.py",
        "line": "from trading_gateway_service.simulation.forex_broker_simulator import ForexBrokerSimulator",
        "import": "trading_gateway_service.simulation.forex_broker_simulator"
      },
      {
        "file": "ml-workbench-service\\ml_workbench_service\\reinforcement\\simulation_rl_adapter.py",
        "line": "from trading_gateway_service.simulation.forex_broker_simulator import (",
        "import": "trading_gateway_service.simulation.forex_broker_simulator"
      },
      {
        "file": "ml-workbench-service\\tests\\integration\\test_news_rl_integration.py",
        "line": "from trading_gateway_service.simulation.forex_broker_simulator import ForexBrokerSimulator, OrderSide",
        "import": "trading_gateway_service.simulation.forex_broker_simulator"
      },
      {
        "file": "ml-workbench-service\\tests\\integration\\test_news_rl_integration.py",
        "line": "from trading_gateway_service.simulation.news_sentiment_simulator import (",
        "import": "trading_gateway_service.simulation.news_sentiment_simulator"
      },
      {
        "file": "ml-workbench-service\\tests\\models\\reinforcement\\test_news_sentiment_integration.py",
        "line": "from trading_gateway_service.simulation.forex_broker_simulator import (",
        "import": "trading_gateway_service.simulation.forex_broker_simulator"
      },
      {
        "file": "ml-workbench-service\\tests\\models\\reinforcement\\test_news_sentiment_integration.py",
        "line": "from trading_gateway_service.simulation.news_sentiment_simulator import (",
        "import": "trading_gateway_service.simulation.news_sentiment_simulator"
      },
      {
        "file": "ml-workbench-service\\tests\\models\\reinforcement\\test_rl_env_integration.py",
        "line": "from trading_gateway_service.simulation.forex_broker_simulator import ForexBrokerSimulator",
        "import": "trading_gateway_service.simulation.forex_broker_simulator"
      },
      {
        "file": "ml-workbench-service\\tests\\models\\reinforcement\\test_rl_env_integration.py",
        "line": "from trading_gateway_service.simulation.news_sentiment_simulator import (",
        "import": "trading_gateway_service.simulation.news_sentiment_simulator"
      }
    ],
    "direct_http_calls": [
      {
        "file": "ml-workbench-service\\ml_workbench_service\\adapters\\analysis_engine_adapter.py",
        "url": "analysis-engine-service:8000"
      },
      {
        "file": "ml-workbench-service\\ml_workbench_service\\adapters\\analysis_engine_adapter.py",
        "url": "analysis-engine-service:8000"
      },
      {
        "file": "ml-workbench-service\\ml_workbench_service\\adapters\\analysis_engine_adapter.py",
        "url": "analysis-engine-service:8000"
      },
      {
        "file": "ml-workbench-service\\ml_workbench_service\\adapters\\trading_feedback_adapter.py",
        "url": "analysis-engine-service:8000"
      },
      {
        "file": "ml-workbench-service\\ml_workbench_service\\config\\standardized_config.py",
        "url": "feature-store-service:8000"
      },
      {
        "file": "ml-workbench-service\\ml_workbench_service\\config\\standardized_config.py",
        "url": "analysis-engine-service:8000"
      },
      {
        "file": "ml-workbench-service\\ml_workbench_service\\config\\standardized_config.py",
        "url": "data-pipeline-service:8000"
      },
      {
        "file": "ml-workbench-service\\ml_workbench_service\\config\\standardized_config.py",
        "url": "trading-gateway-service:8000"
      }
    ]
  },
  "monitoring-alerting-service": {
    "direct_imports": [
      {
        "file": "monitoring-alerting-service\\metrics_exporters\\strategy_execution_metrics_exporter.py",
        "line": "from strategy_execution_engine.backtesting.backtest_engine import BacktestEngine",
        "import": "strategy_execution_engine.backtesting.backtest_engine"
      },
      {
        "file": "monitoring-alerting-service\\metrics_exporters\\strategy_execution_metrics_exporter.py",
        "line": "from strategy_execution_engine.strategies.strategy_repository import StrategyRepository",
        "import": "strategy_execution_engine.strategies.strategy_repository"
      }
    ],
    "direct_http_calls": [
      {
        "file": "monitoring-alerting-service\\monitoring_alerting_service\\adapters\\ml_integration_adapter.py",
        "url": "ml-integration-service:8000"
      },
      {
        "file": "monitoring-alerting-service\\monitoring_alerting_service\\config\\standardized_config.py",
        "url": "feature-store-service:8000"
      },
      {
        "file": "monitoring-alerting-service\\monitoring_alerting_service\\config\\standardized_config.py",
        "url": "analysis-engine-service:8000"
      },
      {
        "file": "monitoring-alerting-service\\monitoring_alerting_service\\config\\standardized_config.py",
        "url": "data-pipeline-service:8000"
      },
      {
        "file": "monitoring-alerting-service\\monitoring_alerting_service\\config\\standardized_config.py",
        "url": "trading-gateway-service:8000"
      },
      {
        "file": "monitoring-alerting-service\\monitoring_alerting_service\\config\\standardized_config.py",
        "url": "ml-workbench-service:8030"
      }
    ]
  },
  "portfolio-management-service": {
    "direct_imports": [],
    "direct_http_calls": [
      {
        "file": "portfolio-management-service\\portfolio_management_service\\adapters\\multi_asset_adapter.py",
        "url": "analysis-engine-service:8000"
      }
    ]
  },
  "strategy-execution-engine": {
    "direct_imports": [],
    "direct_http_calls": [
      {
        "file": "strategy-execution-engine\\strategy_execution_engine\\adapters\\causal_strategy_enhancer_adapter.py",
        "url": "analysis-engine-service:8000"
      },
      {
        "file": "strategy-execution-engine\\strategy_execution_engine\\adapters\\enhanced_tool_effectiveness_adapter.py",
        "url": "analysis-engine-service:8000"
      },
      {
        "file": "strategy-execution-engine\\strategy_execution_engine\\adapters\\enhanced_tool_effectiveness_adapter.py",
        "url": "analysis-engine-service:8000"
      },
      {
        "file": "strategy-execution-engine\\strategy_execution_engine\\adapters\\ml_prediction_adapter.py",
        "url": "ml-integration-service:8000"
      },
      {
        "file": "strategy-execution-engine\\strategy_execution_engine\\adapters\\ml_prediction_adapter.py",
        "url": "ml-integration-service:8000"
      },
      {
        "file": "strategy-execution-engine\\strategy_execution_engine\\adapters\\tool_effectiveness_adapter.py",
        "url": "analysis-engine-service:8000"
      },
      {
        "file": "strategy-execution-engine\\strategy_execution_engine\\core\\config.py",
        "url": "analysis-engine-service:8002"
      },
      {
        "file": "strategy-execution-engine\\strategy_execution_engine\\core\\config.py",
        "url": "feature-store-service:8001"
      },
      {
        "file": "strategy-execution-engine\\strategy_execution_engine\\core\\config.py",
        "url": "trading-gateway-service:8004"
      },
      {
        "file": "strategy-execution-engine\\strategy_execution_engine\\core\\config.py",
        "url": "portfolio-management-service:8000"
      },
      {
        "file": "strategy-execution-engine\\strategy_execution_engine\\core\\config.py",
        "url": "monitoring-alerting-service:8005"
      },
      {
        "file": "strategy-execution-engine\\strategy_execution_engine\\strategies\\causal_enhanced_strategy.py",
        "url": "analysis-engine-service:8000"
      },
      {
        "file": "strategy-execution-engine\\strategy_execution_engine\\trading\\feedback_router.py",
        "url": "ml-integration-service"
      },
      {
        "file": "strategy-execution-engine\\strategy_execution_engine\\trading\\feedback_router.py",
        "url": "analysis-engine-service"
      },
      {
        "file": "strategy-execution-engine\\tests\\unit\\clients\\test_standardized_trading_gateway_client.py",
        "url": "trading-gateway-service:8000"
      },
      {
        "file": "strategy-execution-engine\\tests\\unit\\clients\\test_trading_gateway_client.py",
        "url": "trading-gateway-service:8000"
      }
    ]
  },
  "trading-gateway-service": {
    "direct_imports": [],
    "direct_http_calls": [
      {
        "file": "trading-gateway-service\\trading_gateway_service\\adapters\\analysis_engine_adapter.py",
        "url": "analysis-engine-service:8000"
      },
      {
        "file": "trading-gateway-service\\trading_gateway_service\\services\\market_regime_service.py",
        "url": "analysis-engine-service:8000"
      }
    ]
  },
  "ui-service": {
    "direct_imports": [
      {
        "file": "ui-service\\components\\visualization_adapter.py",
        "line": "from feature_store_service.indicators import indicator_registry",
        "import": "feature_store_service.indicators"
      },
      {
        "file": "ui-service\\components\\visualization_adapter.py",
        "line": "from feature_store_service.indicators.moving_averages import (",
        "import": "feature_store_service.indicators.moving_averages"
      },
      {
        "file": "ui-service\\components\\visualization_adapter.py",
        "line": "from feature_store_service.indicators.oscillators import (",
        "import": "feature_store_service.indicators.oscillators"
      },
      {
        "file": "ui-service\\components\\visualization_adapter.py",
        "line": "from feature_store_service.indicators.volatility import (",
        "import": "feature_store_service.indicators.volatility"
      },
      {
        "file": "ui-service\\components\\visualization_adapter.py",
        "line": "from feature_store_service.indicators.volume import (",
        "import": "feature_store_service.indicators.volume"
      }
    ],
    "direct_http_calls": []
  }
}
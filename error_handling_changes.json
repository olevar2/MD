{
  "analysis-engine-service": [
    {
      "file": "analysis-engine-service\\main.py",
      "changes_made": [
        {
          "function": "lifespan",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "main",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\test_async_patterns.py",
      "changes_made": [
        {
          "function": "stop",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_run_scheduler",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\database.py",
      "changes_made": [
        {
          "function": "connect",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "execute",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "fetch",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "fetchrow",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "fetchval",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "transaction",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adapters\\adaptive_strategy_adapter.py",
      "changes_made": [
        {
          "function": "get_adaptive_parameters",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "record_strategy_performance",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_tool_signal_weights",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "run_adaptation_cycle",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_adaptation_recommendations",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "set_adaptation_level",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_adaptation_level",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adapters\\analysis_adapter.py",
      "changes_made": [
        {
          "function": "analyze_market_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_technical_indicators",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "detect_patterns",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_available_indicators",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_available_patterns",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adapters\\analysis_engine_adapter.py",
      "changes_made": [
        {
          "function": "run_analysis",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_market_regime",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_confluence_analysis",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_pattern_effectiveness",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adapters\\analysis_engine_adapter_factory.py",
      "changes_made": [
        {
          "function": "create_adapter",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adapters\\causal_strategy_enhancer_adapter.py",
      "changes_made": [
        {
          "function": "enhance_strategy",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adapters\\data_pipeline_adapter.py",
      "changes_made": [
        {
          "function": "get_tick_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_latest_ticks",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_tick_stream",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "polling_stream",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_aggregated_ticks",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adapters\\enhanced_tool_effectiveness_adapter.py",
      "changes_made": [
        {
          "function": "get_adaptive_parameters",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "record_strategy_performance",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_adaptation_recommendations",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adapters\\feature_store_client.py",
      "changes_made": [
        {
          "function": "calculate_indicators",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "main",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adapters\\indicator_adapter.py",
      "changes_made": [
        {
          "function": "calculate_indicator",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "calculate_multiple_indicators",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_indicator_info",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_all_indicators_info",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adapters\\ml_integration_adapter.py",
      "changes_made": [
        {
          "function": "get_market_analysis",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_price_prediction",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_trading_recommendation",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_sentiment_analysis",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "generate_explanation",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_feature_importance",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_user_preferences",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_user_preferences",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "detect_preferences_from_message",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adapters\\ml_workbench_adapter.py",
      "changes_made": [
        {
          "function": "optimize_model",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_optimization_status",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_optimization_result",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "cancel_optimization",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "register_model",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_model_info",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "list_models",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "delete_model",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "train_rl_model",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_training_status",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_rl_model_performance",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_rl_model_action",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adapters\\model_feedback_adapter.py",
      "changes_made": [
        {
          "function": "process_trading_feedback",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "prepare_training_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "trigger_model_update",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_model_performance_metrics",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adapters\\multi_asset_adapter.py",
      "changes_made": [
        {
          "function": "get_asset_info",
          "decorator": "with_exception_handling"
        },
        {
          "function": "list_assets_by_class",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_asset_group",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_trading_parameters",
          "decorator": "with_exception_handling"
        },
        {
          "function": "normalize_data",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_volatility",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_price_levels",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_analysis_parameters",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_asset",
          "decorator": "with_exception_handling"
        },
        {
          "function": "list_assets",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_correlation",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_correlated_assets",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_asset_group",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_pip_value",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_trading_parameters",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adapters\\pattern_adapter.py",
      "changes_made": [
        {
          "function": "detect_pattern",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "detect_multiple_patterns",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_pattern_info",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_all_patterns_info",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adapters\\strategy_execution_adapter.py",
      "changes_made": [
        {
          "function": "execute_strategy",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "backtest_strategy",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_strategy_signals",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "optimize_strategy",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "aggregate_signals",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_signal_effectiveness",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "evaluate_strategy",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "compare_strategies",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_strategy_performance",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adapters\\tool_effectiveness_adapter.py",
      "changes_made": [
        {
          "function": "record_signal",
          "decorator": "with_exception_handling"
        },
        {
          "function": "record_outcome",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_tool_effectiveness",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_best_tools",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_tool_history",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_performance_summary",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_convert_market_regime",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adapters\\trading_adapters.py",
      "changes_made": [
        {
          "function": "evaluate_risk",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\adaptation_engine.py",
      "changes_made": [
        {
          "function": "trigger_model_retraining",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_strategy_parameter",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "run_backtest",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "deploy_strategy_update",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\adaptive_layer_service.py",
      "changes_made": [
        {
          "function": "get_adaptive_parameters",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "record_strategy_performance",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_tool_signal_weights",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "run_adaptation_cycle",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_adaptation_recommendations",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "set_adaptation_level",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_adaptive_parameters_internal",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_confluence_data",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_get_tool_metrics",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\enhanced_feedback_kafka_handler.py",
      "changes_made": [
        {
          "function": "stop",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "subscribe_to_topic",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "publish_event",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_subscription_task",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_process_event",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_handle_trading_outcome",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_handle_parameter_performance",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_handle_strategy_effectiveness",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_handle_model_prediction",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_handle_execution_quality",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_publish_with_retry",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_dict_to_feedback",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_publish_to_dlq",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\event_consumers.py",
      "changes_made": [
        {
          "function": "_handle_event",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "process_event",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_process_batch",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "process_event",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\feedback_end_to_end_tests.py",
      "changes_made": [
        {
          "function": "get_outcomes_before_date",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\feedback_integration_service.py",
      "changes_made": [
        {
          "function": "stop",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_periodic_feedback_processing",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_periodic_model_evaluation",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_evaluate_model_performance",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\feedback_loop.py",
      "changes_made": [
        {
          "function": "add_feedback",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "process_incoming_feedback",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_categorize_feedback",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "initialize_event_subscriptions",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\feedback_loop_connector.py",
      "changes_made": [
        {
          "function": "stop",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "send_adaptation_to_strategy_execution",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "process_execution_feedback",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_monitor_loop_health",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\feedback_loop_validator.py",
      "changes_made": [
        {
          "function": "validate_feedback_event",
          "decorator": "with_exception_handling"
        },
        {
          "function": "check_adaptation_consistency",
          "decorator": "with_exception_handling"
        },
        {
          "function": "monitor_loop_health",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\feedback_router.py",
      "changes_made": [
        {
          "function": "_process_batch",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_process_single_feedback",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\market_regime_aware_adapter.py",
      "changes_made": [
        {
          "function": "get_regime_adjusted_parameters",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\model_feedback_integrator.py",
      "changes_made": [
        {
          "function": "_handle_retraining_completion",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_check_retraining_needed",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_retrain_model_workflow",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_publish_event",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_model_metrics",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\model_retraining_service.py",
      "changes_made": [
        {
          "function": "classify",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_calculate_metrics",
          "decorator": "with_exception_handling"
        },
        {
          "function": "prepare_feedback_for_training",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "trigger_model_retraining",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_monitor_retraining_job",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_handle_successful_retraining",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_handle_failed_retraining",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_handle_timeout_retraining",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "stop",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_background_loop",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_check_active_jobs",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "process_feedback",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_job_status",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\multi_timeframe_feedback.py",
      "changes_made": [
        {
          "function": "handle_feedback_event",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "process_feedback",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_correlations",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "detect_leading_timeframes",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_publish_analysis_event",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\parameter_feedback.py",
      "changes_made": [
        {
          "function": "track_parameter_change",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_parameter_effectiveness",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "generate_parameter_recommendations",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_calculate_statistical_significance",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\parameter_statistical_analyzer.py",
      "changes_made": [
        {
          "function": "analyze_parameter_impact",
          "decorator": "with_exception_handling"
        },
        {
          "function": "compare_ab_test_groups",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\parameter_statistical_validator.py",
      "changes_made": [
        {
          "function": "validate_parameter_change",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_calculate_confidence_from_samples",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\parameter_tracking_service.py",
      "changes_made": [
        {
          "function": "record_parameter_change",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "record_parameter_performance",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_calculate_statistical_significance",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_calculate_sensitivity",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_convert_value",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\statistical_validator.py",
      "changes_made": [
        {
          "function": "validate_parameter_adjustment",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\strategy_adaptation_service.py",
      "changes_made": [
        {
          "function": "process_feedback_event",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\strategy_mutation_service.py",
      "changes_made": [
        {
          "function": "stop",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "evaluate_and_select_best_version",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_version_history",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_recent_performance",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_scheduled_mutation_task",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_load_existing_data",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\tool_effectiveness_consumer.py",
      "changes_made": [
        {
          "function": "get_effectiveness_metrics",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_fetch_metrics_from_monitoring_service",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_aggregated_effectiveness",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\trading_feedback_collector.py",
      "changes_made": [
        {
          "function": "_try_register_with_orchestration",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_cancel_batch_task",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_try_unregister_from_orchestration",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "collect_feedback",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_publish_feedback_collected_event",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_convert_to_model_feedback",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_process_feedback_realtime",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_try_send_to_local_loop",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_try_send_to_orchestration",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_batch_processing_loop",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_process_single_group",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_send_batch_to_local_loop",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_try_send_batch_to_orchestration",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_publish_batch_processed_event",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_orchestration_endpoint",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_send_feedback_to_orchestration",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_send_batch_to_orchestration",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_register_with_orchestration",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_unregister_from_orchestration",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_orchestration_health",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\feedback\\models.py",
      "changes_made": [
        {
          "function": "from_dict",
          "decorator": "with_exception_handling"
        },
        {
          "function": "from_dict",
          "decorator": "with_exception_handling"
        },
        {
          "function": "from_dict",
          "decorator": "with_exception_handling"
        },
        {
          "function": "extract_timeframe_from_feedback",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\feedback\\service.py",
      "changes_made": [
        {
          "function": "stop",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_instrument",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_adjustment",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_insights",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_correlations",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_periodic_analysis",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\feedback\\analyzers\\correlation.py",
      "changes_made": [
        {
          "function": "analyze_correlations",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_calculate_correlation",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_leading_timeframes",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\feedback\\analyzers\\temporal.py",
      "changes_made": [
        {
          "function": "analyze_temporal_patterns",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_calculate_trend",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_detect_error_patterns",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\feedback\\collectors\\timeframe_collector.py",
      "changes_made": [
        {
          "function": "collect_feedback",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_feedback_by_timeframe",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\feedback\\processors\\adjustment.py",
      "changes_made": [
        {
          "function": "calculate_adjustments",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\adaptive_layer\\feedback\\utils\\statistics.py",
      "changes_made": [
        {
          "function": "calculate_basic_statistics",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_percentiles",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_moving_average",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_correlation",
          "decorator": "with_exception_handling"
        },
        {
          "function": "detect_outliers",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\alert_system.py",
      "changes_made": [
        {
          "function": "_notification_worker",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_send_email_notification",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_send_sms_notification",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_send_slack_notification",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_send_webhook_notification",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_send_ui_notification",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_send_mobile_notification",
          "decorator": "with_exception_handling"
        },
        {
          "function": "save_rules_to_file",
          "decorator": "with_exception_handling"
        },
        {
          "function": "load_rules_from_file",
          "decorator": "with_exception_handling"
        },
        {
          "function": "__del__",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\base_analyzer.py",
      "changes_made": [
        {
          "function": "execute",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\currency_correlation_analyzer.py",
      "changes_made": [
        {
          "function": "_calculate_trend",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\effectiveness_analysis.py",
      "changes_made": [
        {
          "function": "_load_evaluations",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_load_performance",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\feature_extraction.py",
      "changes_made": [
        {
          "function": "_parse_timeframe",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_resample_data",
          "decorator": "with_exception_handling"
        },
        {
          "function": "extract",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_is_more_granular",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_extract_advanced_feature",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_extract_trend_feature",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_extract_composite_feature",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_extract_statistical_feature",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\harmonic_pattern_detector.py",
      "changes_made": [
        {
          "function": "detect_harmonic_patterns",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\indicators.py",
      "changes_made": [
        {
          "function": "__init__",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_sma",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_ema",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_rsi",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_macd",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_bollinger_bands",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_atr",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_stochastic",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_adx",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_obv",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_mfi",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_aroon",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_ichimoku",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\indicator_interface.py",
      "changes_made": [
        {
          "function": "batch_calculate",
          "decorator": "with_exception_handling"
        },
        {
          "function": "optimize_parameters",
          "decorator": "with_exception_handling"
        },
        {
          "function": "evaluate_params",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\ml_evaluation.py",
      "changes_made": [
        {
          "function": "evaluate_predictions_batch",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_model_performance",
          "decorator": "with_exception_handling"
        },
        {
          "function": "save_evaluations_to_file",
          "decorator": "with_exception_handling"
        },
        {
          "function": "load_evaluations_from_file",
          "decorator": "with_exception_handling"
        },
        {
          "function": "generate_feedback_for_indicator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "bulk_generate_feedback",
          "decorator": "with_exception_handling"
        },
        {
          "function": "save_feedback_to_file",
          "decorator": "with_exception_handling"
        },
        {
          "function": "load_feedback_from_file",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\ml_feature_transformers.py",
      "changes_made": [
        {
          "function": "build_pipeline",
          "decorator": "with_exception_handling"
        },
        {
          "function": "extract_features",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\ml_integration.py",
      "changes_made": [
        {
          "function": "load_model_configs",
          "decorator": "with_exception_handling"
        },
        {
          "function": "save_model_configs",
          "decorator": "with_exception_handling"
        },
        {
          "function": "load_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "prepare_features",
          "decorator": "with_exception_handling"
        },
        {
          "function": "predict",
          "decorator": "with_exception_handling"
        },
        {
          "function": "predict_multiple",
          "decorator": "with_exception_handling"
        },
        {
          "function": "save_predictions_to_file",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\multi_timeframe_analyzer.py",
      "changes_made": [
        {
          "function": "_timeframe_to_minutes",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\sequence_pattern_recognizer.py",
      "changes_made": [
        {
          "function": "detect_patterns",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\signal_system.py",
      "changes_made": [
        {
          "function": "add_signal",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_resolve_conflict",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\visualization.py",
      "changes_made": [
        {
          "function": "render_html",
          "decorator": "with_exception_handling"
        },
        {
          "function": "render_html",
          "decorator": "with_exception_handling"
        },
        {
          "function": "render_html",
          "decorator": "with_exception_handling"
        },
        {
          "function": "delete_dashboard",
          "decorator": "with_exception_handling"
        },
        {
          "function": "save_dashboards",
          "decorator": "with_exception_handling"
        },
        {
          "function": "load_dashboards",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\advanced_ta\\classic_patterns.py",
      "changes_made": [
        {
          "function": "find_patterns",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\advanced_ta\\currency_correlation.py",
      "changes_made": [
        {
          "function": "analyze",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_calculate_rolling_correlations",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_detect_correlation_regime_changes",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_identify_strong_correlations",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\advanced_ta\\gann_tools.py",
      "changes_made": [
        {
          "function": "calculate",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\advanced_ta\\harmonic_pattern_recognizer.py",
      "changes_made": [
        {
          "function": "find_patterns",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_identify_incremental_patterns",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\advanced_ta\\market_structure.py",
      "changes_made": [
        {
          "function": "analyze",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\advanced_ta\\multi_timeframe.py",
      "changes_made": [
        {
          "function": "analyze",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\advanced_ta\\pivot_points.py",
      "changes_made": [
        {
          "function": "calculate",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\advanced_ta\\time_cycle.py",
      "changes_made": [
        {
          "function": "analyze",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\advanced_ta\\volume_volatility.py",
      "changes_made": [
        {
          "function": "analyze",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\advanced_ta\\elliott_wave\\counter.py",
      "changes_made": [
        {
          "function": "_add_wave_labels",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_determine_current_wave",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\advanced_ta\\elliott_wave\\validators.py",
      "changes_made": [
        {
          "function": "check_if_diagonal",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\advanced_ta\\fibonacci\\analyzer.py",
      "changes_made": [
        {
          "function": "analyze_retracement",
          "decorator": "with_exception_handling"
        },
        {
          "function": "analyze_extension",
          "decorator": "with_exception_handling"
        },
        {
          "function": "analyze_arcs",
          "decorator": "with_exception_handling"
        },
        {
          "function": "analyze_fans",
          "decorator": "with_exception_handling"
        },
        {
          "function": "analyze_time_zones",
          "decorator": "with_exception_handling"
        },
        {
          "function": "analyze_all",
          "decorator": "with_exception_handling"
        },
        {
          "function": "check_price_at_levels",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\advanced_ta\\fibonacci\\arcs.py",
      "changes_made": [
        {
          "function": "calculate",
          "decorator": "with_exception_handling"
        },
        {
          "function": "is_price_at_arc",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\advanced_ta\\fibonacci\\extension.py",
      "changes_made": [
        {
          "function": "calculate",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\advanced_ta\\fibonacci\\fans.py",
      "changes_made": [
        {
          "function": "calculate",
          "decorator": "with_exception_handling"
        },
        {
          "function": "is_price_at_fan",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\advanced_ta\\fibonacci\\retracement.py",
      "changes_made": [
        {
          "function": "calculate",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\advanced_ta\\fibonacci\\time_zones.py",
      "changes_made": [
        {
          "function": "calculate",
          "decorator": "with_exception_handling"
        },
        {
          "function": "is_index_at_zone",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_next_zones",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\backtesting\\stress_testing.py",
      "changes_made": [
        {
          "function": "run_stress_test",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_apply_historical_crash",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_apply_correlation_breakdown",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_apply_custom_transformation",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\backtesting\\walk_forward.py",
      "changes_made": [
        {
          "function": "_optimize_window",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_evaluate_parameters",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\confluence\\confluence_analyzer.py",
      "changes_made": [
        {
          "function": "analyze",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_collect_all_levels",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\correlation\\currency_correlation_enhanced.py",
      "changes_made": [
        {
          "function": "_detect_lead_lag",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_test_cointegration",
          "decorator": "with_exception_handling"
        },
        {
          "function": "analyze",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\indicators\\common_lib_adapter.py",
      "changes_made": [
        {
          "function": "_get_indicator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_sma",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_ema",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_wma",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_rsi",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_stochastic",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_macd",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_cci",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_williams_r",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_roc",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_bollinger_bands",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_keltner_channels",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_donchian_channels",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_atr",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_price_envelopes",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_historical_volatility",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\market_regime\\analyzer.py",
      "changes_made": [
        {
          "function": "detect_regime_change",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\market_regime\\models.py",
      "changes_made": [
        {
          "function": "from_dict",
          "decorator": "with_exception_handling"
        },
        {
          "function": "from_dict",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\multi_timeframe\\multi_timeframe_analyzer.py",
      "changes_made": [
        {
          "function": "analyze",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_analyze_timeframe",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_calculate_trend",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_identify_key_levels",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_calculate_volume_profile",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_calculate_correlation_matrix",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_calculate_timeframe_correlation",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_determine_overall_assessment",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\nlp\\base_nlp_analyzer.py",
      "changes_made": [
        {
          "function": "_initialize_nlp_pipeline",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_ensure_nlp_pipeline",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\nlp\\economic_report_parser.py",
      "changes_made": [
        {
          "function": "_extract_metrics",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\nlp\\entity_extraction.py",
      "changes_made": [
        {
          "function": "_extract_dates",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_extract_times",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\nlp\\news_analyzer.py",
      "changes_made": [
        {
          "function": "analyze",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\sentiment\\base_sentiment_analyzer.py",
      "changes_made": [
        {
          "function": "filter_by_recency",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\analysis\\sentiment\\analyzers\\nlp_analyzer.py",
      "changes_made": [
        {
          "function": "_initialize_nlp_pipeline",
          "decorator": "with_exception_handling"
        },
        {
          "function": "analyze_sentiment",
          "decorator": "with_exception_handling"
        },
        {
          "function": "extract_entities",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\causal_analysis_api.py",
      "changes_made": [
        {
          "function": "list_to_dataframe",
          "decorator": "with_exception_handling"
        },
        {
          "function": "discover_structure",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "estimate_effects",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "generate_counterfactuals_api",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\causal_visualization_api.py",
      "changes_made": [
        {
          "function": "get_causal_graph",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_intervention_effect",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_counterfactual_scenario",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_available_symbols",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_available_timeframes",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_enhanced_data",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\dependencies.py",
      "changes_made": [
        {
          "function": "get_causal_inference_service",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_analysis_provider",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_indicator_provider",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_pattern_recognizer",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\distributed_computing_endpoints.py",
      "changes_made": [
        {
          "function": "submit_task",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_task_status",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_task_result",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_manager_stats",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\feedback_endpoints.py",
      "changes_made": [
        {
          "function": "get_feedback_system_status",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_recent_feedback_events",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_feedback_statistics",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "record_feedback_processed",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\feedback_router.py",
      "changes_made": [
        {
          "function": "submit_feedback",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "request_model_retraining",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "reset_feedback_metrics",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\ml_endpoints.py",
      "changes_made": [
        {
          "function": "recognize_patterns",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "predict_prices",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "detect_confluence_ml",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_divergence_ml",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "list_models",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_model_info",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\router.py",
      "changes_made": [
        {
          "function": "show_deprecation_warning",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\auth\\feedback_auth.py",
      "changes_made": [
        {
          "function": "get_current_user",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\middleware\\error_logging_middleware.py",
      "changes_made": [
        {
          "function": "dispatch",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\adapter_api.py",
      "changes_made": [
        {
          "function": "get_analysis",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_indicators",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_patterns",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\adaptive_layer.py",
      "changes_made": [
        {
          "function": "generate_adaptive_parameters_endpoint",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "adjust_parameters_endpoint",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_strategy_parameters_endpoint",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "generate_strategy_recommendations_endpoint",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_strategy_effectiveness_trend_endpoint",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "record_strategy_outcome_endpoint",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_adaptation_history_endpoint",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_parameter_history_endpoint",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_adaptation_insights_endpoint",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_performance_by_regime_endpoint",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\analysis_results_api.py",
      "changes_made": [
        {
          "function": "list_analyzers",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_analyzer_details",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "run_analysis",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_performance_metrics",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_effectiveness_metrics",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "record_effectiveness",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "run_multi_timeframe_analysis",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "run_confluence_analysis",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\causal_analysis.py",
      "changes_made": [
        {
          "function": "analyze_currency_pair_relationships",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_regime_change_drivers",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "enhance_trading_signals",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "assess_correlation_breakdown_risk",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "generate_counterfactual_scenarios",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\correlation_analysis.py",
      "changes_made": [
        {
          "function": "analyze_currency_correlations",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_lead_lag_relationships",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "detect_correlation_breakdowns",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "test_pair_cointegration",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\correlation_api.py",
      "changes_made": [
        {
          "function": "get_correlation_matrix",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_symbol_correlations",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_cross_asset_correlations",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_correlation_changes",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_visualization_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_correlations",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\effectiveness_analysis_api.py",
      "changes_made": [
        {
          "function": "analyze_regime_performance",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_temporal_performance",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "find_optimal_conditions",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_complementarity",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "generate_dashboard",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_cross_timeframe",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_comprehensive",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\feedback.py",
      "changes_made": [
        {
          "function": "get_feedback_statistics",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "trigger_model_retraining",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_feedback_rules",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_parameter_performance",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\feedback_api.py",
      "changes_made": [
        {
          "function": "submit_feedback",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "record_strategy_outcome",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_feedback_statistics",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_feedback_items",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_parameter_performance",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_strategy_version_history",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "trigger_strategy_mutation",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_strategy_mutation_effectiveness",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "evaluate_strategy_versions",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_feedback_system_status",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_learning_insights",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "reset_feedback_statistics",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\health.py",
      "changes_made": [
        {
          "function": "health_check",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "liveness_probe",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "readiness_probe",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\manipulation_detection.py",
      "changes_made": [
        {
          "function": "detect_manipulation_patterns",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "detect_stop_hunting",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "detect_fake_breakouts",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "detect_volume_anomalies",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\market_regime_analysis.py",
      "changes_made": [
        {
          "function": "detect_market_regime",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_regime_history",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_tool_regime_performance",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "find_optimal_market_conditions",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_tool_complementarity",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "generate_performance_report",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "recommend_tools_for_regime",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_effectiveness_trends",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_underperforming_tools",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\multi_asset.py",
      "changes_made": [
        {
          "function": "list_assets",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_asset_details",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_correlated_assets",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "list_asset_groups",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_asset_group",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_analysis_parameters",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\nlp_analysis.py",
      "changes_made": [
        {
          "function": "analyze_news",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_economic_report",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_combined_insights",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_market_sentiment",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\tool_effectiveness.py",
      "changes_made": [
        {
          "function": "register_outcome",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\standardized\\adaptive_layer.py",
      "changes_made": [
        {
          "function": "generate_adaptive_parameters",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "adjust_parameters",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_strategy_parameters",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "generate_strategy_recommendations",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_strategy_effectiveness_trend",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "record_strategy_outcome",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_adaptation_history",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_parameter_history",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_adaptation_insights",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_performance_by_regime",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\standardized\\api_standardization_validator.py",
      "changes_made": [
        {
          "function": "extract_endpoints",
          "decorator": "with_exception_handling"
        },
        {
          "function": "extract_client_info",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\standardized\\backtesting.py",
      "changes_made": [
        {
          "function": "run_backtest",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_backtest_results",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "run_walk_forward_optimization",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "run_monte_carlo_simulation",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "run_stress_test",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_available_strategies",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_available_data_sources",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\standardized\\causal.py",
      "changes_made": [
        {
          "function": "discover_structure",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "estimate_effect",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "counterfactual_analysis",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_currency_pair_relationships",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "enhance_trading_signals",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "validate_relationship",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\standardized\\correlation_analysis.py",
      "changes_made": [
        {
          "function": "analyze_currency_correlations",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_lead_lag_relationships",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "detect_correlation_breakdowns",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "test_pair_cointegration",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\standardized\\effectiveness.py",
      "changes_made": [
        {
          "function": "register_signal",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "register_outcome",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_effectiveness_metrics",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_dashboard_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "save_effectiveness_report",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_effectiveness_reports",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_effectiveness_report",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "clear_tool_data",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\standardized\\feedback.py",
      "changes_made": [
        {
          "function": "get_feedback_statistics",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "trigger_model_retraining",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_feedback_rules",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_parameter_performance",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "submit_feedback",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\standardized\\health.py",
      "changes_made": [
        {
          "function": "readiness_probe",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\standardized\\manipulation_detection.py",
      "changes_made": [
        {
          "function": "detect_manipulation_patterns",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "detect_stop_hunting",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "detect_fake_breakouts",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "detect_volume_anomalies",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\standardized\\market_regime.py",
      "changes_made": [
        {
          "function": "detect_market_regime",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_regime_history",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_tool_regime_performance",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "find_optimal_market_conditions",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_tool_complementarity",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "generate_performance_report",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "recommend_tools_for_regime",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_effectiveness_trends",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_underperforming_tools",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\standardized\\monitoring.py",
      "changes_made": [
        {
          "function": "get_async_performance_metrics",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_memory_metrics",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "trigger_async_performance_report",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_service_health",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\standardized\\nlp_analysis.py",
      "changes_made": [
        {
          "function": "analyze_news",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_economic_report",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_combined_insights",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_market_sentiment",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\api\\v1\\standardized\\signal_quality.py",
      "changes_made": [
        {
          "function": "evaluate_signal_quality",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_signal_quality",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_quality_trends",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\backtesting\\data_providers.py",
      "changes_made": [
        {
          "function": "stream_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "stream_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "stream_data",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\backtesting\\orchestrator.py",
      "changes_made": [
        {
          "function": "run",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "plot_equity_curve",
          "decorator": "with_exception_handling"
        },
        {
          "function": "run_backtest_example",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\backtesting\\risk_components.py",
      "changes_made": [
        {
          "function": "get_risk_assessment",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_dynamic_adjustments",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\batch\\metric_calculator.py",
      "changes_made": [
        {
          "function": "recalculate_all_metrics",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_recalculate_tool_metrics",
          "decorator": "with_exception_handling"
        },
        {
          "function": "generate_periodic_reports",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\caching\\cache_service.py",
      "changes_made": [
        {
          "function": "__init__",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_serialize",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_deserialize",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get",
          "decorator": "with_exception_handling"
        },
        {
          "function": "set",
          "decorator": "with_exception_handling"
        },
        {
          "function": "delete",
          "decorator": "with_exception_handling"
        },
        {
          "function": "clear_prefix",
          "decorator": "with_exception_handling"
        },
        {
          "function": "generate_cache_key",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\causal\\algorithms.py",
      "changes_made": [
        {
          "function": "g_test",
          "decorator": "with_exception_handling"
        },
        {
          "function": "chi_squared_test",
          "decorator": "with_exception_handling"
        },
        {
          "function": "kernel_based_ci_test",
          "decorator": "with_exception_handling"
        },
        {
          "function": "estimate_causal_effect_regression",
          "decorator": "with_exception_handling"
        },
        {
          "function": "estimate_causal_effect_matching",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\causal\\causal_inference_service.py",
      "changes_made": [
        {
          "function": "identify_causal_effect",
          "decorator": "with_exception_handling"
        },
        {
          "function": "estimate_causal_effect",
          "decorator": "with_exception_handling"
        },
        {
          "function": "run_analysis",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\causal\\evaluation.py",
      "changes_made": [
        {
          "function": "validate_on_synthetic_data",
          "decorator": "with_exception_handling"
        },
        {
          "function": "compare_with_ml_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "evaluate_causal_model",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\causal\\feature_integration.py",
      "changes_made": [
        {
          "function": "get_causal_features",
          "decorator": "with_exception_handling"
        },
        {
          "function": "store_derived_causal_features",
          "decorator": "with_exception_handling"
        },
        {
          "function": "assess_feature_causal_impact",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\causal\\visualization.py",
      "changes_made": [
        {
          "function": "plot_causal_graph",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\causal\\data\\preparation.py",
      "changes_made": [
        {
          "function": "transform",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\causal\\detection\\relationship_detector.py",
      "changes_made": [
        {
          "function": "detect_granger_causality",
          "decorator": "with_exception_handling"
        },
        {
          "function": "discover_structural_relationships",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\causal\\feedback\\feedback_loop.py",
      "changes_made": [
        {
          "function": "_update_models",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_analyze_factor_performance",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_update_causal_weights",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_retrain_models",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\causal\\inference\\algorithms.py",
      "changes_made": [
        {
          "function": "estimate_effect_dowhy",
          "decorator": "with_exception_handling"
        },
        {
          "function": "estimate_heterogeneous_effect_econml",
          "decorator": "with_exception_handling"
        },
        {
          "function": "pc_algorithm",
          "decorator": "with_exception_handling"
        },
        {
          "function": "fci_algorithm",
          "decorator": "with_exception_handling"
        },
        {
          "function": "lingam_algorithm",
          "decorator": "with_exception_handling"
        },
        {
          "function": "estimate_heterogeneous_effect_econml",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\causal\\integration\\causal_integration.py",
      "changes_made": [
        {
          "function": "generate_counterfactual_scenarios",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\causal\\integration\\system_integrator.py",
      "changes_made": [
        {
          "function": "calculate_relationship_confidence",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_calculate_historical_performance",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\causal\\services\\causal_data_connector.py",
      "changes_made": [
        {
          "function": "get_historical_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "start_streaming",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "streaming_task",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_add_indicators_via_api",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\causal\\services\\causal_inference_service.py",
      "changes_made": [
        {
          "function": "validate_relationship",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\causal\\services\\causal_strategy_enhancer.py",
      "changes_made": [
        {
          "function": "_initialize_causal_analysis",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "start_real_time_causal_updates",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_causal_analysis",
          "decorator": "with_exception_handling"
        },
        {
          "function": "enhance_strategy",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "identify_causal_factors",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "generate_causal_graph",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "apply_causal_enhancement",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\causal\\visualization\\relationship_graph.py",
      "changes_made": [
        {
          "function": "plot",
          "decorator": "with_exception_handling"
        },
        {
          "function": "plot",
          "decorator": "with_exception_handling"
        },
        {
          "function": "plot",
          "decorator": "with_exception_handling"
        },
        {
          "function": "plot_cross_correlation",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\chat\\api_endpoints.py",
      "changes_made": [
        {
          "function": "send_message",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "execute_action",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_history",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "clear_history",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\chat\\chat_backend_service.py",
      "changes_made": [
        {
          "function": "__init__",
          "decorator": "with_exception_handling"
        },
        {
          "function": "process_message",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_handle_analysis_intent",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "execute_trading_action",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_handle_technical_analysis_intent",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\clients\\analysis_engine_client.py",
      "changes_made": [
        {
          "function": "detect_market_regime",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_regime_history",
          "decorator": "with_exception_handling"
        },
        {
          "function": "generate_adaptive_parameters",
          "decorator": "with_exception_handling"
        },
        {
          "function": "update_strategy_parameters",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_strategy_recommendations",
          "decorator": "with_exception_handling"
        },
        {
          "function": "analyze_tool_regime_performance",
          "decorator": "with_exception_handling"
        },
        {
          "function": "find_optimal_market_conditions",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\clients\\execution_engine_client.py",
      "changes_made": [
        {
          "function": "_load_config",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_make_request",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "set_strategy_parameter",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "deploy_strategy",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_strategy_status",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "list_strategies",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "pause_strategy",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "resume_strategy",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\clients\\ml_pipeline_client.py",
      "changes_made": [
        {
          "function": "_load_config",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_make_request",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "start_retraining_job",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_job_status",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "list_models",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_model_details",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "deploy_model",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "cancel_job",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_prediction",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\clients\\standardized\\adaptive_layer_client.py",
      "changes_made": [
        {
          "function": "_make_request",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_request",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\clients\\standardized\\backtesting_client.py",
      "changes_made": [
        {
          "function": "_make_request",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_request",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\clients\\standardized\\causal_client.py",
      "changes_made": [
        {
          "function": "_make_request",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_request",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\clients\\standardized\\correlation_analysis_client.py",
      "changes_made": [
        {
          "function": "_make_request",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_request",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\clients\\standardized\\effectiveness_client.py",
      "changes_made": [
        {
          "function": "_make_request",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_request",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\clients\\standardized\\feedback_client.py",
      "changes_made": [
        {
          "function": "_make_request",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_request",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\clients\\standardized\\manipulation_detection_client.py",
      "changes_made": [
        {
          "function": "_make_request",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_request",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\clients\\standardized\\market_regime_client.py",
      "changes_made": [
        {
          "function": "_make_request",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_request",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\clients\\standardized\\monitoring_client.py",
      "changes_made": [
        {
          "function": "_make_request",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_request",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\clients\\standardized\\nlp_analysis_client.py",
      "changes_made": [
        {
          "function": "_make_request",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_request",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\clients\\standardized\\signal_quality_client.py",
      "changes_made": [
        {
          "function": "_make_request",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_request",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\config\\settings.py",
      "changes_made": [
        {
          "function": "validate_host",
          "decorator": "with_exception_handling"
        },
        {
          "function": "validate_redis_host",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\core\\analysis_engine.py",
      "changes_made": [
        {
          "function": "_health_check_loop",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\core\\config.py",
      "changes_made": [
        {
          "function": "show_deprecation_warning",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\core\\connection_pool.py",
      "changes_made": [
        {
          "function": "initialize",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "cleanup",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\core\\container.py",
      "changes_made": [
        {
          "function": "initialize",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "cleanup",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\core\\database.py",
      "changes_made": [
        {
          "function": "get_db_session",
          "decorator": "with_exception_handling"
        },
        {
          "function": "init_db",
          "decorator": "with_exception_handling"
        },
        {
          "function": "check_db_connection",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\core\\enhanced_deprecation_monitor.py",
      "changes_made": [
        {
          "function": "_load_config",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_load_data",
          "decorator": "with_exception_handling"
        },
        {
          "function": "record_usage",
          "decorator": "with_exception_handling"
        },
        {
          "function": "save_data",
          "decorator": "with_exception_handling"
        },
        {
          "function": "analyze_imports",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\core\\memory_monitor.py",
      "changes_made": [
        {
          "function": "stop_monitoring",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_monitor_loop",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_check_memory_usage",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_memory_stats",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\core\\base\\components.py",
      "changes_made": [
        {
          "function": "execute",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "health_check",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "health_check",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\core\\monitoring\\async_performance_monitor.py",
      "changes_made": [
        {
          "function": "track_operation",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "stop_reporting",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_report_metrics_periodically",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\db\\connection.py",
      "changes_made": [
        {
          "function": "initialize_database",
          "decorator": "with_exception_handling"
        },
        {
          "function": "initialize_async_database",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "dispose_database",
          "decorator": "with_exception_handling"
        },
        {
          "function": "dispose_async_database",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_db",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_db_session",
          "decorator": "with_exception_handling"
        },
        {
          "function": "check_db_connection",
          "decorator": "with_exception_handling"
        },
        {
          "function": "check_async_db_connection",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "init_db",
          "decorator": "with_exception_handling"
        },
        {
          "function": "init_async_db",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\events\\publisher.py",
      "changes_made": [
        {
          "function": "_connect",
          "decorator": "with_exception_handling"
        },
        {
          "function": "publish",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\examples\\backtesting_client_usage.py",
      "changes_made": [
        {
          "function": "run_backtest_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_backtest_results_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "run_walk_forward_optimization_example",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\examples\\causal_client_usage.py",
      "changes_made": [
        {
          "function": "discover_structure_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "estimate_effect_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_counterfactuals_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_currency_pair_relationships_example",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\examples\\correlation_analysis_client_usage.py",
      "changes_made": [
        {
          "function": "analyze_currency_correlations_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_lead_lag_relationships_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "detect_correlation_breakdowns_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "test_pair_cointegration_example",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\examples\\effectiveness_client_usage.py",
      "changes_made": [
        {
          "function": "register_signal_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "register_outcome_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_effectiveness_metrics_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_dashboard_data_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "save_effectiveness_report_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_effectiveness_reports_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_effectiveness_report_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "clear_tool_data_example",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\examples\\feedback_client_usage.py",
      "changes_made": [
        {
          "function": "get_feedback_statistics_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "trigger_model_retraining_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_feedback_rules_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_parameter_performance_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "submit_feedback_example",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\examples\\manipulation_detection_client_usage.py",
      "changes_made": [
        {
          "function": "detect_manipulation_patterns_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "detect_stop_hunting_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "detect_fake_breakouts_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "detect_volume_anomalies_example",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\examples\\market_regime_client_usage.py",
      "changes_made": [
        {
          "function": "detect_market_regime_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_regime_history_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_tool_regime_performance_example",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\examples\\monitoring_client_usage.py",
      "changes_made": [
        {
          "function": "get_async_performance_metrics_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_memory_metrics_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "trigger_async_performance_report_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_service_health_example",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\examples\\nlp_analysis_client_usage.py",
      "changes_made": [
        {
          "function": "analyze_news_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_economic_report_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_combined_insights_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_market_sentiment_example",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\examples\\signal_quality_client_usage.py",
      "changes_made": [
        {
          "function": "evaluate_signal_quality_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_signal_quality_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_quality_trends_example",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\examples\\standardized_client_usage.py",
      "changes_made": [
        {
          "function": "generate_adaptive_parameters_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "adjust_parameters_example",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\integration\\analysis_integration_service.py",
      "changes_made": [
        {
          "function": "_run_technical_analysis",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_run_pattern_analysis",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_run_mtf_analysis",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_run_ml_prediction",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_run_sentiment_analysis",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_run_market_regime_analysis",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\integration\\feature_store_adapter.py",
      "changes_made": [
        {
          "function": "register_pattern_based_feature",
          "decorator": "with_exception_handling"
        },
        {
          "function": "store_features",
          "decorator": "with_exception_handling"
        },
        {
          "function": "process_analysis_result",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\integration\\learning_adaptive_integration.py",
      "changes_made": [
        {
          "function": "stop",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_periodic_sync",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "sync_error_patterns_to_adaptation",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "sync_predictive_models_to_adaptation",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "sync_adaptation_feedback_to_learning",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\learning_from_mistakes\\effectiveness_logger.py",
      "changes_made": [
        {
          "function": "_ensure_storage_path",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_persist_log",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_update_summary",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_load_logs_from_storage",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_summary",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\learning_from_mistakes\\predictive_failure_modeling.py",
      "changes_made": [
        {
          "function": "train_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "load_model",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\learning_from_mistakes\\risk_adjustment.py",
      "changes_made": [
        {
          "function": "_send_adjustment_to_risk_service",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\monitoring\\health_checks.py",
      "changes_made": [
        {
          "function": "check_database_connection",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "check_redis_connection",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "check_service_connection",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "check_component_health",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\monitoring\\structured_logging.py",
      "changes_made": [
        {
          "function": "__init__",
          "decorator": "with_exception_handling"
        },
        {
          "function": "with_correlation_id",
          "decorator": "with_exception_handling"
        },
        {
          "function": "wrapper",
          "decorator": "with_exception_handling"
        },
        {
          "function": "log_execution_time",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "wrapper",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\monitoring\\tracing.py",
      "changes_made": [
        {
          "function": "trace_function",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "wrapper",
          "decorator": "with_exception_handling"
        },
        {
          "function": "trace_async_function",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "wrapper",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\multi_asset\\asset_registry.py",
      "changes_made": [
        {
          "function": "load_config",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\multi_asset\\asset_strategy_framework.py",
      "changes_made": [
        {
          "function": "get_strategy",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\multi_asset\\optimized_confluence_detector.py",
      "changes_made": [
        {
          "function": "find_related_pairs",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "detect_confluence_optimized",
          "decorator": "with_exception_handling"
        },
        {
          "function": "analyze_divergence_optimized",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\multi_asset\\related_pairs_confluence_detector.py",
      "changes_made": [
        {
          "function": "find_related_pairs",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "detect_confluence",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_detect_signal",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\repositories\\feedback_repository.py",
      "changes_made": [
        {
          "function": "get_prioritized_feedback_since",
          "decorator": "with_exception_handling"
        },
        {
          "function": "update_feedback_status",
          "decorator": "with_exception_handling"
        },
        {
          "function": "create_feedback_batch",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_feedback_batch",
          "decorator": "with_exception_handling"
        },
        {
          "function": "mark_batch_processed",
          "decorator": "with_exception_handling"
        },
        {
          "function": "store_feedback",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_file_get_prioritized_feedback_since",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_file_update_feedback_status",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_file_get_feedback_items_by_ids",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_emit_batch_created_event",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_emit_batch_processed_event",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_emit_feedback_created_event",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\repositories\\tool_effectiveness_repository.py",
      "changes_made": [
        {
          "function": "initialize",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "cleanup",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "store_prediction",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_predictions",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "store_effectiveness",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_effective_tools",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\resilience\\database.py",
      "changes_made": [
        {
          "function": "get_db_session",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\resilience\\degraded_mode_indicators.py",
      "changes_made": [
        {
          "function": "calculate",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\resilience\\degraded_mode_strategies.py",
      "changes_made": [
        {
          "function": "get_technical_indicators_fallback",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_market_regime_prediction_fallback",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\resilience\\redis_client.py",
      "changes_made": [
        {
          "function": "_execute_redis_operation",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\scheduling\\effectiveness_scheduler.py",
      "changes_made": [
        {
          "function": "stop",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_run_scheduler",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "calculate_hourly_metrics",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "calculate_daily_metrics",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "calculate_weekly_metrics",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "calculate_monthly_metrics",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_save_metrics_to_db",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_save_regime_metrics_to_db",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\scheduling\\report_scheduler.py",
      "changes_made": [
        {
          "function": "stop",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_run_scheduler",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_generate_daily_reports",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_generate_weekly_reports",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_generate_monthly_reports",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\scheduling\\scheduler_factory.py",
      "changes_made": [
        {
          "function": "initialize_schedulers",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "cleanup_schedulers",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\services\\adaptive_integration.py",
      "changes_made": [
        {
          "function": "update_strategy_parameters",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_apply_parameters_to_strategy",
          "decorator": "with_exception_handling"
        },
        {
          "function": "generate_strategy_recommendations",
          "decorator": "with_exception_handling"
        },
        {
          "function": "analyze_strategy_effectiveness_trend",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_get_tool_effectiveness",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_generate_parameter_optimizations",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\services\\adaptive_layer.py",
      "changes_made": [
        {
          "function": "generate_adaptive_parameters",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_get_cached_effectiveness_metrics",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\services\\adaptive_signal_quality.py",
      "changes_made": [
        {
          "function": "evaluate_signal_quality",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\services\\dashboard_data_provider.py",
      "changes_made": [
        {
          "function": "get_summary_data",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_tool_comparison_data",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_regime_effectiveness_data",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_get_top_performers",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\services\\dashboard_generator.py",
      "changes_made": [
        {
          "function": "export_dashboard_json",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\services\\effectiveness_metrics.py",
      "changes_made": [
        {
          "function": "calculate",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\services\\enhanced_tool_effectiveness.py",
      "changes_made": [
        {
          "function": "register_signal",
          "decorator": "with_exception_handling"
        },
        {
          "function": "register_outcome",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_metrics",
          "decorator": "with_exception_handling"
        },
        {
          "function": "analyze_tool_by_market_regime",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_effectiveness_trend",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_calculate_composite_score",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\services\\feature_store_client.py",
      "changes_made": [
        {
          "function": "get_indicator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_market_data",
          "decorator": "with_exception_handling"
        },
        {
          "function": "recalculate_indicator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_available_indicators",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\services\\feedback_event_processor.py",
      "changes_made": [
        {
          "function": "_handle_feedback_created",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_handle_timeframe_feedback",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\services\\market_regime_detector.py",
      "changes_made": [
        {
          "function": "detect_current_regime",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\services\\model_retraining_service.py",
      "changes_made": [
        {
          "function": "check_and_trigger_retraining",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\services\\model_trainer.py",
      "changes_made": [
        {
          "function": "retrain_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "evaluate_feedback_impact",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_retraining_history",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_get_current_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_record_retraining",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\services\\regime_transition_predictor.py",
      "changes_made": [
        {
          "function": "_analyze_correlated_markets",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_correlated_markets",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\services\\signal_quality_evaluator.py",
      "changes_made": [
        {
          "function": "evaluate_all_metrics",
          "decorator": "with_exception_handling"
        },
        {
          "function": "evaluate_entry_timing",
          "decorator": "with_exception_handling"
        },
        {
          "function": "evaluate_signal_stability",
          "decorator": "with_exception_handling"
        },
        {
          "function": "evaluate_price_action_alignment",
          "decorator": "with_exception_handling"
        },
        {
          "function": "evaluate_reversal_potential",
          "decorator": "with_exception_handling"
        },
        {
          "function": "evaluate_false_signal_rate",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\services\\standardized_market_regime_service.py",
      "changes_made": [
        {
          "function": "detect_market_regime",
          "decorator": "with_exception_handling"
        },
        {
          "function": "detect_market_regime_async",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "detect_current_regime",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\services\\timeframe_optimization_service.py",
      "changes_made": [
        {
          "function": "save_to_file",
          "decorator": "with_exception_handling"
        },
        {
          "function": "load_from_file",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\services\\time_series_index_manager.py",
      "changes_made": [
        {
          "function": "ensure_index",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\services\\tool_effectiveness.py",
      "changes_made": [
        {
          "function": "record_prediction",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_update_regime_performance",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_tool_effectiveness",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_best_tools",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_tool_history",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_performance_summary",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\services\\tool_effectiveness_service.py",
      "changes_made": [
        {
          "function": "_calculate_trend",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\signal_flow\\analysis_signal_manager.py",
      "changes_made": [
        {
          "function": "create_signal_from_analysis",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\tools\\api_standardization_validator.py",
      "changes_made": [
        {
          "function": "collect_routers",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\tools\\api_test_client.py",
      "changes_made": [
        {
          "function": "test_market_regime_detection",
          "decorator": "with_exception_handling"
        },
        {
          "function": "test_adaptive_parameters",
          "decorator": "with_exception_handling"
        },
        {
          "function": "test_strategy_recommendations",
          "decorator": "with_exception_handling"
        },
        {
          "function": "test_tool_regime_performance",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\tools\\client_code_migrator.py",
      "changes_made": [
        {
          "function": "scan_file_for_endpoints",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\tools\\effectiveness\\enhanced_effectiveness_framework.py",
      "changes_made": [
        {
          "function": "calculate_regime_specific_performance",
          "decorator": "with_exception_handling"
        },
        {
          "function": "analyze_cross_timeframe_consistency",
          "decorator": "with_exception_handling"
        },
        {
          "function": "detect_performance_decay",
          "decorator": "with_exception_handling"
        },
        {
          "function": "compare_against_baseline",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_calculate_statistical_significance",
          "decorator": "with_exception_handling"
        },
        {
          "function": "generate_comprehensive_report",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\tools\\effectiveness\\enhanced_rl_effectiveness_framework.py",
      "changes_made": [
        {
          "function": "_configure_environment_for_regime",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\tools\\effectiveness\\rl_effectiveness_framework.py",
      "changes_made": [
        {
          "function": "export_report_to_file",
          "decorator": "with_exception_handling"
        },
        {
          "function": "save_analytics_report",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\utils\\config_loader.py",
      "changes_made": [
        {
          "function": "load_config",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\utils\\distributed_computing.py",
      "changes_made": [
        {
          "function": "_worker_loop",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_process_task",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\utils\\distributed_tracing.py",
      "changes_made": [
        {
          "function": "_init_opentelemetry",
          "decorator": "with_exception_handling"
        },
        {
          "function": "start_span",
          "decorator": "with_exception_handling"
        },
        {
          "function": "trace",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "wrapper",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\utils\\gpu_accelerator.py",
      "changes_made": [
        {
          "function": "__init__",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_warm_up_gpu",
          "decorator": "with_exception_handling"
        },
        {
          "function": "to_gpu",
          "decorator": "with_exception_handling"
        },
        {
          "function": "to_cpu",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_technical_indicators",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\utils\\memory_optimized_dataframe.py",
      "changes_made": [
        {
          "function": "get_view",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\utils\\optimized_parallel_processor.py",
      "changes_made": [
        {
          "function": "process",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_execute_task",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\utils\\platform_compatibility.py",
      "changes_made": [
        {
          "function": "has_gpu",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_memory_info",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_cpu_info",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_gpu_info",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_optimal_thread_count",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_optimal_memory_limit",
          "decorator": "with_exception_handling"
        },
        {
          "function": "with_fallback",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\utils\\predictive_cache_manager.py",
      "changes_made": [
        {
          "function": "clear",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_predict_and_precompute",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_precomputation_loop",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_precompute_value",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\analysis_engine\\utils\\validation.py",
      "changes_made": [
        {
          "function": "ensure_dataframe",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\examples\\ml_client_example.py",
      "changes_made": [
        {
          "function": "demo_ml_pipeline_client",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\scripts\\load_test.py",
      "changes_made": [
        {
          "function": "_user_task",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\scripts\\real_market_data_test.py",
      "changes_made": [
        {
          "function": "get_price_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "run_test",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\scripts\\real_world_performance_test.py",
      "changes_made": [
        {
          "function": "download_historical_data",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\scripts\\test_confluence_optimization.py",
      "changes_made": [
        {
          "function": "test_confluence_analyzer_performance",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\tests\\conftest.py",
      "changes_made": [
        {
          "function": "test_settings",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\tests\\strategy_adaptation_tests.py",
      "changes_made": [
        {
          "function": "adaptation_service",
          "decorator": "with_exception_handling"
        },
        {
          "function": "test_error_handling_in_analyzer",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\tests\\api\\test_memory_monitoring.py",
      "changes_made": [
        {
          "function": "test_app_memory_monitoring_error_handling",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_memory_stats",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\tests\\integration\\test_optimized_components_integration.py",
      "changes_made": [
        {
          "function": "process",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\tests\\multi_asset\\test_optimized_confluence_detector.py",
      "changes_made": [
        {
          "function": "test_find_related_pairs",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\tests\\scheduling\\test_async_mock.py",
      "changes_made": [
        {
          "function": "test_async_scheduler_pattern",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "stop",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_run",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "analysis-engine-service\\tests\\utils\\test_server.py",
      "changes_made": [
        {
          "function": "start",
          "decorator": "with_exception_handling"
        },
        {
          "function": "stop",
          "decorator": "with_exception_handling"
        }
      ]
    }
  ],
  "data-pipeline-service": [
    {
      "file": "data-pipeline-service\\data_pipeline_service\\database.py",
      "changes_made": [
        {
          "function": "connect",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "execute",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "fetch_all",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "fetch_one",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "fetch_value",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\database_standardized.py",
      "changes_made": [
        {
          "function": "connect",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "execute",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "fetch_all",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "fetch_one",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "fetch_value",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\monitoring.py",
      "changes_made": [
        {
          "function": "check",
          "decorator": "with_exception_handling"
        },
        {
          "function": "track_database_query",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "wrapper",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "track_service_client_request",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "wrapper",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "track_pipeline_processing",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "wrapper",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "track_pipeline_stage",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\adapters\\analysis_engine_adapter.py",
      "changes_made": [
        {
          "function": "analyze_market",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_analysis_types",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "backtest_strategy",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "calculate_indicator",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_indicator_info",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "list_indicators",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "recognize_patterns",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_pattern_types",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\adapters\\market_data_adapter.py",
      "changes_made": [
        {
          "function": "get_historical_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_latest_price",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_symbols",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_cached_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "cache_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "invalidate_cache",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\adapters\\multi_asset_adapter.py",
      "changes_made": [
        {
          "function": "get_asset_info",
          "decorator": "with_exception_handling"
        },
        {
          "function": "list_assets_by_class",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_asset_group",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_trading_parameters",
          "decorator": "with_exception_handling"
        },
        {
          "function": "normalize_data",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_volatility",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_price_levels",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_analysis_parameters",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_asset",
          "decorator": "with_exception_handling"
        },
        {
          "function": "list_assets",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_correlation",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_correlated_assets",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_asset_group",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_pip_value",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_trading_parameters",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\api\\market_data_api.py",
      "changes_made": [
        {
          "function": "get_historical_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_latest_price",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_symbols",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\api\\v1\\adapters.py",
      "changes_made": [
        {
          "function": "get_adapters_status",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "connect_adapters",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "disconnect_adapters",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_instruments",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_tick_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_ohlcv_data",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\api\\v1\\cleaning.py",
      "changes_made": [
        {
          "function": "clean_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "clean_ohlcv_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "clean_tick_data",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\api\\v1\\data_access.py",
      "changes_made": [
        {
          "function": "get_historical_ohlcv",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_ohlcv_dataframe",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_ohlcv_metrics",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_available_ranges",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_available_symbols",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_filtered_ohlcv",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_batch_ohlcv",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_historical_ohlcv_by_path",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_aggregated_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "export_historical_ohlcv",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_ohlcv_batch_for_feature_calculation",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\api\\v1\\instruments.py",
      "changes_made": [
        {
          "function": "get_instruments",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_instrument",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_trading_hours",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "create_or_update_instrument",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "add_trading_hours",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\api\\v1\\market_data_quality.py",
      "changes_made": [
        {
          "function": "validate_ohlcv_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "validate_tick_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "validate_alternative_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_data_quality_metrics",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_data_quality_sla",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_data_quality_sla",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\api\\v1\\monitoring.py",
      "changes_made": [
        {
          "function": "get_query_performance",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_slow_query_list",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "set_slow_query_threshold",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_query_dashboard",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\api\\v1\\ohlcv_router.py",
      "changes_made": [
        {
          "function": "get_historical_ohlcv",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_aggregated_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "export_historical_ohlcv",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_ohlcv_batch_for_feature_calculation",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\api\\v1\\reconciliation_api.py",
      "changes_made": [
        {
          "function": "reconcile_ohlcv_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "reconcile_tick_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_reconciliation_status",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\api\\v1\\tick_data.py",
      "changes_made": [
        {
          "function": "get_tick_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "validate_tick_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "store_tick_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_tick_data_window",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\cleaning\\advanced_cleaning_engine.py",
      "changes_made": [
        {
          "function": "clean_data",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_clean_impute_knn",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_clean_impute_timeseries",
          "decorator": "with_exception_handling"
        },
        {
          "function": "clean_with_isolation_forest",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\cleaning\\cleaning_engine.py",
      "changes_made": [
        {
          "function": "impute",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\db\\engine.py",
      "changes_made": [
        {
          "function": "initialize_database",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\models\\schemas.py",
      "changes_made": [
        {
          "function": "validate_type",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\monitoring\\query_performance.py",
      "changes_made": [
        {
          "function": "track_query_performance",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "wrapper",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\optimization\\connection_pool.py",
      "changes_made": [
        {
          "function": "initialize",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_sa_session",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_asyncpg_connection",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\optimization\\index_manager.py",
      "changes_made": [
        {
          "function": "_get_existing_indexes",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_create_index",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_table",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\parallel\\batch_feature_processor.py",
      "changes_made": [
        {
          "function": "calculate_features_for_instruments",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "calculate_features_for_timeframes",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\parallel\\error_handling.py",
      "changes_made": [
        {
          "function": "retry_with_backoff",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\parallel\\multi_timeframe_processor.py",
      "changes_made": [
        {
          "function": "_process_timeframe_group",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "process_with_parent",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "process_multi_instrument_timeframes",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "process_single_instrument",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\parallel\\parallel_processing_framework.py",
      "changes_made": [
        {
          "function": "get_available_workers",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_execute_with_threads",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_execute_with_processes",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_execute_task_with_timing",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\reconciliation\\market_data_reconciliation.py",
      "changes_made": [
        {
          "function": "fetch_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "fetch_data",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\repositories\\ohlcv_repository.py",
      "changes_made": [
        {
          "function": "fetch_historical_ohlcv",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "insert_ohlcv_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "fetch_bulk_ohlcv",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\repositories\\tick_data_repository.py",
      "changes_made": [
        {
          "function": "insert_tick_data",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\repositories\\tick_repository.py",
      "changes_made": [
        {
          "function": "fetch_tick_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "insert_tick_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "fetch_bulk_tick_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_latest_tick",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\services\\reconciliation_service.py",
      "changes_made": [
        {
          "function": "reconcile_ohlcv_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "reconcile_tick_data",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\services\\tick_data_service.py",
      "changes_made": [
        {
          "function": "validate_tick_data",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\services\\timeseries_aggregator.py",
      "changes_made": [
        {
          "function": "aggregate",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\source_adapters\\data_fetcher_manager.py",
      "changes_made": [
        {
          "function": "connect_all",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "disconnect_all",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_ohlcv_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_tick_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "health_check",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "fetch_historical_ohlcv",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "fetch_tick_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_fetch_historical_data_async",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\source_adapters\\dukascopy_adapter.py",
      "changes_made": [
        {
          "function": "_download_tick_data_for_hour",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_decompress_and_parse_ticks",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_fetch_data_with_retry",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_process_tick_data",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\transformers\\base_transformer.py",
      "changes_made": [
        {
          "function": "execute",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\validation\\advanced_validation_engine.py",
      "changes_made": [
        {
          "function": "validate",
          "decorator": "with_exception_handling"
        },
        {
          "function": "validate_data",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\validation\\ohlcv_validators.py",
      "changes_made": [
        {
          "function": "validate",
          "decorator": "with_exception_handling"
        },
        {
          "function": "validate",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\validation\\tick_validators.py",
      "changes_made": [
        {
          "function": "validate",
          "decorator": "with_exception_handling"
        },
        {
          "function": "validate",
          "decorator": "with_exception_handling"
        },
        {
          "function": "validate",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\data_pipeline_service\\validation\\validation_engine.py",
      "changes_made": [
        {
          "function": "validate",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\examples\\analysis_engine_adapter_example.py",
      "changes_made": [
        {
          "function": "main",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "data-pipeline-service\\scripts\\deploy_standardized_modules.py",
      "changes_made": [
        {
          "function": "run_tests",
          "decorator": "with_exception_handling"
        }
      ]
    }
  ],
  "feature-store-service": [
    {
      "file": "feature-store-service\\examples\\analysis_engine_adapter_example.py",
      "changes_made": [
        {
          "function": "main",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\database.py",
      "changes_made": [
        {
          "function": "connect",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "execute",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "fetch",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "fetchrow",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "fetchval",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "transaction",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\dependencies.py",
      "changes_made": [
        {
          "function": "get_cache_config",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\dependency_tracking.py",
      "changes_made": [
        {
          "function": "_update_calculation_order",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\main.py",
      "changes_made": [
        {
          "function": "startup_event",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "shutdown_event",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\adapters\\advanced_indicator_adapter.py",
      "changes_made": [
        {
          "function": "__init__",
          "decorator": "with_exception_handling"
        },
        {
          "function": "category",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_column_names",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_retracements",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_extensions",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_arcs",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_fans",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_time_zones",
          "decorator": "with_exception_handling"
        },
        {
          "function": "load_advanced_indicators",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\adapters\\analysis_engine_adapter.py",
      "changes_made": [
        {
          "function": "analyze_market",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_analysis_types",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "backtest_strategy",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "calculate_indicator",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_indicator_info",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "list_indicators",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "recognize_patterns",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_pattern_types",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\adapters\\ml_integration_adapter.py",
      "changes_made": [
        {
          "function": "get_required_features",
          "decorator": "with_exception_handling"
        },
        {
          "function": "prepare_model_inputs",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_feature_importance_feedback",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\adapters\\service_adapters.py",
      "changes_made": [
        {
          "function": "get_feature",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_features",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_available_features",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_feature_metadata",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "store_feature",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "delete_feature",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_feature_metadata",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "generate_feature",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_available_generators",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_generator_parameters",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\api\\incremental_indicators.py",
      "changes_made": [
        {
          "function": "initialize_indicator",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_indicator",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_all_indicators",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_active_indicators",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "load_saved_states",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\api\\indicator_api.py",
      "changes_made": [
        {
          "function": "get_all_indicators",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_indicator",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_categories",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_indicator_values",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_cache_statistics",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "clear_cache_for_symbol",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "clear_cache_for_indicator",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\api\\realtime_indicators_api.py",
      "changes_made": [
        {
          "function": "configure_indicators",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "process_tick",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_latest_indicators",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "reset_indicators",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "reset_all_indicators",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "websocket_endpoint",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "send_indicators",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\api\\scheduler_api.py",
      "changes_made": [
        {
          "function": "create_schedule",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_all_schedules",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_schedule",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_schedule",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "delete_schedule",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "enable_schedule",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "disable_schedule",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "run_schedule_now",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\api\\v1\\adapter_api.py",
      "changes_made": [
        {
          "function": "get_features",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_feature_metadata",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "store_feature",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\api\\v1\\realtime_indicators.py",
      "changes_made": [
        {
          "function": "configure_indicators",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "process_tick",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_latest_indicators",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "reset_indicators",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "reset_all_indicators",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "websocket_endpoint",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "send_indicators",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\api\\v1\\reconciliation_api.py",
      "changes_made": [
        {
          "function": "reconcile_feature_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "reconcile_feature_version",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_reconciliation_status",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\caching\\config.py",
      "changes_made": [
        {
          "function": "load_config",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\caching\\config_validation.py",
      "changes_made": [
        {
          "function": "load_config_file",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\caching\\disk_cache.py",
      "changes_made": [
        {
          "function": "_load_index",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_save_index",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "put",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_remove_item",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "clear",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\caching\\enhanced_cache_aware_indicator_service.py",
      "changes_made": [
        {
          "function": "calculate_indicator",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_calculate_with_degraded_mode",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_sort_indicators_for_batch",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_get_current_load",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\caching\\enhanced_cache_manager.py",
      "changes_made": [
        {
          "function": "warm_cache",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_predict_indicators_to_warm",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\computation\\incremental_calculator.py",
      "changes_made": [
        {
          "function": "measure_latency",
          "decorator": "with_exception_handling"
        },
        {
          "function": "wrapper",
          "decorator": "with_exception_handling"
        },
        {
          "function": "restore_state",
          "decorator": "with_exception_handling"
        },
        {
          "function": "restore_state",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_indicators",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_all",
          "decorator": "with_exception_handling"
        },
        {
          "function": "update_all",
          "decorator": "with_exception_handling"
        },
        {
          "function": "save_all_states",
          "decorator": "with_exception_handling"
        },
        {
          "function": "load_all_states",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\computation\\parallel_indicator_processor.py",
      "changes_made": [
        {
          "function": "_process_with_thread_pool",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_process_with_process_pool",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_process_point_with_threads",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_safe_update",
          "decorator": "with_exception_handling"
        },
        {
          "function": "visualize_dependencies",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\computation\\incremental\\indicator_service.py",
      "changes_made": [
        {
          "function": "get_or_initialize_indicator",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_indicator",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_all_indicators_for_symbol",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_save_indicator_state",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_load_indicator_state",
          "decorator": "with_exception_handling"
        },
        {
          "function": "load_all_saved_states",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\computation\\incremental\\moving_averages.py",
      "changes_made": [
        {
          "function": "update",
          "decorator": "with_exception_handling"
        },
        {
          "function": "update",
          "decorator": "with_exception_handling"
        },
        {
          "function": "update",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\core\\feature_store.py",
      "changes_made": [
        {
          "function": "calculate_features",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_calculate",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "retrieve_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_retrieve",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_health_check_loop",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\db\\db_core.py",
      "changes_made": [
        {
          "function": "initialize_database",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "dispose_database",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "create_asyncpg_pool",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "check_connection",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\error\\error_manager.py",
      "changes_made": [
        {
          "function": "handle_error",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_handle_calculation_error",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_handle_data_error",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_handle_parameter_error",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\error\\recovery_service.py",
      "changes_made": [
        {
          "function": "recover",
          "decorator": "with_exception_handling"
        },
        {
          "function": "recover",
          "decorator": "with_exception_handling"
        },
        {
          "function": "recover",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_fix_invalid_values",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\indicators\\advanced_indicators_registrar.py",
      "changes_made": [
        {
          "function": "register_analysis_engine_indicators",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\indicators\\advanced_indicator_adapter.py",
      "changes_made": [
        {
          "function": "calculate",
          "decorator": "with_exception_handling"
        },
        {
          "function": "create_adapter",
          "decorator": "with_exception_handling"
        },
        {
          "function": "load_advanced_indicators",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\indicators\\advanced_indicator_optimization.py",
      "changes_made": [
        {
          "function": "graceful_fallback",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "wrapper",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\indicators\\advanced_ml_integration.py",
      "changes_made": [
        {
          "function": "_add_pattern_signals",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_add_market_structure_features",
          "decorator": "with_exception_handling"
        },
        {
          "function": "select_advanced_features",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\indicators\\factory.py",
      "changes_made": [
        {
          "function": "create_indicator",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\indicators\\incremental_indicators.py",
      "changes_made": [
        {
          "function": "update_all",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\indicators\\indicator_registry.py",
      "changes_made": [
        {
          "function": "create_indicator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "validate_parameters",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\indicators\\indicator_selection.py",
      "changes_made": [
        {
          "function": "_calculate_period_metrics",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_load_performance_history",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_save_performance_history",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_load_selection_config",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_update_selection_config",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_categorize_indicators",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\indicators\\ml_integration.py",
      "changes_made": [
        {
          "function": "_select_by_importance",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_select_by_recursive_elimination",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\indicators\\performance_enhanced_indicator.py",
      "changes_made": [
        {
          "function": "performance_monitored",
          "decorator": "with_exception_handling"
        },
        {
          "function": "wrapper",
          "decorator": "with_exception_handling"
        },
        {
          "function": "gpu_accelerated_operation",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\indicators\\advanced\\seasonal_analysis.py",
      "changes_made": [
        {
          "function": "_perform_decomposition",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\indicators\\advanced_patterns\\facade.py",
      "changes_made": [
        {
          "function": "calculate",
          "decorator": "with_exception_handling"
        },
        {
          "function": "find_patterns",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\indicators\\chart_patterns\\base.py",
      "changes_made": [
        {
          "function": "_calculate_trendline_loc",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\indicators\\chart_patterns\\classic\\flags_pennants.py",
      "changes_made": [
        {
          "function": "_find_flag_pennant_patterns",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\indicators\\degraded\\base.py",
      "changes_made": [
        {
          "function": "compare_to_standard",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\indicators\\gann\\angles.py",
      "changes_made": [
        {
          "function": "calculate",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\indicators\\gann\\base.py",
      "changes_made": [
        {
          "function": "_find_pivot_point",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_determine_pivot",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\indicators\\incremental\\processor.py",
      "changes_made": [
        {
          "function": "_sequential_update",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_parallel_update",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_update_worker",
          "decorator": "with_exception_handling"
        },
        {
          "function": "save_state",
          "decorator": "with_exception_handling"
        },
        {
          "function": "load_state",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\indicators\\testing\\indicator_tester.py",
      "changes_made": [
        {
          "function": "test_indicator_accuracy",
          "decorator": "with_exception_handling"
        },
        {
          "function": "test_edge_cases",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_check_expected_behavior",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\indicators\\testing\\performance_testing.py",
      "changes_made": [
        {
          "function": "timing_context",
          "decorator": "with_exception_handling"
        },
        {
          "function": "tear_down",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\indicators\\volatility\\historical.py",
      "changes_made": [
        {
          "function": "_calculate_garch_volatility",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\logging\\enhanced_logging.py",
      "changes_made": [
        {
          "function": "log_execution_time",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "wrapper",
          "decorator": "with_exception_handling"
        },
        {
          "function": "log_async_execution_time",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "wrapper",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\logging\\indicator_logging.py",
      "changes_made": [
        {
          "function": "_read_log_file",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\middleware\\request_tracking.py",
      "changes_made": [
        {
          "function": "dispatch",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\monitoring\\monitoring_task.py",
      "changes_made": [
        {
          "function": "start",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\optimization\\advanced_calculation.py",
      "changes_made": [
        {
          "function": "set",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\optimization\\effectiveness_optimizer.py",
      "changes_made": [
        {
          "function": "_run_optimization_loop",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_perform_optimization_cycle",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_fetch_effectiveness_metrics",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_load_state",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_save_state",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\optimization\\gpu_acceleration.py",
      "changes_made": [
        {
          "function": "to_gpu",
          "decorator": "with_exception_handling"
        },
        {
          "function": "to_cpu",
          "decorator": "with_exception_handling"
        },
        {
          "function": "compute_moving_average",
          "decorator": "with_exception_handling"
        },
        {
          "function": "compute_correlation_matrix",
          "decorator": "with_exception_handling"
        },
        {
          "function": "compute_volume_profile",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\optimization\\load_balancing.py",
      "changes_made": [
        {
          "function": "_monitor_resources",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_check_gpu_availability",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_update_gpu_usage",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_process_tasks",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_execute_task",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_task_completed",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\optimization\\memory_optimization.py",
      "changes_made": [
        {
          "function": "_monitor_memory",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_offload_to_disk",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_persist_to_disk",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\optimization\\performance_optimizer.py",
      "changes_made": [
        {
          "function": "_store_profile",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\optimization\\resource_manager.py",
      "changes_made": [
        {
          "function": "get",
          "decorator": "with_exception_handling"
        },
        {
          "function": "put",
          "decorator": "with_exception_handling"
        },
        {
          "function": "clear",
          "decorator": "with_exception_handling"
        },
        {
          "function": "submit_calculation",
          "decorator": "with_exception_handling"
        },
        {
          "function": "cache_callback",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\optimization\\time_series_optimizer.py",
      "changes_made": [
        {
          "function": "optimize",
          "decorator": "with_exception_handling"
        },
        {
          "function": "optimize_query",
          "decorator": "with_exception_handling"
        },
        {
          "function": "validate_time_bucket",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_timescale_continuous_aggregates",
          "decorator": "with_exception_handling"
        },
        {
          "function": "suggest_optimal_query",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\optimization\\time_series_query_optimizer.py",
      "changes_made": [
        {
          "function": "query_time_series",
          "decorator": "with_exception_handling"
        },
        {
          "function": "stream_time_series",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_optimized_time_ranges",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_get_continuous_aggregates",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\reconciliation\\feature_reconciliation.py",
      "changes_made": [
        {
          "function": "fetch_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "fetch_data",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\recovery\\integrated_recovery.py",
      "changes_made": [
        {
          "function": "attempt_recovery",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_perform_state_recovery",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_perform_component_restart",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_perform_data_sync",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_perform_fallback",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_default_restart_sequence",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_synchronize_data",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_apply_fallback_config",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\reliability\\reliability_manager.py",
      "changes_made": [
        {
          "function": "filter_signal",
          "decorator": "with_exception_handling"
        },
        {
          "function": "handle_error",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\repositories\\feature_repository.py",
      "changes_made": [
        {
          "function": "initialize",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "store_feature_values",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_feature_values",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "store_feature_metadata",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_feature_metadata",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "delete_feature_values",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\scheduling\\feature_scheduler.py",
      "changes_made": [
        {
          "function": "initialize",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "save_schedules",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "delete_schedule",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_scheduled_job",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_trigger_feature_computation",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\scheduling\\scheduler.py",
      "changes_made": [
        {
          "function": "_ensure_tables_exist",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "stop",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_run_scheduler_loop",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_due_jobs",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_execute_job",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_compute_features_for_pair",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_update_job_status",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_update_job_after_run",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_create_history_record",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_update_history_record",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "add_job",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_job",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "delete_job",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "enable_job",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "disable_job",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_job",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_all_jobs",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_job_history",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "run_job_now",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\services\\enhanced_indicator_service.py",
      "changes_made": [
        {
          "function": "calculate_indicator_async",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "calculate_indicator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_multiple_indicators_async",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "calculate_multiple_indicators",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_cache_stats",
          "decorator": "with_exception_handling"
        },
        {
          "function": "clear_cache_for_symbol",
          "decorator": "with_exception_handling"
        },
        {
          "function": "clear_cache_for_indicator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "clear_all_cache",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_feature_vectors",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\services\\incremental_processor.py",
      "changes_made": [
        {
          "function": "process_tick",
          "decorator": "with_exception_handling"
        },
        {
          "function": "unregister_listener",
          "decorator": "with_exception_handling"
        },
        {
          "function": "connect_to_feed",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_process_feed",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\services\\indicator_manager.py",
      "changes_made": [
        {
          "function": "initialize_indicator_service",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\services\\indicator_service.py",
      "changes_made": [
        {
          "function": "calculate_indicator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_multiple_indicators",
          "decorator": "with_exception_handling"
        },
        {
          "function": "transform_time_series",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_feature_vectors",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_feature_metadata",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_time_series_transform",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_feature_vectors",
          "decorator": "with_exception_handling"
        },
        {
          "function": "list_available_features",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_feature_metadata",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\services\\reconciliation_service.py",
      "changes_made": [
        {
          "function": "reconcile_feature_version",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "reconcile_feature_data",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\services\\time_series_data_service.py",
      "changes_made": [
        {
          "function": "get_multi_symbol_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "fetch_batch",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_execute_db_query",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_execute_indicator_query",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_calculate_indicator",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_schedule_indicator_storage",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\storage\\feature_storage.py",
      "changes_made": [
        {
          "function": "initialize",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_ensure_schema_exists",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "register_indicator",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_ensure_feature_table_exists",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "store_indicator_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_indicator_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_indicator_data_fallback",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_latest_indicator_values",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_latest_indicator_values_fallback",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "fetch_historical_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_fetch_historical_data_from_db",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\storage\\timeseries_optimized_queries.py",
      "changes_made": [
        {
          "function": "execute_optimized_query",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\storage\\time_series_index_optimizer.py",
      "changes_made": [
        {
          "function": "recommend_index_strategy",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_time_patterns",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\storage\\time_series_query_optimizer.py",
      "changes_made": [
        {
          "function": "invalidate_cache",
          "decorator": "with_exception_handling"
        },
        {
          "function": "cache_result",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\utils\\profiling.py",
      "changes_made": [
        {
          "function": "log_and_time",
          "decorator": "with_exception_handling"
        },
        {
          "function": "wrapper",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\validation\\data_validator.py",
      "changes_made": [
        {
          "function": "_validate_indicator_input",
          "decorator": "with_exception_handling"
        },
        {
          "function": "validate",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\verification\\multi_level_verifier.py",
      "changes_made": [
        {
          "function": "verify",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\feature_store_service\\verification\\signal_filter.py",
      "changes_made": [
        {
          "function": "filter_signal",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\tests\\indicators\\test_indicator_selection.py",
      "changes_made": [
        {
          "function": "tearDown",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\tests\\integration\\test_advanced_indicator_integration.py",
      "changes_made": [
        {
          "function": "test_load_advanced_indicators",
          "decorator": "with_exception_handling"
        },
        {
          "function": "test_advanced_indicator_adapter",
          "decorator": "with_exception_handling"
        },
        {
          "function": "test_fibonacci_indicator_integration",
          "decorator": "with_exception_handling"
        },
        {
          "function": "test_ml_integration",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\tests\\integration\\test_advanced_indicator_optimization.py",
      "changes_made": [
        {
          "function": "test_missing_analysis_engine",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\tests\\integration\\test_indicator_pipeline.py",
      "changes_made": [
        {
          "function": "tearDownClass",
          "decorator": "with_exception_handling"
        },
        {
          "function": "test_end_to_end_indicator_pipeline",
          "decorator": "with_exception_handling"
        },
        {
          "function": "test_cross_component_integration",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\tests\\integration\\test_system_integration.py",
      "changes_made": [
        {
          "function": "test_end_to_end_calculation_flow",
          "decorator": "with_exception_handling"
        },
        {
          "function": "test_error_handling_and_recovery",
          "decorator": "with_exception_handling"
        },
        {
          "function": "test_system_monitoring",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "feature-store-service\\tests\\performance\\test_indicator_performance.py",
      "changes_made": [
        {
          "function": "tearDown",
          "decorator": "with_exception_handling"
        },
        {
          "function": "tearDown",
          "decorator": "with_exception_handling"
        },
        {
          "function": "tearDown",
          "decorator": "with_exception_handling"
        },
        {
          "function": "test_parallel_execution",
          "decorator": "with_exception_handling"
        }
      ]
    }
  ],
  "ml-integration-service": [
    {
      "file": "ml-integration-service\\ml_integration_service\\database.py",
      "changes_made": [
        {
          "function": "get_sync_session",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_async_session",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\feature_extraction.py",
      "changes_made": [
        {
          "function": "extract_features",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\feature_importance.py",
      "changes_made": [
        {
          "function": "analyze",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_calculate_importance",
          "decorator": "with_exception_handling"
        },
        {
          "function": "load_results",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\model_connector.py",
      "changes_made": [
        {
          "function": "_load_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_load_metadata",
          "decorator": "with_exception_handling"
        },
        {
          "function": "predict",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\monitoring.py",
      "changes_made": [
        {
          "function": "check",
          "decorator": "with_exception_handling"
        },
        {
          "function": "track_database_query",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "wrapper",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "track_service_client_request",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "wrapper",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "track_model_prediction",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "wrapper",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "track_model_operation",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\time_series_preprocessing.py",
      "changes_made": [
        {
          "function": "__init__",
          "decorator": "with_exception_handling"
        },
        {
          "function": "resample",
          "decorator": "with_exception_handling"
        },
        {
          "function": "__init__",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_fit_decomposition_models",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_apply_decomposition",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_detect_seasonality",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\adapters\\analysis_engine_adapter.py",
      "changes_made": [
        {
          "function": "get_market_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_technical_indicators",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_market_regime",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_support_resistance_levels",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\adapters\\feature_store_adapter.py",
      "changes_made": [
        {
          "function": "get_available_features",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_feature_data",
          "decorator": "with_exception_handling"
        },
        {
          "function": "compute_features",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_feature_metadata",
          "decorator": "with_exception_handling"
        },
        {
          "function": "transform",
          "decorator": "with_exception_handling"
        },
        {
          "function": "fit",
          "decorator": "with_exception_handling"
        },
        {
          "function": "save_state",
          "decorator": "with_exception_handling"
        },
        {
          "function": "load_state",
          "decorator": "with_exception_handling"
        },
        {
          "function": "select_features",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_feature_importances",
          "decorator": "with_exception_handling"
        },
        {
          "function": "save_state",
          "decorator": "with_exception_handling"
        },
        {
          "function": "load_state",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\adapters\\prediction_service_adapter.py",
      "changes_made": [
        {
          "function": "get_prediction",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_batch_predictions",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_model_metadata",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "list_available_models",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "generate_trading_signals",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_model_performance",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\api\\enhanced_routes.py",
      "changes_made": [
        {
          "function": "visualize_model_performance",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "visualize_feature_importance",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "optimize_regime_aware",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "optimize_multi_objective",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "test_model_robustness",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_sensitivity",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "test_load",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\api\\rate_limiter.py",
      "changes_made": [
        {
          "function": "dispatch",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\api\\v1\\cache_api.py",
      "changes_made": [
        {
          "function": "get_cache_statistics",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "clear_cache",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\api\\v1\\dashboard_api.py",
      "changes_made": [
        {
          "function": "get_cache_dashboard",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\api\\v1\\health_api.py",
      "changes_made": [
        {
          "function": "check_model_repository_health",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "check_feature_service_health",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "check_data_validator_health",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "check_reconciliation_service_health",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\api\\v1\\reconciliation_api.py",
      "changes_made": [
        {
          "function": "reconcile_training_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "reconcile_inference_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_reconciliation_status",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\chat\\explanation_generator.py",
      "changes_made": [
        {
          "function": "__init__",
          "decorator": "with_exception_handling"
        },
        {
          "function": "generate_explanation",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_model_explanation",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\chat\\ml_model_connector.py",
      "changes_made": [
        {
          "function": "__init__",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_market_analysis",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_price_forecast",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_trading_recommendation",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_prediction",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_prepare_model_inputs",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_market_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_calculate_indicators",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\chat\\user_preference_manager.py",
      "changes_made": [
        {
          "function": "get_user_preferences",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_user_preferences",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "reset_user_preferences",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_all_users",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\clients\\analysis_engine_client.py",
      "changes_made": [
        {
          "function": "get_technical_indicators",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "detect_market_regime",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_market_conditions",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_multi_timeframe_analysis",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\clients\\ml_workbench_client.py",
      "changes_made": [
        {
          "function": "get_models",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_model",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "create_model",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "start_training",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_training_status",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "predict",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_model_metrics",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\examples\\client_usage_example.py",
      "changes_made": [
        {
          "function": "analysis_engine_example",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "ml_workbench_example",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\feedback\\adapter.py",
      "changes_made": [
        {
          "function": "adapt_model",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\parallel\\parallel_inference.py",
      "changes_made": [
        {
          "function": "run_inference_for_instruments",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "run_batch_inference",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\reconciliation\\model_data_reconciliation.py",
      "changes_made": [
        {
          "function": "fetch_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "fetch_data",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\repositories\\reconciliation_repository.py",
      "changes_made": [
        {
          "function": "create_reconciliation_process",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_reconciliation_process",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_reconciliation_process",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "add_discrepancy",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\services\\feature_service.py",
      "changes_made": [
        {
          "function": "get_cached_training_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "fetch_training_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_cached_inference_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "fetch_inference_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_cached_training_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_training_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_cached_inference_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_inference_data",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\services\\reconciliation_service.py",
      "changes_made": [
        {
          "function": "reconcile_training_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "reconcile_inference_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_reconciliation_status",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\strategy_filters\\ml_confirmation_filter.py",
      "changes_made": [
        {
          "function": "filter_signal",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_get_model_predictions",
          "decorator": "with_exception_handling"
        },
        {
          "function": "update_performance",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_adapt_thresholds",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\strategy_optimizers\\ml_confirmation_filter.py",
      "changes_made": [
        {
          "function": "filter_signal",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_get_model_predictions",
          "decorator": "with_exception_handling"
        },
        {
          "function": "update_performance",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_adapt_thresholds",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\stress_testing\\model_stress_tester.py",
      "changes_made": [
        {
          "function": "test_throughput",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\ml_integration_service\\tracing\\tracing.py",
      "changes_made": [
        {
          "function": "trace_method",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "async_wrapper",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "sync_wrapper",
          "decorator": "with_exception_handling"
        },
        {
          "function": "trace_function",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "async_wrapper",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "sync_wrapper",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\scripts\\deploy_standardized_modules.py",
      "changes_made": [
        {
          "function": "run_tests",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-integration-service\\tests\\test_ml_integration.py",
      "changes_made": [
        {
          "function": "tearDown",
          "decorator": "with_exception_handling"
        }
      ]
    }
  ],
  "ml-workbench-service": [
    {
      "file": "ml-workbench-service\\test_service.py",
      "changes_made": [
        {
          "function": "start_service",
          "decorator": "with_exception_handling"
        },
        {
          "function": "test_endpoints",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\examples\\hardware_specific_optimization_example.py",
      "changes_made": [
        {
          "function": "create_sample_model_tensorflow",
          "decorator": "with_exception_handling"
        },
        {
          "function": "create_sample_model_pytorch",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\examples\\ml_optimization_example.py",
      "changes_made": [
        {
          "function": "create_sample_model_tensorflow",
          "decorator": "with_exception_handling"
        },
        {
          "function": "create_sample_model_pytorch",
          "decorator": "with_exception_handling"
        },
        {
          "function": "demonstrate_inference_optimization",
          "decorator": "with_exception_handling"
        },
        {
          "function": "demonstrate_training_optimization",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\examples\\ml_profiling_monitor_example.py",
      "changes_made": [
        {
          "function": "create_sample_model_tensorflow",
          "decorator": "with_exception_handling"
        },
        {
          "function": "create_sample_model_pytorch",
          "decorator": "with_exception_handling"
        },
        {
          "function": "demonstrate_monitoring",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\database.py",
      "changes_made": [
        {
          "function": "get_async_session",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\monitoring.py",
      "changes_made": [
        {
          "function": "collect_system_metrics",
          "decorator": "with_exception_handling"
        },
        {
          "function": "setup_monitoring",
          "decorator": "with_exception_handling"
        },
        {
          "function": "metrics_middleware",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "track_database_query",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "async_wrapper",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "sync_wrapper",
          "decorator": "with_exception_handling"
        },
        {
          "function": "track_service_client_request",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "async_wrapper",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "sync_wrapper",
          "decorator": "with_exception_handling"
        },
        {
          "function": "track_mlflow_operation",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "async_wrapper",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "sync_wrapper",
          "decorator": "with_exception_handling"
        },
        {
          "function": "track_model_training",
          "decorator": "with_exception_handling"
        },
        {
          "function": "track_model_inference",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "async_wrapper",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "sync_wrapper",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\rl_model_factory.py",
      "changes_made": [
        {
          "function": "create_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "load_model",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\service_clients.py",
      "changes_made": [
        {
          "function": "_handle_error_response",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_request",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\adapters\\analysis_adapters.py",
      "changes_made": [
        {
          "function": "get_technical_analysis",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_confluence_analysis",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_multi_timeframe_analysis",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_integrated_analysis",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "detect_regime",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_regime_probabilities",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_regime_transition_probability",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_correlated_assets",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_currency_strength",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_cross_pair_opportunities",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\adapters\\analysis_engine_adapter.py",
      "changes_made": [
        {
          "function": "detect_market_regime",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_regime_history",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_regime_transition_probabilities",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "detect_patterns",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_pattern_statistics",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "calculate_indicators",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_indicator_signals",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_indicator_performance",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\adapters\\risk_adapters.py",
      "changes_made": [
        {
          "function": "check_order",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "add_position",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "check_risk_limits",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_portfolio_metrics",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\adapters\\risk_optimizer_adapter.py",
      "changes_made": [
        {
          "function": "optimize_risk_parameters",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_rl_models",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_adjustment_history",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\adapters\\simulation_adapters.py",
      "changes_made": [
        {
          "function": "get_current_regime",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_all_regimes",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_regime_probabilities",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_regime_history",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_current_price",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_account_summary",
          "decorator": "with_exception_handling"
        },
        {
          "function": "submit_order",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_positions",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\adapters\\trading_feedback_adapter.py",
      "changes_made": [
        {
          "function": "collect_feedback",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_feedback_history",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "__init__",
          "decorator": "with_exception_handling"
        },
        {
          "function": "process_trading_feedback",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "prepare_training_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "trigger_model_update",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_model_performance_metrics",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\api\\dataset_api.py",
      "changes_made": [
        {
          "function": "create_dataset",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "list_datasets",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_dataset",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "generate_dataset",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_dataset_statistics",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_available_features",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "download_dataset",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\api\\experiment_api.py",
      "changes_made": [
        {
          "function": "create_experiment",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "list_experiments",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_experiment",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_experiment",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "delete_experiment",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "start_experiment",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "complete_experiment",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "add_model_version",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "log_metric",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "upload_model_artifact",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "download_model_artifact",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\api\\model_api.py",
      "changes_made": [
        {
          "function": "create_model",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "list_models",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_model",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_model",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "delete_model",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "create_model_version",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_model_version",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "list_model_versions",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_model_version_stage",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "create_model_evaluation",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "list_model_evaluations",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "deploy_model_version",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_serving_info",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_prediction",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\api\\model_registry_api.py",
      "changes_made": [
        {
          "function": "create_model",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "list_models",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_model",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_model",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "delete_model",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "create_model_version",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "list_model_versions",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_model_version",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "transition_model_version_stage",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "download_model_artifact",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_model_version_metrics",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "delete_model_version",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "search_models",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\api\\security.py",
      "changes_made": [
        {
          "function": "get_token_payload",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\api\\routes\\model_registry.py",
      "changes_made": [
        {
          "function": "register_model",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "add_model_artifacts",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "list_models",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "search_models",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_model_metadata",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_model_version",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_model_version_stage",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_model_metrics",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "delete_model_version",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "delete_model",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "create_ab_test",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "list_ab_tests",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_ab_test",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_ab_test",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "compare_model_versions",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\api\\v1\\prediction_api.py",
      "changes_made": [
        {
          "function": "predict",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "list_models",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_model_info",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_model_version_info",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\clients\\feature_store_client.py",
      "changes_made": [
        {
          "function": "_handle_response",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_ohlcv_data",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_indicators",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_available_indicators",
          "decorator": "with_exception_handling"
        },
        {
          "function": "compute_feature",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\clients\\ml_prediction_client.py",
      "changes_made": [
        {
          "function": "get_prediction",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_available_models",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_model_info",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\clients\\transfer_learning_client.py",
      "changes_made": [
        {
          "function": "_make_request",
          "decorator": "with_exception_handling"
        },
        {
          "function": "upload_data",
          "decorator": "with_exception_handling"
        },
        {
          "function": "demonstrate_workflow",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\config\\standardized_config.py",
      "changes_made": [
        {
          "function": "validate_host",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\effectiveness\\rl_tool_effectiveness.py",
      "changes_made": [
        {
          "function": "update_effectiveness_metrics",
          "decorator": "with_exception_handling"
        },
        {
          "function": "analyze_action_patterns",
          "decorator": "with_exception_handling"
        },
        {
          "function": "load_from_file",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\explainability\\explainability_module.py",
      "changes_made": [
        {
          "function": "__init__",
          "decorator": "with_exception_handling"
        },
        {
          "function": "save",
          "decorator": "with_exception_handling"
        },
        {
          "function": "load",
          "decorator": "with_exception_handling"
        },
        {
          "function": "save",
          "decorator": "with_exception_handling"
        },
        {
          "function": "load",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\feedback\\model_training_feedback.py",
      "changes_made": [
        {
          "function": "process_trading_feedback",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "trigger_model_update",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_check_retraining_needed",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_convert_to_trade_feedback",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\models\\multitask\\multitask_model.py",
      "changes_made": [
        {
          "function": "visualize",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\models\\reinforcement\\curriculum_learning.py",
      "changes_made": [
        {
          "function": "load_model",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\models\\reinforcement\\enhanced_rl_env.py",
      "changes_made": [
        {
          "function": "_calculate_indicators",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\models\\reinforcement\\rl_risk_optimizer.py",
      "changes_made": [
        {
          "function": "update_rl_models",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\model_registry\\model_registry_service.py",
      "changes_made": [
        {
          "function": "register_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_model_metadata",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_save_metadata",
          "decorator": "with_exception_handling"
        },
        {
          "function": "load_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "load_artifact",
          "decorator": "with_exception_handling"
        },
        {
          "function": "delete_model_version",
          "decorator": "with_exception_handling"
        },
        {
          "function": "delete_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "list_models",
          "decorator": "with_exception_handling"
        },
        {
          "function": "search_models",
          "decorator": "with_exception_handling"
        },
        {
          "function": "setup_ab_test",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_ab_test",
          "decorator": "with_exception_handling"
        },
        {
          "function": "list_ab_tests",
          "decorator": "with_exception_handling"
        },
        {
          "function": "update_ab_test",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\model_registry\\registry.py",
      "changes_made": [
        {
          "function": "create_model_version",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_model_metadata",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_model_version",
          "decorator": "with_exception_handling"
        },
        {
          "function": "list_models",
          "decorator": "with_exception_handling"
        },
        {
          "function": "list_versions",
          "decorator": "with_exception_handling"
        },
        {
          "function": "delete_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "delete_version",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\optimization\\cli.py",
      "changes_made": [
        {
          "function": "optimize_inference",
          "decorator": "with_exception_handling"
        },
        {
          "function": "optimize_features",
          "decorator": "with_exception_handling"
        },
        {
          "function": "optimize_training",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\optimization\\feature_engineering_optimizer.py",
      "changes_made": [
        {
          "function": "_init_cache_metadata",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_save_cache_metadata",
          "decorator": "with_exception_handling"
        },
        {
          "function": "cached_feature_computation",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_clean_cache",
          "decorator": "with_exception_handling"
        },
        {
          "function": "parallel_feature_computation",
          "decorator": "with_exception_handling"
        },
        {
          "function": "compute_feature",
          "decorator": "with_exception_handling"
        },
        {
          "function": "incremental_feature_computation",
          "decorator": "with_exception_handling"
        },
        {
          "function": "benchmark_feature_pipeline",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\optimization\\hardware_specific_optimizer.py",
      "changes_made": [
        {
          "function": "_load_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_detect_hardware",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_detect_cpu_info",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_optimize_tensorflow_for_gpu",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_optimize_pytorch_for_gpu",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_optimize_onnx_for_gpu",
          "decorator": "with_exception_handling"
        },
        {
          "function": "optimize_for_tpu",
          "decorator": "with_exception_handling"
        },
        {
          "function": "optimize_for_fpga",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_optimize_tensorflow_for_cpu",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_optimize_pytorch_for_cpu",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_optimize_onnx_for_cpu",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_convert_to_onnx",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_save_optimized_model",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\optimization\\ml_pipeline_integrator.py",
      "changes_made": [
        {
          "function": "_analyze_python_file",
          "decorator": "with_exception_handling"
        },
        {
          "function": "optimize_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_load_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "optimize_feature_pipeline",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_load_feature_pipeline",
          "decorator": "with_exception_handling"
        },
        {
          "function": "optimize_training_pipeline",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_load_training_pipeline",
          "decorator": "with_exception_handling"
        },
        {
          "function": "optimize_serving_endpoint",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\optimization\\ml_profiling_monitor.py",
      "changes_made": [
        {
          "function": "_load_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_prepare_batch",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_run_inference",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_export_trace",
          "decorator": "with_exception_handling"
        },
        {
          "function": "start_prometheus_exporter",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_monitoring_loop",
          "decorator": "with_exception_handling"
        },
        {
          "function": "record_inference",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\optimization\\model_inference_optimizer.py",
      "changes_made": [
        {
          "function": "_load_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "quantize_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_get_model_size",
          "decorator": "with_exception_handling"
        },
        {
          "function": "apply_operator_fusion",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_apply_tensorflow_fusion",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_apply_pytorch_fusion",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_apply_onnx_fusion",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_get_model_input_shape",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_apply_tensorflow_fusion",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_apply_pytorch_fusion",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_apply_onnx_fusion",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_get_model_input_shape",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\optimization\\model_serving_optimizer.py",
      "changes_made": [
        {
          "function": "_load_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_simulate_load",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\optimization\\model_training_optimizer.py",
      "changes_made": [
        {
          "function": "configure_mixed_precision",
          "decorator": "with_exception_handling"
        },
        {
          "function": "configure_distributed_training",
          "decorator": "with_exception_handling"
        },
        {
          "function": "benchmark_training",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_benchmark_tensorflow_training",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\performance\\rl_performance.py",
      "changes_made": [
        {
          "function": "_benchmark_batch_sizes",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_create_env_and_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "run_training_benchmark",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_on_step",
          "decorator": "with_exception_handling"
        },
        {
          "function": "optimize_environment",
          "decorator": "with_exception_handling"
        },
        {
          "function": "quantize_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "prune_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_get_system_info",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_run_optimization_demo",
          "decorator": "with_exception_handling"
        },
        {
          "function": "cleanup",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\reinforcement\\distributed_curriculum_trainer.py",
      "changes_made": [
        {
          "function": "_update_curriculum_level",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\scripts\\train_forex_lstm_model.py",
      "changes_made": [
        {
          "function": "fetch_data",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\services\\auto_model_selector.py",
      "changes_made": [
        {
          "function": "select_best_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "select_ensemble",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\services\\auto_optimization_framework.py",
      "changes_made": [
        {
          "function": "optimize",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_evaluate_and_update",
          "decorator": "with_exception_handling"
        },
        {
          "function": "__init__",
          "decorator": "with_exception_handling"
        },
        {
          "function": "evaluation_function",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_optimization_result",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\services\\dataset_preparation.py",
      "changes_made": [
        {
          "function": "load_ohlcv_data",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\services\\dataset_service.py",
      "changes_made": [
        {
          "function": "get_available_features",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\services\\experiment_service.py",
      "changes_made": [
        {
          "function": "create_dataset_from_feature_store",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\services\\experiment_tracker.py",
      "changes_made": [
        {
          "function": "log_figure",
          "decorator": "with_exception_handling"
        },
        {
          "function": "log_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "compare_runs",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\services\\feature_importance_analyzer.py",
      "changes_made": [
        {
          "function": "analyze_feature_importance",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_load_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_get_built_in_importance",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_get_shap_importance",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_get_permutation_importance",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_get_eli5_importance",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_create_visualization",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\services\\model_drift_detector.py",
      "changes_made": [
        {
          "function": "analyze_drift",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_compute_drift_metrics",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_calculate_psi",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_create_distribution_visualization",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_create_overall_drift_visualization",
          "decorator": "with_exception_handling"
        },
        {
          "function": "check_for_retraining_triggers",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\services\\model_registry_service.py",
      "changes_made": [
        {
          "function": "register_model",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "create_model_version",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_model_details",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_version_details",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "list_models",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "list_versions",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_version_status",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "compare_versions",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_best_version",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "configure_ab_testing",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "delete_model",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "delete_version",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\services\\model_retraining_service.py",
      "changes_made": [
        {
          "function": "get_retraining_job",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_execute_retraining",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_send_notification",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\services\\model_serving_engine.py",
      "changes_made": [
        {
          "function": "predict",
          "decorator": "with_exception_handling"
        },
        {
          "function": "batch_predict",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_run_prediction",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_refresh_models_periodically",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\services\\monte_carlo_simulation.py",
      "changes_made": [
        {
          "function": "run_simulation",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_load_data",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_run_price_series_simulation",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_run_trade_outcomes_simulation",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_run_parameter_variation_simulation",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_create_visualizations",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\services\\stress_testing.py",
      "changes_made": [
        {
          "function": "run_stress_test",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_get_historical_data",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_create_visualizations",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\services\\training_pipeline_orchestrator.py",
      "changes_made": [
        {
          "function": "train_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_evaluate_model",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\services\\transfer_learning_service.py",
      "changes_made": [
        {
          "function": "refresh_model_cache",
          "decorator": "with_exception_handling"
        },
        {
          "function": "create_transfer_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "evaluate_transfer_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "transform_features",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\services\\walk_forward_optimization.py",
      "changes_made": [
        {
          "function": "run_optimization",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_load_data",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_process_window",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_create_visualizations",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\transfer_learning\\model.py",
      "changes_made": [
        {
          "function": "load_source_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "save_transfer_model",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\ml_workbench_service\\visualization\\advanced_learning_ui.py",
      "changes_made": [
        {
          "function": "create_interactive_rewards_plot",
          "decorator": "with_exception_handling"
        },
        {
          "function": "plot_policy_heatmap",
          "decorator": "with_exception_handling"
        },
        {
          "function": "create_interactive_regime_performance",
          "decorator": "with_exception_handling"
        },
        {
          "function": "setup_widgets",
          "decorator": "with_exception_handling"
        },
        {
          "function": "update_plots",
          "decorator": "with_exception_handling"
        },
        {
          "function": "visualize_feature_importance",
          "decorator": "with_exception_handling"
        },
        {
          "function": "create_action_explanation_tool",
          "decorator": "with_exception_handling"
        },
        {
          "function": "update_prediction",
          "decorator": "with_exception_handling"
        },
        {
          "function": "visualize_training_progress",
          "decorator": "with_exception_handling"
        },
        {
          "function": "compare_agents",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\tests\\optimization\\test_hardware_specific_optimizer.py",
      "changes_made": [
        {
          "function": "test_convert_to_onnx",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ml-workbench-service\\tests\\optimization\\test_model_inference_optimizer.py",
      "changes_made": [
        {
          "function": "test_tensorflow_inference_optimization",
          "decorator": "with_exception_handling"
        }
      ]
    }
  ],
  "monitoring-alerting-service": [
    {
      "file": "monitoring-alerting-service\\test_service.py",
      "changes_made": [
        {
          "function": "start_service",
          "decorator": "with_exception_handling"
        },
        {
          "function": "test_endpoints",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "monitoring-alerting-service\\metrics_exporters\\analysis_engine_metrics_exporter.py",
      "changes_made": [
        {
          "function": "_load_config",
          "decorator": "with_exception_handling"
        },
        {
          "function": "start",
          "decorator": "with_exception_handling"
        },
        {
          "function": "stop",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_collect_metrics_periodically",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_collect_and_export_metrics",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "monitoring-alerting-service\\metrics_exporters\\correlation_analysis_exporter.py",
      "changes_made": [
        {
          "function": "fetch_correlation_metrics",
          "decorator": "with_exception_handling"
        },
        {
          "function": "fetch_lead_lag_metrics",
          "decorator": "with_exception_handling"
        },
        {
          "function": "fetch_breakdown_alerts",
          "decorator": "with_exception_handling"
        },
        {
          "function": "run_metrics_loop",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "monitoring-alerting-service\\metrics_exporters\\enhanced_effectiveness_exporter.py",
      "changes_made": [
        {
          "function": "push_metrics",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "monitoring-alerting-service\\metrics_exporters\\log_collector.py",
      "changes_made": [
        {
          "function": "_export_to_loki",
          "decorator": "with_exception_handling"
        },
        {
          "function": "configure_retention",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "monitoring-alerting-service\\metrics_exporters\\manipulation_detection_exporter.py",
      "changes_made": [
        {
          "function": "fetch_and_export_metrics",
          "decorator": "with_exception_handling"
        },
        {
          "function": "push_metrics_to_gateway",
          "decorator": "with_exception_handling"
        },
        {
          "function": "collect_and_push_metrics",
          "decorator": "with_exception_handling"
        },
        {
          "function": "run_metrics_exporter",
          "decorator": "with_exception_handling"
        },
        {
          "function": "push_metrics",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "monitoring-alerting-service\\metrics_exporters\\market_regime_identifier.py",
      "changes_made": [
        {
          "function": "fetch_effectiveness_data_from_api",
          "decorator": "with_exception_handling"
        },
        {
          "function": "process_effectiveness_data",
          "decorator": "with_exception_handling"
        },
        {
          "function": "main",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "monitoring-alerting-service\\metrics_exporters\\ml_integration_metrics_exporter.py",
      "changes_made": [
        {
          "function": "_load_config",
          "decorator": "with_exception_handling"
        },
        {
          "function": "start",
          "decorator": "with_exception_handling"
        },
        {
          "function": "stop",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_collect_metrics_periodically",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_collect_and_export_metrics",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "monitoring-alerting-service\\metrics_exporters\\nlp_analysis_exporter.py",
      "changes_made": [
        {
          "function": "fetch_and_export_metrics",
          "decorator": "with_exception_handling"
        },
        {
          "function": "fetch_nlp_metrics",
          "decorator": "with_exception_handling"
        },
        {
          "function": "fetch_sentiment_analysis",
          "decorator": "with_exception_handling"
        },
        {
          "function": "fetch_economic_impact",
          "decorator": "with_exception_handling"
        },
        {
          "function": "run_metrics_loop",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "monitoring-alerting-service\\metrics_exporters\\performance_optimization_exporter.py",
      "changes_made": [
        {
          "function": "_check_gpu_available",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_monitor_gpu",
          "decorator": "with_exception_handling"
        },
        {
          "function": "export_metrics_to_file",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "monitoring-alerting-service\\metrics_exporters\\resource_cost_exporter.py",
      "changes_made": [
        {
          "function": "run",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "monitoring-alerting-service\\metrics_exporters\\resource_cost_monitor.py",
      "changes_made": [
        {
          "function": "collect_resource_metrics",
          "decorator": "with_exception_handling"
        },
        {
          "function": "collect_cost_metrics",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "monitoring-alerting-service\\metrics_exporters\\signal_quality_evaluator.py",
      "changes_made": [
        {
          "function": "_get_regime_at_time",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "monitoring-alerting-service\\metrics_exporters\\strategy_execution_metrics_exporter.py",
      "changes_made": [
        {
          "function": "_load_config",
          "decorator": "with_exception_handling"
        },
        {
          "function": "start",
          "decorator": "with_exception_handling"
        },
        {
          "function": "stop",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_collect_metrics_periodically",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_collect_and_export_metrics",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_rolling_performance_metrics",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "monitoring-alerting-service\\metrics_exporters\\tool_effectiveness_exporter.py",
      "changes_made": [
        {
          "function": "start",
          "decorator": "with_exception_handling"
        },
        {
          "function": "collect_effectiveness_metrics",
          "decorator": "with_exception_handling"
        },
        {
          "function": "collect_signal_quality_metrics",
          "decorator": "with_exception_handling"
        },
        {
          "function": "collect_trend_metrics",
          "decorator": "with_exception_handling"
        },
        {
          "function": "collect_market_regime_metrics",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "monitoring-alerting-service\\metrics_exporters\\trace_collector.py",
      "changes_made": [
        {
          "function": "configure_sampling",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "monitoring-alerting-service\\monitoring_alerting_service\\database.py",
      "changes_made": [
        {
          "function": "get_async_session",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "monitoring-alerting-service\\monitoring_alerting_service\\monitoring.py",
      "changes_made": [
        {
          "function": "collect_system_metrics",
          "decorator": "with_exception_handling"
        },
        {
          "function": "setup_monitoring",
          "decorator": "with_exception_handling"
        },
        {
          "function": "metrics_middleware",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "track_database_query",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "async_wrapper",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "sync_wrapper",
          "decorator": "with_exception_handling"
        },
        {
          "function": "track_service_client_request",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "async_wrapper",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "sync_wrapper",
          "decorator": "with_exception_handling"
        },
        {
          "function": "track_alert_evaluation",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "async_wrapper",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "sync_wrapper",
          "decorator": "with_exception_handling"
        },
        {
          "function": "track_notification_send",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "async_wrapper",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "sync_wrapper",
          "decorator": "with_exception_handling"
        },
        {
          "function": "track_prometheus_query",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "async_wrapper",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "sync_wrapper",
          "decorator": "with_exception_handling"
        },
        {
          "function": "track_alertmanager_operation",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "async_wrapper",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "sync_wrapper",
          "decorator": "with_exception_handling"
        },
        {
          "function": "track_grafana_operation",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "async_wrapper",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "sync_wrapper",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "monitoring-alerting-service\\monitoring_alerting_service\\service_clients.py",
      "changes_made": [
        {
          "function": "_handle_error_response",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_request",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "monitoring-alerting-service\\monitoring_alerting_service\\config\\standardized_config.py",
      "changes_made": [
        {
          "function": "validate_host",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "monitoring-alerting-service\\monitoring_alerting_service\\error\\error_handlers.py",
      "changes_made": [
        {
          "function": "register_exception_handlers",
          "decorator": "with_exception_handling"
        },
        {
          "function": "forex_platform_exception_handler",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "validation_exception_handler",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "generic_exception_handler",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "monitoring-alerting-service\\scripts\\establish_performance_baselines.py",
      "changes_made": [
        {
          "function": "run_endpoint_test",
          "decorator": "with_exception_handling"
        },
        {
          "function": "make_request",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "monitoring-alerting-service\\scripts\\implement_all.py",
      "changes_made": [
        {
          "function": "run_script",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "monitoring-alerting-service\\scripts\\implement_distributed_tracing.py",
      "changes_made": [
        {
          "function": "install_dependencies",
          "decorator": "with_exception_handling"
        }
      ]
    }
  ],
  "portfolio-management-service": [
    {
      "file": "portfolio-management-service\\portfolio_management_service\\main.py",
      "changes_made": [
        {
          "function": "startup_event",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "check_db_connection_async",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "portfolio-management-service\\portfolio_management_service\\adapters\\multi_asset_adapter.py",
      "changes_made": [
        {
          "function": "get_asset_info",
          "decorator": "with_exception_handling"
        },
        {
          "function": "list_assets_by_class",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_asset_group",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_trading_parameters",
          "decorator": "with_exception_handling"
        },
        {
          "function": "normalize_data",
          "decorator": "with_exception_handling"
        },
        {
          "function": "calculate_volatility",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_price_levels",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_analysis_parameters",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "portfolio-management-service\\portfolio_management_service\\api\\v1\\accounts.py",
      "changes_made": [
        {
          "function": "get_account_summary",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "initialize_account_balance",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "add_funds",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "withdraw_funds",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_performance_metrics",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_balance_history",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "create_or_update_account_info",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "portfolio-management-service\\portfolio_management_service\\api\\v1\\multi_asset_portfolio_api.py",
      "changes_made": [
        {
          "function": "create_multi_asset_position",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_portfolio_summary",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "calculate_unified_risk",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_allocation_recommendations",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "portfolio-management-service\\portfolio_management_service\\api\\v1\\portfolio_api.py",
      "changes_made": [
        {
          "function": "create_position",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_historical_performance",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_position_prices",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "portfolio-management-service\\portfolio_management_service\\api\\v1\\positions.py",
      "changes_made": [
        {
          "function": "create_position",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_position",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "update_position",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "close_position",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_portfolio_summary",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_historical_performance",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "portfolio-management-service\\portfolio_management_service\\clients\\risk_management_client.py",
      "changes_made": [
        {
          "function": "_make_request",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "portfolio-management-service\\portfolio_management_service\\db\\connection.py",
      "changes_made": [
        {
          "function": "initialize_database",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "portfolio-management-service\\portfolio_management_service\\services\\account_snapshot_service.py",
      "changes_made": [
        {
          "function": "create_snapshot",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "portfolio-management-service\\portfolio_management_service\\services\\export_service.py",
      "changes_made": [
        {
          "function": "export_portfolio_snapshot",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "export_trade_history",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "export_performance_metrics",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "export_account_snapshots",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "export_to_external_system",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "portfolio-management-service\\portfolio_management_service\\services\\tax_reporting_service.py",
      "changes_made": [
        {
          "function": "_parse_date",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "portfolio-management-service\\portfolio_management_service\\services\\account_reconciliation\\base.py",
      "changes_made": [
        {
          "function": "_publish_event",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_internal_account_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_broker_account_data",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "portfolio-management-service\\portfolio_management_service\\services\\account_reconciliation\\discrepancy_handling.py",
      "changes_made": [
        {
          "function": "fix_discrepancy",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "portfolio-management-service\\portfolio_management_service\\services\\account_reconciliation\\facade.py",
      "changes_made": [
        {
          "function": "reconcile_account",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "perform_historical_reconciliation_analysis",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "portfolio-management-service\\portfolio_management_service\\services\\account_reconciliation\\historical_analysis.py",
      "changes_made": [
        {
          "function": "_calculate_trend_statistics",
          "decorator": "with_exception_handling"
        }
      ]
    }
  ],
  "strategy-execution-engine": [
    {
      "file": "strategy-execution-engine\\run_feature_store_monitoring.py",
      "changes_made": [
        {
          "function": "main",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\adapters\\adaptive_strategy_adapter.py",
      "changes_made": [
        {
          "function": "get_adaptive_parameters",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "record_strategy_performance",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_tool_signal_weights",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "run_adaptation_cycle",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_adaptation_recommendations",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "set_adaptation_level",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_adaptation_level",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\adapters\\analysis_adapter.py",
      "changes_made": [
        {
          "function": "get_technical_analysis",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_pattern_recognition",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_market_regime",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_multi_timeframe_analysis",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_multi_asset_analysis",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_integrated_analysis",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\adapters\\analysis_engine_adapter.py",
      "changes_made": [
        {
          "function": "get_market_analysis",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_causal_analysis",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_regime_analysis",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\adapters\\causal_strategy_enhancer_adapter.py",
      "changes_made": [
        {
          "function": "enhance_strategy",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_enhancement_types",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_enhancement_history",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "compare_enhancements",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "identify_causal_factors",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "generate_causal_graph",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "apply_causal_enhancement",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\adapters\\enhanced_tool_effectiveness_adapter.py",
      "changes_made": [
        {
          "function": "record_signal",
          "decorator": "with_exception_handling"
        },
        {
          "function": "record_outcome",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_tool_effectiveness",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_best_tools",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_tool_performance_history",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_regime_transition_performance",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_tool_correlation_matrix",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_tool_effectiveness_confidence",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_optimal_tool_combination",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_send_signal_to_service",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_send_outcome_to_service",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_effectiveness_from_service",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_best_tools_from_service",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_performance_history_from_service",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_transition_performance_from_service",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_correlation_matrix_from_service",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_effectiveness_confidence_from_service",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_optimal_combination_from_service",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_parse_datetime",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_adaptive_parameters",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "record_strategy_performance",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_tool_signal_weights",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "run_adaptation_cycle",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_adaptation_recommendations",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "set_adaptation_level",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_adaptation_level",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_set_adaptation_level_on_service",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\adapters\\ml_prediction_adapter.py",
      "changes_made": [
        {
          "function": "get_prediction",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_batch_predictions",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_model_metadata",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "list_available_models",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "generate_trading_signals",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_model_performance",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\adapters\\ml_workbench_adapter.py",
      "changes_made": [
        {
          "function": "optimize_model",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_optimization_status",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_optimization_result",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "cancel_optimization",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "train_rl_model",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_training_status",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_rl_model_performance",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_rl_model_action",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\adapters\\statistical_validator_adapter.py",
      "changes_made": [
        {
          "function": "validate_parameter_adjustment",
          "decorator": "with_exception_handling"
        },
        {
          "function": "validate_strategy_performance",
          "decorator": "with_exception_handling"
        },
        {
          "function": "validate_signal_quality",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\adapters\\tool_effectiveness_adapter.py",
      "changes_made": [
        {
          "function": "record_signal",
          "decorator": "with_exception_handling"
        },
        {
          "function": "record_outcome",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_tool_effectiveness",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_best_tools",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_tool_history",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_performance_summary",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_send_signal_to_api",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_send_outcome_to_api",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_tool_effectiveness_from_api",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_best_tools_from_api",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_tool_history_from_api",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_performance_summary_from_api",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\adaptive_layer\\adaptive_service.py",
      "changes_made": [
        {
          "function": "get_adaptive_parameters",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "record_strategy_performance",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_adaptation_recommendations",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "set_adaptation_level",
          "decorator": "with_exception_handling"
        },
        {
          "function": "run_adaptation_cycle",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "run_adaptation_cycle",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_active_tools",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "detect_effectiveness_decline",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\adaptive_layer\\strategy_mutator.py",
      "changes_made": [
        {
          "function": "_validate_parameter_value",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\adaptive_layer\\strategy_mutator_factory.py",
      "changes_made": [
        {
          "function": "_load_mutation_config",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\api\\analysis.py",
      "changes_made": [
        {
          "function": "analyze_backtest_performance",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "compare_strategies",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "list_backtests",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\api\\health.py",
      "changes_made": [
        {
          "function": "detailed_health_check",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "check_analysis_engine_connection",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "check_feature_store_connection",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "check_trading_gateway_connection",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "check_strategy_loader",
          "decorator": "with_exception_handling"
        },
        {
          "function": "check_backtester",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\api\\middleware.py",
      "changes_made": [
        {
          "function": "dispatch",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\backtesting\\ml_integration.py",
      "changes_made": [
        {
          "function": "get_prediction",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_forecast",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\backtesting\\optimization_integration.py",
      "changes_made": [
        {
          "function": "optimize_strategy",
          "decorator": "with_exception_handling"
        },
        {
          "function": "evaluate_parameters",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\backtesting\\tool_effectiveness_evaluator.py",
      "changes_made": [
        {
          "function": "register_signal",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\caching\\feature_cache.py",
      "changes_made": [
        {
          "function": "__init__",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get",
          "decorator": "with_exception_handling"
        },
        {
          "function": "set",
          "decorator": "with_exception_handling"
        },
        {
          "function": "invalidate",
          "decorator": "with_exception_handling"
        },
        {
          "function": "invalidate_pattern",
          "decorator": "with_exception_handling"
        },
        {
          "function": "clear",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_start_cleanup_thread",
          "decorator": "with_exception_handling"
        },
        {
          "function": "cleanup_task",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\clients\\feature_store_client.py",
      "changes_made": [
        {
          "function": "get_ohlcv_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_indicators",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_indicators_impl",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "compute_feature",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_available_indicators",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_indicator_metadata",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\clients\\json_optimized.py",
      "changes_made": [
        {
          "function": "parse_json_response",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "dumps",
          "decorator": "with_exception_handling"
        },
        {
          "function": "loads",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\clients\\standardized_trading_gateway_client.py",
      "changes_made": [
        {
          "function": "execute_order",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_order_status",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_account_info",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_positions",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_market_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "cancel_order",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "close_position",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "check_health",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\core\\container.py",
      "changes_made": [
        {
          "function": "initialize",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "shutdown",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\execution\\trading_client.py",
      "changes_made": [
        {
          "function": "submit_order",
          "decorator": "with_exception_handling"
        },
        {
          "function": "cancel_order",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_order_status",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_open_positions",
          "decorator": "with_exception_handling"
        },
        {
          "function": "close_position",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_account_info",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\factory\\enhanced_strategy_factory.py",
      "changes_made": [
        {
          "function": "load_timeframe_optimizer_state",
          "decorator": "with_exception_handling"
        },
        {
          "function": "save_timeframe_optimizer_state",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\integration\\analysis_integration_service.py",
      "changes_made": [
        {
          "function": "_get_technical_signals",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_ml_predictions",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_market_regime",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_multi_asset_adaptations",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_convert_to_signal_objects",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_get_tool_effectiveness",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\monitoring\\feature_store_alerts.py",
      "changes_made": [
        {
          "function": "__init__",
          "decorator": "with_exception_handling"
        },
        {
          "function": "check_metrics",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_email_alert",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_slack_alert",
          "decorator": "with_exception_handling"
        },
        {
          "function": "monitor_feature_store_metrics",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\monitoring\\feature_store_metrics.py",
      "changes_made": [
        {
          "function": "track_api_call",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "wrapper",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\multi_asset\\asset_strategy_factory.py",
      "changes_made": [
        {
          "function": "_load_config",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\multi_asset\\multi_asset_executor.py",
      "changes_made": [
        {
          "function": "execute_strategy",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_apply_adaptive_parameters",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_update_adaptive_layer",
          "decorator": "with_exception_handling"
        },
        {
          "function": "execute_batch",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\performance\\execution_profiler.py",
      "changes_made": [
        {
          "function": "profile",
          "decorator": "with_exception_handling"
        },
        {
          "function": "decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "wrapper",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\risk\\circuit_breaker.py",
      "changes_made": [
        {
          "function": "trip_global",
          "decorator": "with_exception_handling"
        },
        {
          "function": "trip_instrument",
          "decorator": "with_exception_handling"
        },
        {
          "function": "trip_strategy",
          "decorator": "with_exception_handling"
        },
        {
          "function": "reset_global",
          "decorator": "with_exception_handling"
        },
        {
          "function": "reset_instrument",
          "decorator": "with_exception_handling"
        },
        {
          "function": "reset_strategy",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_auto_reset_worker",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\risk\\dynamic_position_sizing.py",
      "changes_made": [
        {
          "function": "calculate_position_size",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_max_allowed_position_size",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\risk\\risk_check_orchestrator.py",
      "changes_made": [
        {
          "function": "_check_portfolio_var",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_portfolio_var",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\risk\\risk_client.py",
      "changes_made": [
        {
          "function": "check_risk",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_risk_limits",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_portfolio_risk",
          "decorator": "with_exception_handling"
        },
        {
          "function": "report_trade_outcome",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\signal\\decision_engine.py",
      "changes_made": [
        {
          "function": "_validate_with_risk_management",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\signal_flow\\signal_validator.py",
      "changes_made": [
        {
          "function": "validate_signal",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_validate_market_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_validate_risk_parameters",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_validate_strategy_constraints",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_validate_position_sizing",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\signal_flow\\strategy_signal_manager.py",
      "changes_made": [
        {
          "function": "process_new_signal",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "cancel_signal",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_signal_status",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\strategies\\adaptive_ma_strategy.py",
      "changes_made": [
        {
          "function": "optimize_parameters",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_apply_autocorrelation_tuning",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "analyze_performance",
          "decorator": "with_exception_handling"
        },
        {
          "function": "cleanup",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\strategies\\advanced_breakout_strategy.py",
      "changes_made": [
        {
          "function": "_perform_strategy_analysis",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_calculate_fibonacci_levels",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_detect_range_breakouts",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_detect_sr_breakouts",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_detect_fibonacci_breakouts",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_calculate_breakout_score",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_determine_trend",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_generate_signals",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\strategies\\advanced_ta_strategy.py",
      "changes_made": [
        {
          "function": "analyze_market",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\strategies\\causal_enhanced_strategy.py",
      "changes_made": [
        {
          "function": "initialize",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "execute",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_perform_causal_analysis",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_calculate_effect_size",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_calculate_confidence",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_generate_counterfactual_scenarios",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_create_synthetic_counterfactual",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_fetch_enhanced_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_call_discover_causal_structure",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_call_estimate_effects",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_call_generate_counterfactuals",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\strategies\\elliott_wave_strategy.py",
      "changes_made": [
        {
          "function": "_perform_strategy_analysis",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_apply_filters",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_calculate_combined_score",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_generate_signals",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\strategies\\fibonacci_strategy.py",
      "changes_made": [
        {
          "function": "_perform_strategy_analysis",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\strategies\\gann_strategy.py",
      "changes_made": [
        {
          "function": "_perform_strategy_analysis",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_analyze_currency_strength",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_analyze_related_pairs_confluence",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_detect_sequence_patterns",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_predict_regime_transition",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\strategies\\harmonic_pattern_strategy.py",
      "changes_made": [
        {
          "function": "_perform_strategy_analysis",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_generate_signals",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\strategies\\ma_crossover_strategy.py",
      "changes_made": [
        {
          "function": "generate_signals",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\strategies\\multi_timeframe_confluence_strategy.py",
      "changes_made": [
        {
          "function": "_perform_strategy_analysis",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_analyze_timeframe",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_analyze_price_action_alignment",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_analyze_indicator_alignment",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_analyze_momentum_alignment",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_generate_signals",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\strategies\\pivot_confluence_strategy.py",
      "changes_made": [
        {
          "function": "_find_confluence_zones",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\strategies\\volatility_breakout_strategy.py",
      "changes_made": [
        {
          "function": "_analyze_timeframe",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_analyze_currency_strength",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_analyze_related_pairs_confluence",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_detect_sequence_patterns",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_predict_regime_transition",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\trading\\feedback_collector.py",
      "changes_made": [
        {
          "function": "collect_execution_feedback",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_store_feedback",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\trading\\feedback_router.py",
      "changes_made": [
        {
          "function": "_convert_targets_to_enum",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_execute_route",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_route_strategy_params_feedback",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_route_model_retraining_feedback",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_route_market_regime_feedback",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_route_risk_management_feedback",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_route_execution_quality_feedback",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\trading\\paper_trading_coordinator.py",
      "changes_made": [
        {
          "function": "start",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_process_pending_signals",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_aggregate_signal",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_perform_pre_trade_risk_check",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_calculate_position_size",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_calculate_order_parameters",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_create_and_submit_order",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_update_order_statuses",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_collect_feedback",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_handle_outside_trading_hours",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_close_position",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_account_balance",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_market_data",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_position_updates",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\strategy_execution_engine\\trading\\trading_session_manager.py",
      "changes_made": [
        {
          "function": "_is_near_high_impact_news",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\tests\\test_simple_error.py",
      "changes_made": [
        {
          "function": "test_error_handling_with_try_except",
          "decorator": "with_exception_handling"
        },
        {
          "function": "function_with_try_except",
          "decorator": "with_exception_handling"
        },
        {
          "function": "test_error_handling_with_decorator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "error_handler",
          "decorator": "with_exception_handling"
        },
        {
          "function": "wrapper",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\tests\\clients\\test_feature_store_client.py",
      "changes_made": [
        {
          "function": "run_async_test",
          "decorator": "with_exception_handling"
        },
        {
          "function": "test_wrapper",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "strategy-execution-engine\\tests\\integration\\test_feature_store_integration.py",
      "changes_made": [
        {
          "function": "setUpClass",
          "decorator": "with_exception_handling"
        },
        {
          "function": "run_async_test",
          "decorator": "with_exception_handling"
        },
        {
          "function": "test_wrapper",
          "decorator": "async_with_exception_handling"
        }
      ]
    }
  ],
  "trading-gateway-service": [
    {
      "file": "trading-gateway-service\\update_datetime.py",
      "changes_made": [
        {
          "function": "update_datetime_utcnow",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\examples\\analysis_engine_adapter_example.py",
      "changes_made": [
        {
          "function": "main",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\database.py",
      "changes_made": [
        {
          "function": "connect",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "execute",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "fetch",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "fetchrow",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "fetchval",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "transaction",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\main.py",
      "changes_made": [
        {
          "function": "startup_event",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "shutdown_event",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\adapters\\analysis_engine_adapter.py",
      "changes_made": [
        {
          "function": "analyze_market",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_analysis_types",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "backtest_strategy",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "calculate_indicator",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_indicator_info",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "list_indicators",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "detect_market_regime",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_technical_indicators",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "recognize_patterns",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_pattern_types",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\adapters\\order_book_adapter.py",
      "changes_made": [
        {
          "function": "get_order_book",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "subscribe_order_book",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "unsubscribe_order_book",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\adapters\\risk_adapters.py",
      "changes_made": [
        {
          "function": "check_order",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "add_position",
          "decorator": "with_exception_handling"
        },
        {
          "function": "check_risk_limits",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_portfolio_metrics",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\adapters\\risk_manager_adapter.py",
      "changes_made": [
        {
          "function": "validate_order",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_position_risk",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_portfolio_risk",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\adapters\\rl_environment_adapter.py",
      "changes_made": [
        {
          "function": "reset",
          "decorator": "with_exception_handling"
        },
        {
          "function": "step",
          "decorator": "with_exception_handling"
        },
        {
          "function": "render",
          "decorator": "with_exception_handling"
        },
        {
          "function": "close",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\adapters\\trading_provider_adapter.py",
      "changes_made": [
        {
          "function": "place_order",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "cancel_order",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_order",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_orders",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\api\\v1\\adapter_api.py",
      "changes_made": [
        {
          "function": "place_order",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "cancel_order",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_order",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_order_book",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "check_risk",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\broker_adapters\\base_broker_adapter.py",
      "changes_made": [
        {
          "function": "_heartbeat_monitor",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_handle_connection_loss",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_reconcile_positions",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_process_queued_orders",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\broker_adapters\\ctrader_adapter.py",
      "changes_made": [
        {
          "function": "_authenticate",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "connect",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "disconnect",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_ws_listener",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "place_order",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "cancel_order",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "modify_order",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_positions",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_account_info",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "close_position",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "subscribe_to_updates",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\broker_adapters\\interactive_brokers_adapter.py",
      "changes_made": [
        {
          "function": "connect",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "disconnect",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "place_order",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "cancel_order",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "modify_order",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_positions",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_account_info",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "close_position",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "subscribe_to_updates",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "unsubscribe_from_updates",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\broker_adapters\\metatrader_adapter.py",
      "changes_made": [
        {
          "function": "connect",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "disconnect",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_init_symbol_info",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_send_heartbeat",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "place_order",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "cancel_order",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "modify_order",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_positions",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_account_info",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "close_position",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "subscribe_to_updates",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_monitor_updates",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\broker_adapters\\oanda_adapter.py",
      "changes_made": [
        {
          "function": "connect",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "disconnect",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_stream_listener",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "place_order",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "cancel_order",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "modify_order",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_positions",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "get_account_info",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "close_position",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "subscribe_to_updates",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\execution_algorithms\\base_algorithm.py",
      "changes_made": [
        {
          "function": "_trigger_callbacks",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\execution_algorithms\\implementation_shortfall.py",
      "changes_made": [
        {
          "function": "execute",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "cancel",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_market_conditions",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_execute_slices",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_place_slice_order",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\execution_algorithms\\smart_order_routing.py",
      "changes_made": [
        {
          "function": "execute",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_broker_quote",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_place_child_order",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\execution_algorithms\\twap.py",
      "changes_made": [
        {
          "function": "execute",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "cancel",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_execute_slices",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_place_slice_order",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\execution_algorithms\\vwap.py",
      "changes_made": [
        {
          "function": "execute",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "cancel",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_volume_profile",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_historical_volume_profile",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_predicted_volume_profile",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_realtime_volume_profile",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_execute_slices",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_place_slice_order",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\incidents\\emergency_action_system.py",
      "changes_made": [
        {
          "function": "execute_action",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_pause_all_trading",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_enable_circuit_breaker",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_close_risky_positions",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_disable_new_positions",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_attempt_reconnect",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_switch_to_backup",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_throttle_order_submission",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_pause_affected_instruments",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_switch_data_source",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_reconcile_positions",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_adjust_order_parameters",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_activate_backup_systems",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\incidents\\runbooks.py",
      "changes_made": [
        {
          "function": "load_runbooks",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\incidents\\trading_incident_manager.py",
      "changes_made": [
        {
          "function": "_send_notifications",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_call_handlers",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_apply_automated_mitigation",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\resilience\\degraded_mode.py",
      "changes_made": [
        {
          "function": "_report_status_change",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\resilience\\degraded_mode_strategies.py",
      "changes_made": [
        {
          "function": "enter_degraded_mode",
          "decorator": "with_exception_handling"
        },
        {
          "function": "exit_degraded_mode",
          "decorator": "with_exception_handling"
        },
        {
          "function": "start_processing",
          "decorator": "with_exception_handling"
        },
        {
          "function": "processing_loop",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_process_queue",
          "decorator": "with_exception_handling"
        },
        {
          "function": "configure_trading_gateway_degraded_mode",
          "decorator": "with_exception_handling"
        },
        {
          "function": "handle_degraded_status",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\services\\execution_analytics.py",
      "changes_made": [
        {
          "function": "stop",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "record_signal_processing",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "process_execution_report",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "record_market_snapshot",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_analyze_execution",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_nearest_market_snapshot",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_calculate_vwap_deviation",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_calculate_implementation_shortfall",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_market_vwap",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_benchmark_price",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_periodic_cleanup",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_cleanup_old_data",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_cleanup_old_snapshots",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\services\\execution_analytics_fixed.py",
      "changes_made": [
        {
          "function": "record_execution",
          "decorator": "with_exception_handling"
        },
        {
          "function": "record_signal",
          "decorator": "with_exception_handling"
        },
        {
          "function": "record_market_snapshot",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_analyze_execution",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_nearest_market_snapshot",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_calculate_vwap_deviation",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_calculate_implementation_shortfall",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_market_vwap",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_get_benchmark_price",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\services\\order_execution_service.py",
      "changes_made": [
        {
          "function": "connect",
          "decorator": "with_exception_handling"
        },
        {
          "function": "disconnect",
          "decorator": "with_exception_handling"
        },
        {
          "function": "place_order",
          "decorator": "with_exception_handling"
        },
        {
          "function": "cancel_order",
          "decorator": "with_exception_handling"
        },
        {
          "function": "modify_order",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\services\\order_reconciliation_service.py",
      "changes_made": [
        {
          "function": "stop",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_reconciliation_loop",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "perform_reconciliation",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_reconcile_orders",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_resolve_order_discrepancies",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_reconcile_positions",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_resolve_position_discrepancies",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_reconcile_account",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_resolve_account_discrepancies",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\services\\execution\\algorithm_execution_service.py",
      "changes_made": [
        {
          "function": "place_order",
          "decorator": "with_exception_handling"
        },
        {
          "function": "cancel_order",
          "decorator": "with_exception_handling"
        },
        {
          "function": "modify_order",
          "decorator": "with_exception_handling"
        },
        {
          "function": "get_algorithm_status",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_execute_with_algorithm",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "_create_algorithm_instance",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\services\\execution\\base_execution_service.py",
      "changes_made": [
        {
          "function": "_trigger_callbacks",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\services\\execution\\conditional_execution_service.py",
      "changes_made": [
        {
          "function": "place_order",
          "decorator": "with_exception_handling"
        },
        {
          "function": "cancel_order",
          "decorator": "with_exception_handling"
        },
        {
          "function": "modify_order",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\services\\execution\\limit_execution_service.py",
      "changes_made": [
        {
          "function": "place_order",
          "decorator": "with_exception_handling"
        },
        {
          "function": "cancel_order",
          "decorator": "with_exception_handling"
        },
        {
          "function": "modify_order",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\services\\execution\\market_execution_service.py",
      "changes_made": [
        {
          "function": "place_order",
          "decorator": "with_exception_handling"
        },
        {
          "function": "cancel_order",
          "decorator": "with_exception_handling"
        },
        {
          "function": "modify_order",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\services\\execution\\stop_execution_service.py",
      "changes_made": [
        {
          "function": "place_order",
          "decorator": "with_exception_handling"
        },
        {
          "function": "cancel_order",
          "decorator": "with_exception_handling"
        },
        {
          "function": "modify_order",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\simulation\\advanced_market_regime_simulator.py",
      "changes_made": [
        {
          "function": "_get_base_price",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\simulation\\dynamic_risk_manager.py",
      "changes_made": [
        {
          "function": "_get_market_conditions",
          "decorator": "with_exception_handling"
        },
        {
          "function": "save_configuration",
          "decorator": "with_exception_handling"
        },
        {
          "function": "load_configuration",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_initialize_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "save_model",
          "decorator": "with_exception_handling"
        },
        {
          "function": "load_model",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\simulation\\historical_news_data_collector.py",
      "changes_made": [
        {
          "function": "parse_csv_news_data",
          "decorator": "with_exception_handling"
        },
        {
          "function": "load_or_download_news_for_period",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_parse_value",
          "decorator": "with_exception_handling"
        },
        {
          "function": "convert_csv_format",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\simulation\\market_regime_simulator.py",
      "changes_made": [
        {
          "function": "generate_data_stream",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\simulation\\news_event_backtester.py",
      "changes_made": [
        {
          "function": "load_historical_news_events",
          "decorator": "with_exception_handling"
        },
        {
          "function": "run_backtest",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\simulation\\paper_trading_system.py",
      "changes_made": [
        {
          "function": "_health_check_loop",
          "decorator": "async_with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\simulation\\reinforcement_learning\\agent_benchmarking.py",
      "changes_made": [
        {
          "function": "export_scenarios",
          "decorator": "with_exception_handling"
        },
        {
          "function": "import_scenarios",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\simulation\\reinforcement_learning\\environment_generator.py",
      "changes_made": [
        {
          "function": "_open_position",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_close_position",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_get_current_price",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_update_prices",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_get_observation",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_calculate_reward",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "trading-gateway-service\\trading_gateway_service\\simulation\\reinforcement_learning\\training_module.py",
      "changes_made": [
        {
          "function": "train_on_scenario",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_make_serializable",
          "decorator": "with_exception_handling"
        }
      ]
    }
  ],
  "ui-service": [
    {
      "file": "ui-service\\components\\alerts_notification_system.py",
      "changes_made": [
        {
          "function": "send_notification",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "send_notification",
          "decorator": "async_with_exception_handling"
        },
        {
          "function": "load_rules_from_file",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ui-service\\components\\custom_dashboards.py",
      "changes_made": [
        {
          "function": "save_dashboard",
          "decorator": "with_exception_handling"
        },
        {
          "function": "load_dashboards",
          "decorator": "with_exception_handling"
        },
        {
          "function": "delete_dashboard",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ui-service\\components\\dashboard_components.py",
      "changes_made": [
        {
          "function": "_load_dashboards",
          "decorator": "with_exception_handling"
        },
        {
          "function": "_load_templates",
          "decorator": "with_exception_handling"
        }
      ]
    },
    {
      "file": "ui-service\\components\\visualization_adapter.py",
      "changes_made": [
        {
          "function": "calculate_indicator",
          "decorator": "with_exception_handling"
        },
        {
          "function": "render_indicator_visualization",
          "decorator": "with_exception_handling"
        },
        {
          "function": "analyze_indicator_confluence",
          "decorator": "async_with_exception_handling"
        }
      ]
    }
  ]
}
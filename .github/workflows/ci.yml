jobs:
  integration-tests:
    needs:
    - test-trading-gateway-service
    - test-portfolio-management-service
    - test-risk-management-service
    - test-data-pipeline-service
    - test-feature-store-service
    - test-ml-integration-service
    - test-ml-workbench-service
    - test-monitoring-alerting-service
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: pip install -r requirements.txt && pip install pytest pytest-cov
    - name: Run integration tests
      run: python scripts/comprehensive_integration_test.py
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: pip install flake8 black isort
    - name: Run linters
      run: flake8 . && black --check . && isort --check .
  security-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: pip install bandit safety
    - name: Run security scans
      run: bandit -r . && safety check
  test-data-pipeline-service:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: pip install -r requirements.txt && pip install pytest pytest-cov
    - name: Run tests
      run: pytest data-pipeline-service/tests --cov=data-pipeline-service --cov-report=xml
    - name: Upload coverage report
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true
        file: ./coverage.xml
        flags: data-pipeline-service
  test-feature-store-service:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: pip install -r requirements.txt && pip install pytest pytest-cov
    - name: Run tests
      run: pytest feature-store-service/tests --cov=feature-store-service --cov-report=xml
    - name: Upload coverage report
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true
        file: ./coverage.xml
        flags: feature-store-service
  test-ml-integration-service:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: pip install -r requirements.txt && pip install pytest pytest-cov
    - name: Run tests
      run: pytest ml-integration-service/tests --cov=ml-integration-service --cov-report=xml
    - name: Upload coverage report
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true
        file: ./coverage.xml
        flags: ml-integration-service
  test-ml-workbench-service:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: pip install -r requirements.txt && pip install pytest pytest-cov
    - name: Run tests
      run: pytest ml-workbench-service/tests --cov=ml-workbench-service --cov-report=xml
    - name: Upload coverage report
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true
        file: ./coverage.xml
        flags: ml-workbench-service
  test-monitoring-alerting-service:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: pip install -r requirements.txt && pip install pytest pytest-cov
    - name: Run tests
      run: pytest monitoring-alerting-service/tests --cov=monitoring-alerting-service
        --cov-report=xml
    - name: Upload coverage report
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true
        file: ./coverage.xml
        flags: monitoring-alerting-service
  test-portfolio-management-service:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: pip install -r requirements.txt && pip install pytest pytest-cov
    - name: Run tests
      run: pytest portfolio-management-service/tests --cov=portfolio-management-service
        --cov-report=xml
    - name: Upload coverage report
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true
        file: ./coverage.xml
        flags: portfolio-management-service
  test-risk-management-service:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: pip install -r requirements.txt && pip install pytest pytest-cov
    - name: Run tests
      run: pytest risk-management-service/tests --cov=risk-management-service --cov-report=xml
    - name: Upload coverage report
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true
        file: ./coverage.xml
        flags: risk-management-service
  test-trading-gateway-service:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: pip install -r requirements.txt && pip install pytest pytest-cov
    - name: Run tests
      run: pytest trading-gateway-service/tests --cov=trading-gateway-service --cov-report=xml
    - name: Upload coverage report
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true
        file: ./coverage.xml
        flags: trading-gateway-service
name: Continuous Integration
'on':
  pull_request:
    branches:
    - main
    - develop
  push:
    branches:
    - main
    - develop
